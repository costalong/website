const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":235,\"nextId\":235,\"documentIds\":{\"0\":\"0\",\"1\":\"0#文档\",\"2\":\"0@1\",\"3\":\"1\",\"4\":\"1#pages\",\"5\":\"1#content\",\"6\":\"1#configuration\",\"7\":\"1#layouts-and-customization\",\"8\":\"1@1\",\"9\":\"2\",\"10\":\"2#安装\",\"11\":\"2@1\",\"12\":\"3\",\"13\":\"3@0\",\"14\":\"3@1\",\"15\":\"4\",\"16\":\"4@0\",\"17\":\"4@1\",\"18\":\"5\",\"19\":\"5@0\",\"20\":\"5@1\",\"21\":\"6\",\"22\":\"6@0\",\"23\":\"6@1\",\"24\":\"7\",\"25\":\"7@0\",\"26\":\"7@1\",\"27\":\"8\",\"28\":\"8#markdown-introduction\",\"29\":\"8#markdown-config\",\"30\":\"8#markdown-extension\",\"31\":\"8#vuepress-enhancement\",\"32\":\"8#theme-enhancement\",\"33\":\"8#tabs\",\"34\":\"8#footnote\",\"35\":\"8#include-files\",\"36\":\"8#reveal-js\",\"37\":\"8#slide-1\",\"38\":\"8#slide-2\",\"39\":\"8#slide-3-1\",\"40\":\"8#slide-3-2\",\"41\":\"8#tex\",\"42\":\"8#tasklist\",\"43\":\"8#image-enhancement\",\"44\":\"8#superscript-and-subscript\",\"45\":\"8#component\",\"46\":\"8#hint-box-and-gfm-alerts\",\"47\":\"8#align\",\"48\":\"8#attrs\",\"49\":\"8#mark\",\"50\":\"8#spoiler\",\"51\":\"8#stylize\",\"52\":\"8#chart-js\",\"53\":\"8#echarts\",\"54\":\"8#flowchart\",\"55\":\"8#markmap\",\"56\":\"8#mermaid\",\"57\":\"8#plantuml\",\"58\":\"8#code-tabs\",\"59\":\"8#code-demo\",\"60\":\"8#playground\",\"61\":\"8#kotlin-playground\",\"62\":\"8#vue-playground\",\"63\":\"8#sandpack-playground\",\"64\":\"8@0\",\"65\":\"8@1\",\"66\":\"9\",\"67\":\"9#page-title\",\"68\":\"9#page-information\",\"69\":\"9#page-content\",\"70\":\"9#components\",\"71\":\"9@0\",\"72\":\"9@1\",\"73\":\"10\",\"74\":\"10#golang-的介绍\",\"75\":\"10@1\",\"76\":\"11\",\"77\":\"11@1\",\"78\":\"12\",\"79\":\"12#使用-github-安装-giscus\",\"80\":\"12#参考我文档\",\"81\":\"12@0\",\"82\":\"12@1\",\"83\":\"13\",\"84\":\"13#slices-库\",\"85\":\"13#slices-库包含的函数可以分为以下类型\",\"86\":\"13#搜索-binarysearch-和-binarysearchfunc\",\"87\":\"13#裁剪-clip\",\"88\":\"13#克隆-clone\",\"89\":\"13#压缩-compact-和-compactfunc\",\"90\":\"13#大小比较-compare-和-comparefunc\",\"91\":\"13#参考\",\"92\":\"13@1\",\"93\":\"14\",\"94\":\"14#部署-sentry-k8s\",\"95\":\"14#安装\",\"96\":\"14#使用代码\",\"97\":\"14#文档\",\"98\":\"14@1\",\"99\":\"15\",\"100\":\"15#goconvey-是什么\",\"101\":\"15#goconvey-的使用\",\"102\":\"15#安装\",\"103\":\"15#使用\",\"104\":\"15#_1-在项目根目录下创建-goconvey-的配置文件-goconvey-conf\",\"105\":\"15@1\",\"106\":\"16\",\"107\":\"16#简介\",\"108\":\"16#安装使用\",\"109\":\"16#安装-mockgen\",\"110\":\"16#go-version-1-16\",\"111\":\"16#go-1-16\",\"112\":\"16#mockgen辅助代码生成工具安装\",\"113\":\"16#mockgen-的参数说明\",\"114\":\"16#例子\",\"115\":\"16#_1-定义-user-service-go\",\"116\":\"16#_2-命令为接口生成-mock-实现\",\"117\":\"16#_3-生成-user-service-mock-go-文件-该文件在-mock-目录下-因为设置的-destination-参数为-mock-user-service-mock-go\",\"118\":\"16#_4-编辑写测试文件-user-service-test-go\",\"119\":\"16#_5-测试\",\"120\":\"16#_6-测试覆盖率\",\"121\":\"16#_7-可视化界面\",\"122\":\"16#mock-gomock-中使用函数说明\",\"123\":\"16#_1-自定义参数\",\"124\":\"16#_2-自定义返回值\",\"125\":\"16#_3-自定义mock调用次数\",\"126\":\"16#_4-自定义mock调用顺序\",\"127\":\"16#注意-如果定义的-interface-包含另外一个-interface-并且不是同一个文件的情况\",\"128\":\"16#参考\",\"129\":\"16@1\",\"130\":\"17\",\"131\":\"17#简介\",\"132\":\"17#gomonkey支持的特性以及使用方法\",\"133\":\"17#使用\",\"134\":\"17#安装-gomonkey\",\"135\":\"17#例子\",\"136\":\"17#为变量打桩\",\"137\":\"17#成员方法打桩\",\"138\":\"17#注意\",\"139\":\"17#参考文档\",\"140\":\"17@1\",\"141\":\"18\",\"142\":\"18#安装\",\"143\":\"18#案例\",\"144\":\"18#参考文档\",\"145\":\"18@1\",\"146\":\"19\",\"147\":\"19#简介\",\"148\":\"19#使用说明\",\"149\":\"19#参考\",\"150\":\"19@1\",\"151\":\"20\",\"152\":\"20#apisix\",\"153\":\"20#参考\",\"154\":\"20@0\",\"155\":\"20@1\",\"156\":\"21\",\"157\":\"21#traefik\",\"158\":\"21@0\",\"159\":\"21@1\",\"160\":\"22\",\"161\":\"22#_1-master-一直处于-notready-状态\",\"162\":\"22#kubernets的报错-0-2-nodes-are-available-1-node-s-had-taint-env-role-that-the-pod-didn-t-tolerate-1-node-s-had-taint-node-role-kubernetes-io-master-that-the-pod-didn-t-tolerate\",\"163\":\"22@0\",\"164\":\"22@1\",\"165\":\"23\",\"166\":\"23#_1-准备包环境\",\"167\":\"23#_1-1-更新-apt-包索引\",\"168\":\"23#_1-2-同步时间\",\"169\":\"23#_1-3-关闭selinux及nfs\",\"170\":\"23#_1-4-关闭swap\",\"171\":\"23#_1-5-设置内核参数\",\"172\":\"23#_1-6-配置支持ipvs\",\"173\":\"23#_2-安装-containerd\",\"174\":\"23#_2-1-使用二进制安装\",\"175\":\"23#_2-1-1-下载二进制文件\",\"176\":\"23#_2-安装k8s\",\"177\":\"23#生成配置文件\",\"178\":\"23#修配置文件\",\"179\":\"23#初始化集群\",\"180\":\"23#下载镜像\",\"181\":\"23#kubeadm初始化集群\",\"182\":\"23#问题排查\",\"183\":\"23#配置kubectl\",\"184\":\"23#部署网络插件\",\"185\":\"23#添加节点\",\"186\":\"23#查看集群状态\",\"187\":\"23#参考\",\"188\":\"23@0\",\"189\":\"23@1\",\"190\":\"24\",\"191\":\"24#pod-是-k8s-的最小单位\",\"192\":\"24@0\",\"193\":\"24@1\",\"194\":\"25\",\"195\":\"25@0\",\"196\":\"25@1\",\"197\":\"26\",\"198\":\"26#helm-使用\",\"199\":\"26#_1-安装-helm\",\"200\":\"26#参考文档\",\"201\":\"26@0\",\"202\":\"26@1\",\"203\":\"27\",\"204\":\"27#kubecm-使用\",\"205\":\"27#_1-安装-kubecm\",\"206\":\"27#_2-配置-kubecm\",\"207\":\"27#_3-kubecm-使用\",\"208\":\"27#文档\",\"209\":\"27@0\",\"210\":\"27@1\",\"211\":\"28\",\"212\":\"28@1\",\"213\":\"29\",\"214\":\"29@1\",\"215\":\"30\",\"216\":\"30@1\",\"217\":\"31\",\"218\":\"31@1\",\"219\":\"32\",\"220\":\"32@1\",\"221\":\"33\",\"222\":\"33@1\",\"223\":\"34\",\"224\":\"34@1\",\"225\":\"35\",\"226\":\"35@1\",\"227\":\"36\",\"228\":\"36@1\",\"229\":\"37\",\"230\":\"37@1\",\"231\":\"38\",\"232\":\"38@1\",\"233\":\"39\",\"234\":\"39@1\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,17],\"1\":[1,18],\"2\":[null,null,1],\"3\":[2,10],\"4\":[1,24],\"5\":[1,28],\"6\":[1,29],\"7\":[3,28],\"8\":[null,null,1],\"9\":[2],\"10\":[1,21],\"11\":[null,null,1],\"12\":[1],\"13\":[null,null,1],\"14\":[null,null,1],\"15\":[2],\"16\":[null,null,1],\"17\":[null,null,1],\"18\":[4,40],\"19\":[null,null,1],\"20\":[null,null,1],\"21\":[2,10],\"22\":[null,null,1],\"23\":[null,null,1],\"24\":[1,44],\"25\":[null,null,1],\"26\":[null,null,1],\"27\":[2,32],\"28\":[2,19],\"29\":[2,25],\"30\":[2,18],\"31\":[2,16],\"32\":[2,18],\"33\":[1,2],\"34\":[1,7],\"35\":[2,2],\"36\":[2,2],\"37\":[2,8],\"38\":[2,3],\"39\":[3,5],\"40\":[3,7],\"41\":[1,11],\"42\":[1,6],\"43\":[2,8],\"44\":[3,4],\"45\":[1,24],\"46\":[5,26],\"47\":[1,7],\"48\":[1,6],\"49\":[1,7],\"50\":[1,7],\"51\":[1,9],\"52\":[2,28],\"53\":[1,28],\"54\":[1,2],\"55\":[1,64],\"56\":[1,2],\"57\":[1,37],\"58\":[2,2],\"59\":[2,2],\"60\":[1,43],\"61\":[2,28],\"62\":[2,29],\"63\":[2,35],\"64\":[null,null,1],\"65\":[null,null,1],\"66\":[2,10],\"67\":[2,20],\"68\":[2,27],\"69\":[2,30],\"70\":[1,29],\"71\":[null,null,1],\"72\":[null,null,3],\"73\":[2],\"74\":[2,2],\"75\":[null,null,1],\"76\":[2,1],\"77\":[null,null,1],\"78\":[2],\"79\":[4,70],\"80\":[1,1],\"81\":[null,null,1],\"82\":[null,null,1],\"83\":[3],\"84\":[2,12],\"85\":[2,68],\"86\":[4,81],\"87\":[2,28],\"88\":[2,28],\"89\":[4,56],\"90\":[4,61],\"91\":[1,1],\"92\":[null,null,1],\"93\":[3,10],\"94\":[4,85],\"95\":[1,6],\"96\":[2,240],\"97\":[1,3],\"98\":[null,null,1],\"99\":[3],\"100\":[2,13],\"101\":[2],\"102\":[1,9],\"103\":[1],\"104\":[5,7],\"105\":[null,null,1],\"106\":[3],\"107\":[1,9],\"108\":[1],\"109\":[2],\"110\":[5,11],\"111\":[3,10],\"112\":[1,8],\"113\":[2,83],\"114\":[1],\"115\":[5,34],\"116\":[4,8],\"117\":[12,79],\"118\":[6,99],\"119\":[2,21],\"120\":[2,25],\"121\":[2,36],\"122\":[3,3],\"123\":[3,28],\"124\":[3,32],\"125\":[3,39],\"126\":[3,38],\"127\":[5,70],\"128\":[1,6],\"129\":[null,null,1],\"130\":[3],\"131\":[1,16],\"132\":[1,44],\"133\":[1],\"134\":[2,9],\"135\":[1,88],\"136\":[1,40],\"137\":[1,95],\"138\":[1,31],\"139\":[1,3],\"140\":[null,null,1],\"141\":[3,18],\"142\":[1,7],\"143\":[1,110],\"144\":[1,10],\"145\":[null,null,1],\"146\":[3],\"147\":[1,8],\"148\":[1,9],\"149\":[1,5],\"150\":[null,null,1],\"151\":[2],\"152\":[1,13],\"153\":[1,1],\"154\":[null,null,1],\"155\":[null,null,1],\"156\":[2],\"157\":[1,11],\"158\":[null,null,1],\"159\":[null,null,1],\"160\":[2],\"161\":[5,136],\"162\":[7,54],\"163\":[null,null,1],\"164\":[null,null,1],\"165\":[1],\"166\":[2],\"167\":[4,3],\"168\":[3,15],\"169\":[3,18],\"170\":[3,18],\"171\":[3,30],\"172\":[3,31],\"173\":[3],\"174\":[3],\"175\":[3,247],\"176\":[2,66],\"177\":[2,7],\"178\":[2,102],\"179\":[2,5],\"180\":[1,28],\"181\":[1,280],\"182\":[1,37],\"183\":[1,17],\"184\":[1,21],\"185\":[1,16],\"186\":[1,3],\"187\":[1,5],\"188\":[null,null,1],\"189\":[null,null,1],\"190\":[2],\"191\":[4],\"192\":[null,null,2],\"193\":[null,null,1],\"194\":[2],\"195\":[null,null,2],\"196\":[null,null,1],\"197\":[2],\"198\":[2],\"199\":[3,21],\"200\":[2,1],\"201\":[null,null,1],\"202\":[null,null,1],\"203\":[2],\"204\":[2,4],\"205\":[3,51],\"206\":[3,14],\"207\":[3,13],\"208\":[1,1],\"209\":[null,null,1],\"210\":[null,null,1],\"211\":[1,3],\"212\":[null,null,1],\"213\":[1],\"214\":[null,null,1],\"215\":[1],\"216\":[null,null,1],\"217\":[1],\"218\":[null,null,1],\"219\":[1],\"220\":[null,null,1],\"221\":[1],\"222\":[null,null,1],\"223\":[1],\"224\":[null,null,1],\"225\":[1],\"226\":[null,null,1],\"227\":[1],\"228\":[null,null,1],\"229\":[1],\"230\":[null,null,1],\"231\":[1],\"232\":[null,null,1],\"233\":[1],\"234\":[null,null,1]},\"averageFieldLength\":[1.9965295063369077,27.773830166595197,0.7950425480862122],\"storedFields\":{\"0\":{\"h\":\"Home\",\"t\":[\"This is the content of home page. Check [Home Page Docs][default-theme-home] for more details.\"]},\"1\":{\"h\":\"文档\",\"t\":[\"[default-theme-home]: （!https://vuejs.press/)\",\"[文档]: （!https://theme-hope.vuejs.press/zh/config/theme/basic.html)\",\"[文档]: （!https://stackblitz.com/edit/vuepress-theme-hope-crnleh)\"]},\"2\":{\"c\":[]},\"3\":{\"h\":\"Get Started\",\"t\":[\"This is a normal page, which contains VuePress basics.\"]},\"4\":{\"h\":\"Pages\",\"t\":[\"You can add markdown files in your vuepress directory, every markdown file will be converted to a page in your site.\",\"See routing for more details.\"]},\"5\":{\"h\":\"Content\",\"t\":[\"Every markdown file will be rendered to HTML, then converted to a Vue SFC.\",\"VuePress support basic markdown syntax and some extensions, you can also use Vue features in it.\"]},\"6\":{\"h\":\"Configuration\",\"t\":[\"VuePress use a .vuepress/config.js(or .ts) file as site configuration, you can use it to config your site.\",\"For client side configuration, you can create .vuepress/client.js(or .ts).\",\"Meanwhile, you can also add configuration per page with frontmatter.\"]},\"7\":{\"h\":\"Layouts and customization\",\"t\":[\"Here are common configuration controlling layout of @vuepress/theme-default:\",\"navbar\",\"sidebar\",\"Check default theme docs for full reference.\",\"You can add extra style with .vuepress/styles/index.scss file.\"]},\"8\":{\"c\":[]},\"9\":{\"h\":\"vuepress 安装主题\"},\"10\":{\"h\":\"安装\",\"t\":[\"npm install vuepress@next vuepress-theme-reco@next --save-dev # or yarn add vuepress@next vuepress-theme-reco@next\",\"// .vuepress/config.ts import { defineUserConfig } from 'vuepress' import { recoTheme } from 'vuepress-theme-reco' export default defineUserConfig({ theme: recoTheme({ // options }) })\"]},\"11\":{\"c\":[]},\"12\":{\"h\":\"计算机基础必读经典书籍\"},\"13\":{\"c\":[\"计算机书籍\"]},\"14\":{\"c\":[]},\"15\":{\"h\":\"Features demo\"},\"16\":{\"c\":[\"Guide\"]},\"17\":{\"c\":[]},\"18\":{\"h\":\"Disabling layout and features\",\"t\":[\"You can disable some function and layout on the page by setting the Frontmatter of the page.\",\"This page is an demo that disables the following features:\",\"Navbar\",\"Sidebar\",\"Breadcrumb\",\"Page information\",\"Contributors\",\"Edit link\",\"Update time\",\"Prev/Next link\",\"Comment\",\"Footer\",\"Back to top button\"]},\"19\":{\"c\":[\"Guide\"]},\"20\":{\"c\":[\"disable\"]},\"21\":{\"h\":\"Encryption Article\",\"t\":[\"The actual article content.\",\"Paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text.\",\"Paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text.\"]},\"22\":{\"c\":[\"Guide\"]},\"23\":{\"c\":[\"encryption\"]},\"24\":{\"h\":\"Layout\",\"t\":[\"The layout contains:\",\"Navbar\",\"Sidebar\",\"Footer\",\"Also each page can contain:\",\"BreadCrumb\",\"Title and information\",\"TOC (Table of Contents)\",\"Meta information including update time and contributors\",\"Comments\",\"The theme also has the following elements:\",\"Darkmode button\",\"Back to top button\",\"Print button\",\"You can customize them in theme options and page frontmatter.\"]},\"25\":{\"c\":[\"Guide\"]},\"26\":{\"c\":[\"Layout\"]},\"27\":{\"h\":\"Markdown Enhance\",\"t\":[\"VuePress basically generate pages from Markdown files. So you can use it to generate documentation or blog sites easily.\",\"You should create and write Markdown files, so that VuePress can convert them to different pages according to file structure.\"]},\"28\":{\"h\":\"Markdown Introduction\",\"t\":[\"If you are a new learner and don't know how to write Markdown, please read Markdown Intro and Markdown Demo.\"]},\"29\":{\"h\":\"Markdown Config\",\"t\":[\"VuePress introduce configuration for each markdown page using Frontmatter.\",\"Frontmatter\",\"Frontmatter is an important concept in VuePress. If you don't know it, you need to read Frontmatter Introduction.\"]},\"30\":{\"h\":\"Markdown Extension\",\"t\":[\"The Markdown content in VuePress will be parsed by markdown-it, which supports syntax extensions via markdown-it plugins.\"]},\"31\":{\"h\":\"VuePress Enhancement\",\"t\":[\"To enrich document writing, VuePress has extended Markdown syntax.\",\"For these extensions, please read Markdown extensions in VuePress.\"]},\"32\":{\"h\":\"Theme Enhancement\",\"t\":[\"By using vuepress-plugin-md-enhance, the theme extends more Markdown syntax and provides richer writing functions.\"]},\"33\":{\"h\":\"Tabs\",\"t\":[\"View Detail\"]},\"34\":{\"h\":\"Footnote\",\"t\":[\"This text has footnote[1].\",\"View Detail\"]},\"35\":{\"h\":\"Include files\",\"t\":[\"View Detail\"]},\"36\":{\"h\":\"Reveal.js\",\"t\":[\"@slidestart\"]},\"37\":{\"h\":\"Slide 1\",\"t\":[\"A paragraph with some text and a link\"]},\"38\":{\"h\":\"Slide 2\",\"t\":[\"Item 1\",\"Item 2\"]},\"39\":{\"h\":\"Slide 3.1\",\"t\":[\"const a = 1;\",\"--\"]},\"40\":{\"h\":\"Slide 3.2\",\"t\":[\"J(θ0​,θ1​)=i=0∑​\",\"@slideend\",\"View Detail\"]},\"41\":{\"h\":\"TeX\",\"t\":[\"∂ωr∂r​(ωyω​)=(ωyω​){(logy)r+i=1∑r​ωi(−1)ir⋯(r−i+1)(logy)r−i​}\",\"View Detail\"]},\"42\":{\"h\":\"Tasklist\",\"t\":[\" Plan A\",\" Plan B\",\"View Detail\"]},\"43\":{\"h\":\"Image Enhancement\",\"t\":[\"Support setting color scheme and size.\",\"View Detail\"]},\"44\":{\"h\":\"Superscript and Subscript\",\"t\":[\"19th H2O\",\"View Detail\"]},\"45\":{\"h\":\"Component\",\"t\":[\"title: Mr.Hope desc: Where there is light, there is hope logo: https://mister-hope.com/logo.svg link: https://mister-hope.com background: rgba(253, 230, 138, 0.15)\",\"View Detail\"]},\"46\":{\"h\":\"Hint box and GFM alerts\",\"t\":[\"Safely use {{ variable }} in Markdown.\",\"Custom Title\",\"A custom information container with code, link.\",\"const a = 1;\",\"Custom Title\",\"A custom tip container\",\"Custom Title\",\"A custom warning container\",\"Custom Title\",\"A custom caution container\",\"Custom Title\",\"A custom details container\",\"GitHub Alert\",\"Hint boxes\"]},\"47\":{\"h\":\"Align\",\"t\":[\"I am center\",\"I am right align\",\"View Detail\"]},\"48\":{\"h\":\"Attrs\",\"t\":[\"A word having id.\",\"View Detail\"]},\"49\":{\"h\":\"Mark\",\"t\":[\"You can mark important words .\",\"View Detail\"]},\"50\":{\"h\":\"Spoiler\",\"t\":[\"VuePress Theme Hope is !!powerful!!.\",\"View Detail\"]},\"51\":{\"h\":\"Stylize\",\"t\":[\"Donate Mr.Hope a cup of coffee. \",\"View Detail\"]},\"52\":{\"h\":\"Chart.js\",\"t\":[\"::: chart A Scatter Chart\",\"{ \\\"type\\\": \\\"scatter\\\", \\\"data\\\": { \\\"datasets\\\": [ { \\\"label\\\": \\\"Scatter Dataset\\\", \\\"data\\\": [ { \\\"x\\\": -10, \\\"y\\\": 0 }, { \\\"x\\\": 0, \\\"y\\\": 10 }, { \\\"x\\\": 10, \\\"y\\\": 5 }, { \\\"x\\\": 0.5, \\\"y\\\": 5.5 } ], \\\"backgroundColor\\\": \\\"rgb(255, 99, 132)\\\" } ] }, \\\"options\\\": { \\\"scales\\\": { \\\"x\\\": { \\\"type\\\": \\\"linear\\\", \\\"position\\\": \\\"bottom\\\" } } } }\",\":::\",\"View Detail\"]},\"53\":{\"h\":\"ECharts\",\"t\":[\"::: echarts A line chart\",\"{ \\\"xAxis\\\": { \\\"type\\\": \\\"category\\\", \\\"data\\\": [\\\"Mon\\\", \\\"Tue\\\", \\\"Wed\\\", \\\"Thu\\\", \\\"Fri\\\", \\\"Sat\\\", \\\"Sun\\\"] }, \\\"yAxis\\\": { \\\"type\\\": \\\"value\\\" }, \\\"series\\\": [ { \\\"data\\\": [150, 230, 224, 218, 135, 147, 260], \\\"type\\\": \\\"line\\\" } ] }\",\":::\",\"View Detail\"]},\"54\":{\"h\":\"Flowchart\",\"t\":[\"View Detail\"]},\"55\":{\"h\":\"MarkMap\",\"t\":[\"--- markmap: colorFreezeLevel: 2 --- # markmap ## Links - <https://markmap.js.org/> - [GitHub](https://github.com/gera2ld/markmap) ## Related Projects - [coc-markmap](https://github.com/gera2ld/coc-markmap) - [gatsby-remark-markmap](https://github.com/gera2ld/gatsby-remark-markmap) ## Features - links - **strong** ~~del~~ *italic* ==highlight== - multiline text - `inline code` - ```js console.log('code block'); ``` - Katex - $x = {-b \\\\pm \\\\sqrt{b^2-4ac} \\\\over 2a}$ - [More Katex Examples](#?d=gist:af76a4c245b302206b16aec503dbe07b:katex.md) - Now we can wrap very very very very long text based on `maxWidth` option\",\"View Detail\"]},\"56\":{\"h\":\"Mermaid\",\"t\":[\"View Detail\"]},\"57\":{\"h\":\"PlantUML\",\"t\":[\"@startuml Alice -> Bob: Authentication Request\",\"alt successful case\",\"Bob -> Alice: Authentication Accepted \",\"else some kind of failure\",\"Bob -> Alice: Authentication Failure group My own label Alice -> Log : Log attack start loop 1000 times Alice -> Bob: DNS Attack end Alice -> Log : Log attack end end \",\"else Another type of failure\",\"Bob -> Alice: Please repeat\",\"end @enduml\",\"View Detail\"]},\"58\":{\"h\":\"Code Tabs\",\"t\":[\"View Detail\"]},\"59\":{\"h\":\"Code Demo\",\"t\":[\"View Detail\"]},\"60\":{\"h\":\"Playground\",\"t\":[\"::: playground#unocss UnoCSS demo\",\"@file index.html\",\"<div class=\\\"flex flex-col text-center h-full justify-center\\\"> <div class=\\\"text-red\\\">TEST for default preset</div> <div class=\\\"text-$fd-color\\\">TEST for custom css</div> </div>\",\"@file config.js\",\"import { defineConfig, presetUno } from \\\"unocss\\\"; export default defineConfig({ presets: [presetUno()], });\",\"@file custom.css\",\":root { --fd-color: green; }\",\":::\",\"View Detail\"]},\"61\":{\"h\":\"Kotlin Playground\",\"t\":[\"::: kotlin-playground Simple Playground\",\"@file main.kt\",\"class Contact(val id: Int, var email: String) fun main(args: Array<String>) { val contact = Contact(1, \\\"mary@gmail.com\\\") println(contact.id) }\",\":::\",\"View Detail\"]},\"62\":{\"h\":\"Vue Playground\",\"t\":[\"::: vue-playground Vue Playground\",\"@file App.vue\",\"<script setup> import { ref } from \\\"vue\\\"; const msg = ref(\\\"Hello World!\\\"); </script> <template> <h1>{{ msg }}</h1> <input v-model=\\\"msg\\\" /> </template>\",\":::\",\"View Detail\"]},\"63\":{\"h\":\"Sandpack Playground\",\"t\":[\"::: sandpack#vue Vue Demo\",\"@file /src/App.vue\",\"<script setup> import { ref } from \\\"vue\\\"; const msg = ref(\\\"Hello Playground!\\\"); </script> <template> <h1>{{ msg }}</h1> <input v-model=\\\"msg\\\" /> </template>\",\":::\",\"View Detail\",\"This is footnote content ↩︎\"]},\"64\":{\"c\":[\"Guide\"]},\"65\":{\"c\":[\"Markdown\"]},\"66\":{\"h\":\"Page Config\",\"t\":[\"Content before more comment is regarded as page excerpt.\"]},\"67\":{\"h\":\"Page Title\",\"t\":[\"The first H1 title in Markdown will be regarded as page title.\",\"You can also set title in Markdown's Frontmatter:\",\"--- title: Page Title ---\"]},\"68\":{\"h\":\"Page Information\",\"t\":[\"You can set page information in Markdown's Frontmatter.\",\"The author is Ms.Hope.\",\"The writing date is January 1, 2020\",\"Category is \\\"Guide\\\"\",\"Tags are \\\"Page Config\\\" and \\\"Guide\\\"\"]},\"69\":{\"h\":\"Page Content\",\"t\":[\"You are free to write your Markdown here.\",\"Assets\",\"You can place images besides your Markdown files nd use relative links.\",\"For images in .vuepress/public directory, please use absolute links (i.e.: starting with /).\"]},\"70\":{\"h\":\"Components\",\"t\":[\"Each markdown page is converted into a Vue component, which means you can use Vue syntax in Markdown:\",\"{{ 1 + 1 }}\",\"{{ i }}\",\"You can also create and import your own components.\"]},\"71\":{\"c\":[\"Guide\"]},\"72\":{\"c\":[\"Page config\",\"Guide\"]},\"73\":{\"h\":\"golang 语言的介绍\"},\"74\":{\"h\":\"golang 的介绍\",\"t\":[\"golang 是强类型的语言\"]},\"75\":{\"c\":[]},\"76\":{\"h\":\"k8s 的介绍\",\"t\":[\"11111\"]},\"77\":{\"c\":[]},\"78\":{\"h\":\"gitcus 使用\"},\"79\":{\"h\":\"使用 github 安装 giscus\",\"t\":[\"安装地址： giscus 安装地址\",\"安装\",\"选择使用项目\",\"安装\",\"开启 Discussions 功能\",\"点击项目 Setting 功能\",\"设置\",\"往下滑动到 Features 部分，找到 Discussions 多选择，把复选框选中,\",\"20240725233240\",\"获取项目的分类与分类id\",\"点击进入 滑动“仓库”位置，输入你开启的discussion 的仓库信息\",\"20240725233726\",\"在往下滑找到 启用 giscus 找到\",\"<script src=\\\"https://giscus.app/client.js\\\" data-repo=\\\"[在此输入仓库]\\\" data-repo-id=\\\"[在此输入仓库 ID]\\\" data-category=\\\"[在此输入分类名]\\\" data-category-id=\\\"[在此输入分类 ID]\\\" data-mapping=\\\"pathname\\\" data-strict=\\\"0\\\" data-reactions-enabled=\\\"1\\\" data-emit-metadata=\\\"0\\\" data-input-position=\\\"bottom\\\" data-theme=\\\"preferred_color_scheme\\\" data-lang=\\\"zh-CN\\\" crossorigin=\\\"anonymous\\\" async> </script>\",\"找相应的信息后，在配置 giscus 评论系统\"]},\"80\":{\"h\":\"参考我文档\",\"t\":[\"官方地址\"]},\"81\":{\"c\":[\"web\"]},\"82\":{\"c\":[]},\"83\":{\"h\":\"golang slices 包\"},\"84\":{\"h\":\"slices 库\",\"t\":[\"在 Go 1.21.0 版本中，引入了 切片泛型库，即 slices 包。\"]},\"85\":{\"h\":\"slices 库包含的函数可以分为以下类型\",\"t\":[\"搜索：通过二分查找算法查找指定元素。相关的函数有 BinarySearch 和 BinarySearchFunc\",\"裁剪：删除切片中未使用的容量。相关的函数有 Clip\",\"克隆：浅拷贝一个切片副本。相关的的函数有：Clone\",\"压缩：将切片里连续的相同元素替换为一个元素。从而减少了切片的长度，相关的函数有：Compact 和 CompactFunc\",\"大小比较：比较两个切片的大小。相关的函数有 Compare 和 CompareFunc\",\"包含：判断切片是否包含指定元素。相关的函数有：Contains 和 ContainsFunc\",\"删除：从切片中删除一个或多个元素。相关的函数有 Delete 和 DeleteFunc\",\"等价比较：比较两个切片是否相等。相关的函数有：Equal 和 EqualFunc\",\"扩容：增加切片的容量。相关的函数有：Grow\",\"索引查找：查找指定元素在切片中的索引位置。相关的函数有：Index 和 IndexFunc\",\"插入：往切片里插入一组值。相关的函数有：Insert\",\"有序判断：判断切片是否按照升序排列。相关的函数有：IsSorted 和 IsSortedFunc\",\"最大值：查找切片里的最大元素。相关的函数有：Max 和 MaxFunc\",\"最小值：查找切片里的最小元素。相关的函数有：Min 和 MinFunc\",\"替换：替换切片里的元素。相关的函数有：Replace\",\"反转：反转切片的元素。相关的函数有：Reverse\",\"排序：对切片里的元素进行升序排列。相关的函数有：Sort 和 SortFunc 以及 SortStableFunc\"]},\"86\":{\"h\":\"搜索：BinarySearch 和 BinarySearchFunc\",\"t\":[\"搜索：BinarySearch\",\"函数用于在有序的切片中 查找 目标元素，并返回其在切片中的 位置。该函数有两个返回值，第一个是指定元素的下标索引，第二个是一个 bool 值，表示是否在切片中找到指定元素。\",\"package main import ( \\\"fmt\\\" \\\"slices\\\" ) func main() { scores := []int{70, 85, 90, 95, 98, 99, 100} idx, b := slices.BinarySearch(scores, 80) fmt.Println(idx, b) idx, b = slices.BinarySearch(scores, 95) fmt.Println(idx, b) }\",\"输出:\",\"1 false 3 true\",\"BinarySearchFunc\",\"BinarySearchFunc 功能和 BinarySearch 类似，但它更加灵活，在它接收的参数里，其中有一个是 cmp 比较函数，通过该函数我们可以为任何的数据结构定义比较逻辑。\",\"cmp 比较函数的介绍如下：\",\"cmp func(E, T) int\",\"E：切片元素 T：目标元素\",\"返回值为 int 类型 当 E 的位置在 T 之前，返回负数；当前 E 等于 T 时，应返回 0，当 E 的位置在 T 的后面时，返回正数。\",\"package main import ( \\\"cmp\\\" \\\"fmt\\\" \\\"slices\\\" ) func main() { type User struct { Name string Age int } users := []User{ {\\\"Aaron\\\", 20}, {\\\"Gopher\\\", 24}, {\\\"Harry\\\", 18}, } idx, b := slices.BinarySearchFunc(users, User{Name: \\\"Gopher\\\"}, func(src User, dst User) int { return cmp.Compare(src.Name, dst.Name) }) fmt.Println(\\\"Gopher:\\\", idx, b) }\",\"输出:\",\"Gopher: 1 true\"]},\"87\":{\"h\":\"裁剪：Clip\",\"t\":[\"Clip 函数用于删除切片中未使用的容量，执行操作后，切片的长度 = 切片的容量。\",\"package main import ( \\\"fmt\\\" \\\"slices\\\" ) func main() { s := make([]int, 0, 8) s = append(s, 1, 2, 3, 4) fmt.Printf(\\\"len: %d, cap: %d\\\\n\\\", len(s), cap(s)) s = slices.Clip(s) fmt.Printf(\\\"len: %d, cap: %d\\\\n\\\", len(s), cap(s)) }\",\"输出:\",\"len: 4, cap: 8 len: 4, cap: 4\"]},\"88\":{\"h\":\"克隆：Clone\",\"t\":[\"Clone 函数返回一个拷贝的切片副本，元素是赋值复制，因此是浅拷贝,由于是浅拷贝，修改副本切片里的元素，原切片的元素也会更新。\",\"package main import ( \\\"fmt\\\" \\\"slices\\\" ) func main() { type User struct { Name string } s := []*User{{Name: \\\"Gopher\\\"}} copiedSlice := slices.Clone(s) copiedSlice[0].Name = \\\"陈明勇\\\" fmt.Println(s[0].Name == copiedSlice[0].Name) // true }\"]},\"89\":{\"h\":\"压缩：Compact 和 CompactFunc\",\"t\":[\"Compact 函数会将切片里连续的相同元素替换为一个元素。\",\"package main import ( \\\"fmt\\\" \\\"slices\\\" ) func main() { s := []int{1, 2, 2, 3, 3, 4, 5} newSlice := slices.Compact(s) fmt.Println(newSlice) }\",\"输出:\",\"[1 2 3 4 5]\",\"Compact 的原理是通过移动元素来合并重复项。尽管处理后的切片长度减少了，但其底层数组的实际值仍然包括被“抛弃”的元素，例如 [1, 2, 3, 4, 5, 4, 5]。这些尾部的元素 [4, 5] 虽不在新切片中，但仍占用内存。特别是当元素为指针时，这些元素会阻止它们所引用的对象被垃圾回收。为确保这些对象可以被回收，我们应该考虑将这些元素置为 nil。\",\"CompactFunc 函数与 Compact 函数类似，但可以指定一个函数来比较元素是否相等。\",\"eg: 相同元素合并为一个，比较元素时，忽略大小写\",\"package main import ( \\\"fmt\\\" \\\"slices\\\" \\\"strings\\\" ) func main() { names := []string{\\\"cmy\\\", \\\"CmY\\\", \\\"Gopher\\\", \\\"GOPHER\\\", \\\"Jack\\\"} names = slices.CompactFunc(names, func(a, b string) bool { return strings.ToLower(a) == strings.ToLower(b) }) fmt.Println(names) }\",\"输出\",\"[cmy Gopher Jack]\"]},\"90\":{\"h\":\"大小比较：Compare 和 CompareFunc\",\"t\":[\"Compare 函数是一个比较函数，内部使用 cmp 包的 Compare 函数对 s1 和 s2 的每对元素进行比较。元素按顺序从索引 0 开始进行比较，直到有一对元素不相等。返回第一对不匹配元素的比较结果。如果两个切片在某一个切片结束之前都保持相等，那么长度较短的切片被认为小于较长的切片。\",\"如果 s1 == s2，结果为 0；如果 s1 < s2，结果为 -1；如果 s1 > s2，结果为 +1。\",\"package main import ( \\\"fmt\\\" \\\"slices\\\" ) func main() { names := []string{\\\"Aaron\\\", \\\"Bob\\\", \\\"Gopher\\\"} fmt.Println(\\\"相等: \\\", slices.Compare(names, []string{\\\"Aaron\\\", \\\"Bob\\\", \\\"Gopher\\\"})) fmt.Println(\\\"G < F, 第一个的切片小于第二个的切片:\\\", slices.Compare(names, []string{\\\"Aaron\\\", \\\"Bob\\\", \\\"Frida\\\"})) fmt.Println(\\\"G > H, 第一个的切片大于第二个的切片:\\\", slices.Compare(names, []string{\\\"Aaron\\\", \\\"Bob\\\", \\\"Harry\\\"})) fmt.Println(\\\"3 > 2, 第一个的切片大于第二个的切片:\\\", slices.Compare(names, []string{\\\"Aaron\\\", \\\"Bob\\\"})) }\",\"输出:\",\"相等: 0 G < F, 第一个的切片小于第二个的切片: 1 G > H, 第一个的切片大于第二个的切片: -1 3 > 2, 第一个的切片大于第二个的切片: 1\",\"CompareFunc 和 Compare 函数的功能类似，但它对每对元素使用自定义的比较函数进行比较。比较函数在 BinarySearchFunc 小节里已经介绍过，这里就不多介绍。\",\"案例：使用自定义的比较函数来比较两个切片中的元素，此比较函数基于字符串的长度而不是字典顺序。比较规则是：更短的字符串被认为是较小的。\"]},\"91\":{\"h\":\"参考\",\"t\":[\"doc\"]},\"92\":{\"c\":[]},\"93\":{\"h\":\"golang 性能监听工具 sentry\",\"t\":[\"Sentry是一个开源的应用性能监控（Application Performance Monitoring，APM）和错误追踪平台。 它帮助开发人员监控应用程序的性能、捕获和分析错误，以便及时发现并解决潜在的问题，提高应用程序的稳定性和用户体验\"]},\"94\":{\"h\":\"部署 sentry （k8s）\",\"t\":[\"1.使用 helm 安装 https://github.com/sentry-kubernetes/charts\",\"Sentry 的 Helm Chart，可以方便地在 Kubernetes 集群中部署 Sentry。\",\"values.yaml\",\"filestore: backend: filesystem filesystem: path: /var/lib/sentry/files persistence: accessMode: ReadWriteMany enabled: true existingClaim: \\\"\\\" persistentWorkers: true size: 10Gi storageClass: \\\"efs\\\" nginx: ingress: annotations: { } enabled: true hostname: sentry.company.com ingressClassName: \\\"alb\\\" path: / pathType: Prefix postgresql: postgresqlPassword: \\\"examplePassword\\\" postgresqlPostgresPassword: \\\"examplePassword\\\" sourcemaps: enabled: true user: create: true email: example@company.com password: examplePassword zookeeper: autopurge: purgeInterval: 3 snapRetainCount: 3\",\"注意问题：\",\"filestore , 需要配置 storageClass 为 ReadWriteMany 的存储类。\",\"nginx 配置 annotation, 因为我们使用的是 AWS 的 ALB Ingress Controller。\",\"postgresql 配置数据库密码， 防止启动时报错。具体参见, 清理方式\",\"sourcemaps 配置为 true，开启 sourcemaps 功能。\",\"user 配置为 true，创建一个初始用户(admin)。\",\"zookeeper 配置 autopurge, 避免 Zookeeper 数据过大。\"]},\"95\":{\"h\":\"安装\",\"t\":[\"go get github.com/getsentry/sentry-go\"]},\"96\":{\"h\":\"使用代码：\",\"t\":[\"import ( \\\"fmt\\\" \\\"net/http\\\" sentry \\\"github.com/getsentry/sentry-go\\\" sentrygin \\\"github.com/getsentry/sentry-go/gin\\\" \\\"github.com/gin-gonic/gin\\\" ) // To initialize Sentry's handler, you need to initialize Sentry itself beforehand if err := sentry.Init(sentry.ClientOptions{ Dsn: \\\"https://0b5c4c7a72494aa8a43da8d56c1f7427@o84114.ingest.us.sentry.io/183603\\\", EnableTracing: true, // Set TracesSampleRate to 1.0 to capture 100% // of transactions for tracing. // We recommend adjusting this value in production, TracesSampleRate: 1.0, }); err != nil { fmt.Printf(\\\"Sentry initialization failed: %v\\\\n\\\", err) } // Then create your app app := gin.Default() // Once it's done, you can attach the handler as one of your middleware app.Use(sentrygin.New(sentrygin.Options{})) // Set up routes app.GET(\\\"/\\\", func(ctx *gin.Context) { ctx.String(http.StatusOK, \\\"Hello world!\\\") }) // And run it app.Run(\\\":3000\\\") Configure sentrygin accepts a struct of Options that allows you to configure how the handler will behave. Currently it respects 3 options: Go Copied // Whether Sentry should repanic after recovery, in most cases it should be set to true, // as gin.Default includes its own Recovery middleware that handles http responses. Repanic bool // Whether you want to block the request before moving forward with the response. // Because Gin's default `Recovery` handler doesn't restart the application, // it's safe to either skip this option or set it to `false`. WaitForDelivery bool // Timeout for the event delivery requests. Timeout time.Duration Usage sentrygin attaches an instance of *sentry.Hub (https://pkg.go.dev/github.com/getsentry/sentry-go#Hub) to the *gin.Context, which makes it available throughout the rest of the request's lifetime. You can access it by using the sentrygin.GetHubFromContext() method on the context itself in any of your proceeding middleware and routes. And it should be used instead of the global sentry.CaptureMessage, sentry.CaptureException, or any other calls, as it keeps the separation of data between the requests. Keep in mind that *sentry.Hub won't be available in middleware attached before sentrygin! Go Copied app := gin.Default() app.Use(sentrygin.New(sentrygin.Options{ Repanic: true, })) app.Use(func(ctx *gin.Context) { if hub := sentrygin.GetHubFromContext(ctx); hub != nil { hub.Scope().SetTag(\\\"someRandomTag\\\", \\\"maybeYouNeedIt\\\") } ctx.Next() }) app.GET(\\\"/\\\", func(ctx *gin.Context) { if hub := sentrygin.GetHubFromContext(ctx); hub != nil { hub.WithScope(func(scope *sentry.Scope) { scope.SetExtra(\\\"unwantedQuery\\\", \\\"someQueryDataMaybe\\\") hub.CaptureMessage(\\\"User provided unwanted query string, but we recovered just fine\\\") }) } ctx.Status(http.StatusOK) }) app.GET(\\\"/foo\\\", func(ctx *gin.Context) { // sentrygin handler will catch it just fine. Also, because we attached \\\"someRandomTag\\\" // in the middleware before, it will be sent through as well panic(\\\"y tho\\\") }) app.Run(\\\":3000\\\") Accessing Request in BeforeSend callback Go Copied sentry.Init(sentry.ClientOptions{ Dsn: \\\"https://0b5c4c7a72494aa8a43da8d56c1f7427@o84114.ingest.us.sentry.io/183603\\\", BeforeSend: func(event *sentry.Event, hint *sentry.EventHint) *sentry.Event { if hint.Context != nil { if req, ok := hint.Context.Value(sentry.RequestContextKey).(*http.Request); ok { // You have access to the original Request here } } return event }, })\"]},\"97\":{\"h\":\"文档\",\"t\":[\"docs\",\"sentry\",\"sentry-go\"]},\"98\":{\"c\":[]},\"99\":{\"h\":\"golang 单元测试 goconvey\"},\"100\":{\"h\":\"goconvey 是什么\",\"t\":[\"goconvey 是一个 golang 的单元测试框架，它提供了丰富的断言，可以方便的进行单元测试。 goconvey 的官网是 http://goconvey.co/，这里就不做介绍了。 这里主要介绍 goconvey 的使用方法。\"]},\"101\":{\"h\":\"goconvey 的使用\"},\"102\":{\"h\":\"安装\",\"t\":[\"go install github.com/smartystreets/goconvey@v1.8.1\"]},\"103\":{\"h\":\"使用\"},\"104\":{\"h\":\"1. 在项目根目录下创建 goconvey 的配置文件 goconvey.conf\",\"t\":[\"# goconvey.conf port = 8080 basepath = /goconvey\"]},\"105\":{\"c\":[]},\"106\":{\"h\":\"golang 单元测试 gomock\"},\"107\":{\"h\":\"简介\",\"t\":[\"GoMock是由Golang官方开发维护的测试框架，实现了较为完整的基于interface的Mock功能，能够与Golang内置的testing包良好集成，也能用于其它的测试环境中。GoMock测试框架包含了GoMock包和mockgen工具两部分，其中GoMock包完成对桩对象生命周期的管理，mockgen工具用来生成interface对应的Mock类源文件。\",\"GoMock官网: github\"]},\"108\":{\"h\":\"安装使用\"},\"109\":{\"h\":\"安装 mockgen\"},\"110\":{\"h\":\"Go version < 1.16\",\"t\":[\"GO111MODULE=on go get github.com/golang/mock/mockgen@v1.6.0\"]},\"111\":{\"h\":\"Go 1.16+\",\"t\":[\"go install github.com/golang/mock/mockgen@v1.6.0\"]},\"112\":{\"h\":\"mockgen辅助代码生成工具安装\",\"t\":[\"go install github.com/golang/mock/mockgen@latest\"]},\"113\":{\"h\":\"mockgen 的参数说明\",\"t\":[\"在使用 mockgen 生成模拟对象（Mock Objects）时，通常需要指定主要的参数\",\"-source：这是你想要生成模拟对象的接口定义所在的文件路径。\",\"-destination：生成的源代码写入的文件。如果不设置此项，代码将打印到标准输出。\",\"-package：用于生成的模拟类源代码的包名。如果不设置此项包名默认在原包名前添加mock_前缀。\",\"-imports：在生成的源代码中使用的显式导入列表。值为foo=bar/baz形式的逗号分隔的元素列表，其中bar/baz是要导入的包，foo是要在生成的源代码中用于包的标识符。\",\"-aux_files：需要参考以解决的附加文件列表，例如在不同文件中定义的嵌入式接口。指定的值应为foo=bar/baz.go形式的以逗号分隔的元素列表，其中bar/baz.go是源文件，foo是-source文件使用的文件的包名。\",\"-build_flags：（仅反射模式）一字不差地传递标志给go build\",\"-mock_names：生成的模拟的自定义名称列表。这被指定为一个逗号分隔的元素列表，形式为Repository = MockSensorRepository,Endpoint=MockSensorEndpoint，其中Repository是接口名称，mockSensorrepository 是所需的mock名称(mock工厂方法和mock记录器将以mock命名)。如果其中一个接口没有指定自定义名称，则将使用默认命名约定。\",\"-self_package：生成的代码的完整包导入路径。使用此flag的目的是通过尝试包含自己的包来防止生成代码中的循环导入。如果mock的包被设置为它的一个输入(通常是主输入)，并且输出是stdio，那么mockgen就无法检测到最终的输出包，这种情况就会发生。设置此标志将告诉 mockgen 排除哪个导入\",\"-copyright_file：用于将版权标头添加到生成的源代码中的版权文件\",\"-debug_parser：仅打印解析器结果\",\"-exec_only：（反射模式） 如果设置，则执行此反射程序\",\"-prog_only：（反射模式）只生成反射程序；将其写入标准输出并退出。\",\"-write_package_comment：如果为true，则写入包文档注释 (godoc)。（默认为true）\"]},\"114\":{\"h\":\"例子\"},\"115\":{\"h\":\"1. 定义 user_service.go\",\"t\":[\"package demo_one import ( \\\"strconv\\\" ) //go:generate mockgen -destination mock/user_service_mock.go -package mock -source user_service.go type UserSrv interface { GetUserById(id int) string Update(id int, data interface{}) (string, error) } type UserService struct { } func NewUserService() *UserService { return &UserService{} } func (u *UserService) GetUserById(id int) string { return strconv.Itoa(id) } func (u *UserService) Update(id int, data interface{}) (string, error) { str := u.GetUserById(id) return str, nil }\"]},\"116\":{\"h\":\"2. 命令为接口生成 mock 实现\",\"t\":[\"mockgen -destination=mock/user_service_mock.go -package=mock -source=user_service.go\"]},\"117\":{\"h\":\"3. 生成 user_service_mock.go 文件,该文件在 mock 目录下，因为设置的 -destination 参数为 mock/user_service_mock.go\",\"t\":[\"// Code generated by MockGen. DO NOT EDIT. // Source: user_service.go // Package mock is a generated GoMock package. package mock import ( reflect \\\"reflect\\\" gomock \\\"github.com/golang/mock/gomock\\\" ) // MockUserSrv is a mock of UserSrv interface. type MockUserSrv struct { ctrl *gomock.Controller recorder *MockUserSrvMockRecorder } // MockUserSrvMockRecorder is the mock recorder for MockUserSrv. type MockUserSrvMockRecorder struct { mock *MockUserSrv } // NewMockUserSrv creates a new mock instance. func NewMockUserSrv(ctrl *gomock.Controller) *MockUserSrv { mock := &MockUserSrv{ctrl: ctrl} mock.recorder = &MockUserSrvMockRecorder{mock} return mock } // EXPECT returns an object that allows the caller to indicate expected use. func (m *MockUserSrv) EXPECT() *MockUserSrvMockRecorder { return m.recorder } // GetUserById mocks base method. func (m *MockUserSrv) GetUserById(id int) string { m.ctrl.T.Helper() ret := m.ctrl.Call(m, \\\"GetUserById\\\", id) ret0, _ := ret[0].(string) return ret0 } // GetUserById indicates an expected call of GetUserById. func (mr *MockUserSrvMockRecorder) GetUserById(id interface{}) *gomock.Call { mr.mock.ctrl.T.Helper() return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \\\"GetUserById\\\", reflect.TypeOf((*MockUserSrv)(nil).GetUserById), id) } // Update mocks base method. func (m *MockUserSrv) Update(id int, data interface{}) (string, error) { m.ctrl.T.Helper() ret := m.ctrl.Call(m, \\\"Update\\\", id, data) ret0, _ := ret[0].(string) ret1, _ := ret[1].(error) return ret0, ret1 } // Update indicates an expected call of Update. func (mr *MockUserSrvMockRecorder) Update(id, data interface{}) *gomock.Call { mr.mock.ctrl.T.Helper() return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \\\"Update\\\", reflect.TypeOf((*MockUserSrv)(nil).Update), id, data) }\"]},\"118\":{\"h\":\"4.编辑写测试文件 user_service_test.go\",\"t\":[\"在 mcok 文件下创建 user_service_test.go，并且写入下面的代码\",\"package mock import ( demo_one \\\"github.com/costalong/blog-code-go/unit-test/gomock-demo/demo-one\\\" \\\"github.com/golang/mock/gomock\\\" \\\"github.com/stretchr/testify/assert\\\" \\\"testing\\\" ) func Test_GetUserById(t *testing.T) { //初始化一个mock controller ctrl := gomock.NewController(t) defer ctrl.Finish() mockObj := NewMockUserSrv(ctrl) // mock方法调用次数支持如下 mockObj.EXPECT().GetUserById(gomock.Any()).Return(\\\"11\\\").AnyTimes() str := mockObj.GetUserById(11) // 判断结果 assert.NotEmpty(t, str) // 断言 str 不为空 assert.Equal(t, \\\"11\\\", str) // 断言 str 的值等于 ”11“ } // 测试 update func Test_Update(t *testing.T) { ctrl := gomock.NewController(t) defer ctrl.Finish() mockObj := NewMockUserSrv(ctrl) mockObj.EXPECT().GetUserById(gomock.Any()).Return(\\\"11\\\").AnyTimes() //mockObj.EXPECT().Update(gomock.Any(), gomock.Any()).Return(\\\"1\\\", nil).AnyTimes() src := demo_one.NewUserService() str, err := src.Update(11, \\\"11\\\") assert.NoError(t, err) assert.NotEmpty(t, str) assert.Equal(t, \\\"11\\\", str) }\",\"解析上面的代码：\",\"Test_GetUserById 函数\",\"首先，创建了一个 gomock 控制器 ctrl，并在函数结束时通过 defer ctrl.Finish() 来确保在测试结束时进行必要的清理工作。\",\"然后，创建了一个模拟的 UserSrv 对象 mockObj。\",\"使用 EXPECT().GetUserById(gomock.Any()).Return(\\\"11\\\").AnyTimes() 来设置对 GetUserById 方法的模拟行为。这里表示无论传入任何参数，该方法都将返回 \\\"11\\\"，并且调用次数没有限制。\",\"调用 mockObj.GetUserById(11) 来执行模拟的方法，并将结果存储在 str 变量中。\",\"最后，使用 assert.NotEmpty(t, str) 断言 str 不为空，使用 assert.Equal(t, \\\"11\\\", str) 断言 str 的值等于 \\\"11\\\"。\",\"Test_Update 函数\",\"与 Test_GetUserById 函数类似，创建了控制器并在结束时进行清理。\",\"同样设置了对 GetUserById 方法的模拟行为。\",\"然后创建了实际的 UserService 对象 src，调用其 Update 方法，并获取返回的结果 str 和错误 err。\",\"使用 assert.NoError(t, err) 断言没有错误发生，使用 assert.NotEmpty(t, str) 断言 str 不为空，使用 assert.Equal(t, \\\"11\\\", str) 断言 str 的值等于 \\\"11\\\"。\",\"总的来说，这段单元测试代码通过模拟服务方法的行为，对相关功能的结果进行了断言验证，以确保代码的正确性和稳定性。\"]},\"119\":{\"h\":\"5.测试\",\"t\":[\"➜ demo-one git:(master) ✗ go test ./... ? github.com/costalong/blog-code-go/unit-test/gomock-demo/demo-one [no test files] ok github.com/costalong/blog-code-go/unit-test/gomock-demo/demo-one/mock 0.350s\"]},\"120\":{\"h\":\"6.测试覆盖率\",\"t\":[\"➜ demo-one git:(master) ✗ go test ./... -cover github.com/costalong/blog-code-go/unit-test/gomock-demo/demo-one coverage: 0.0% of statements ok github.com/costalong/blog-code-go/unit-test/gomock-demo/demo-one/mock 0.085s coverage: 28.6% of statements\"]},\"121\":{\"h\":\"7. 可视化界面\",\"t\":[\"生成测试覆盖率的 profile 文件\",\"➜ demo-one git:(master) ✗ go test ./... -coverprofile=cover.out github.com/costalong/blog-code-go/unit-test/gomock-demo/demo-one coverage: 0.0% of statements ok github.com/costalong/blog-code-go/unit-test/gomock-demo/demo-one/mock 0.262s coverage: 28.6% of statements\",\"利用 go 工具 profile 文件生成可视化界面\",\"go tool cover -html=cover.out\",\"查看可视化界面\"]},\"122\":{\"h\":\"mock/gomock 中使用函数说明\",\"t\":[\"自定义mock实现主要包含了自定义参数，自定义返回值，自定义mock调用次数以及调用顺序\"]},\"123\":{\"h\":\"（1）自定义参数\",\"t\":[\"参数支持Eq,Any,Not,Nil，分别代表一下含义：\",\"Eq(value) 用于参数为固定值的场景。\",\"Any() 用于任意参数的场景。\",\"Not(value) 用于表示参数非 value 以外的值场景。\",\"Nil() 用于表示参数None 值的场景\",\"m.EXPECT().Get(gomock.Eq(\\\"Tom\\\")).Return(0, errors.New(\\\"not exist\\\")) m.EXPECT().Get(gomock.Any()).Return(630, nil) m.EXPECT().Get(gomock.Not(\\\"Sam\\\")).Return(0, nil) m.EXPECT().Get(gomock.Nil()).Return(0, errors.New(\\\"nil\\\"))\"]},\"124\":{\"h\":\"（2）自定义返回值\",\"t\":[\"返回值支持如下几种：\",\"Return 用于返回确定的值的场景\",\"Do 用于无返回值的场景。\",\"DoAndReturn 用于可以动态地控制返回值。\",\"m.EXPECT().Get(gomock.Not(\\\"Sam\\\")).Return(0, nil) m.EXPECT().Get(gomock.Any()).Do(func(key string) { t.Log(key) }) m.EXPECT().Get(gomock.Any()).DoAndReturn(func(key string) (int, error) { if key == \\\"Sam\\\" { return 630, nil } return 0, errors.New(\\\"not exist\\\") })\"]},\"125\":{\"h\":\"（3）自定义mock调用次数\",\"t\":[\"mock调用次数支持如下几种场景：\",\"Times() 断言 Mock 方法被调用的次数, 指定次数。\",\"MaxTimes() 最大次数。\",\"MinTimes() 最小次数。\",\"AnyTimes() 任意次数（包括 0 次）\",\"func TestGetFromDB(t *testing.T) { ctrl := gomock.NewController(t) defer ctrl.Finish() m := NewMockDB(ctrl) m.EXPECT().Get(gomock.Not(\\\"Sam\\\")).Return(0, nil).Times(2) GetFromDB(m, \\\"ABC\\\") GetFromDB(m, \\\"DEF\\\") }\"]},\"126\":{\"h\":\"（4）自定义mock调用顺序\",\"t\":[\"当存在多个mock之间相互调用的情况时，可以通过一下2种方式定义mock执行的顺序：\",\"通过After关键字来实现保序\",\"通过InOrder关键字来实现保序\",\"func TestGetFromDB(t *testing.T) { ctrl := gomock.NewController(t) defer ctrl.Finish() // 断言 DB.Get() 方法是否被调用 m := NewMockDB(ctrl) o1 := m.EXPECT().Get(gomock.Eq(\\\"Tom\\\")).Return(0, errors.New(\\\"not exist\\\")) o2 := m.EXPECT().Get(gomock.Eq(\\\"Sam\\\")).Return(630, nil) gomock.InOrder(o1, o2) GetFromDB(m, \\\"Tom\\\") GetFromDB(m, \\\"Sam\\\") }\"]},\"127\":{\"h\":\"注意： 如果定义的 interface 包含另外一个 interface 并且不是同一个文件的情况\",\"t\":[\"如果在 interface 包含另外一个 interface 并且不是同一个文件的情况，使用 mockgen 的时候需要使用 -aux_files 参数，可以参考下面代码\",\"新建 admin_service.go 文件\",\"package demo_one import \\\"strconv\\\" //go:generate mockgen -destination=mock/admin_service_mock.go -package=mock -aux_files=github.com/costalong/blog-code-go/unit-test/gomock-demo/demo-one=admin_info.go -source=admin_service.go type AdminSrv interface { GetUserById(id int) string Update(id int, data interface{}) (string, error) AdminInfoSrv } type AdminService struct { } func NewAdminService() *UserService { return &UserService{} } func (s *AdminService) GetUserById(id int) string { return strconv.Itoa(id) } func (s *AdminService) Update(id int, data interface{}) (string, error) { str := s.GetUserById(id) return str, nil }\",\"新建 admin_info.go\",\"package demo_one import \\\"strconv\\\" type AdminInfoSrv interface { GetAdminInfo(id int) string } func (s *AdminService) GetAdminInfo(id int) string { return strconv.Itoa(id) }\",\"在 user_service.go 文件中使用 user_info.go 的 UserInfoSrv 的 interface\",\"所以生成mock 的命令需要改成：\",\"mockgen -destination=mock/admin_service_mock.go -package=mock -aux_files=github.com/costalong/blog-code-go/unit-test/gomock-demo/demo-one=admin_info.go -source=admin_service.go\",\"或者使用下面命令\",\"mockgen -destination=mock/admin_service_mock.go -package=mock github.com/costalong/blog-code-go/unit-test/gomock-demo/demo-one AdminSrv\",\"github.com/costalong/blog-code-go/unit-test/gomock-demo/demo-one 是包名\",\"admin_info.go 是 interface 定义的文件\"]},\"128\":{\"h\":\"参考\",\"t\":[\"golang-unit-test\",\"gomock github\",\"代码示例\"]},\"129\":{\"c\":[]},\"130\":{\"h\":\"golang 单元测试 gomonkey\"},\"131\":{\"h\":\"简介\",\"t\":[\"Gomonkey 是一个在 Go 语言中非常有用的测试工具库。\",\"Gomonkey 的主要作用是用于在测试中动态地修改函数的行为。这使得测试能够更加灵活和全面，能够模拟各种不同的情况和边界条件。它提供了多种功能，包括方法、函数和全局变量的打桩（Stub），函数的 Monkey Patch，方法和函数调用的参数与返回值验证等。\"]},\"132\":{\"h\":\"gomonkey支持的特性以及使用方法\",\"t\":[\"支持为函数/ 接口打一个桩\",\"支持为函数/ 接口打一个特定的桩序列\",\"支持为成员方法打一个桩\",\"支持为成员方法打一个特定的桩序列\",\"支持为函数变量打一个桩\",\"支持为函数变量打一个特定的桩序列\",\"支持为全局变量打一个桩\",\"方法\",\"作用\",\"函数使用说明\",\"ApplyFunc(target, double interface{}\",\"为函数/ 接口打一个桩\",\"target表示函数名，第二个参数表示桩函数\",\"ApplyFuncSeq(target interface{}, outputs []OutputCell）\",\"target表示函数名，第二个参数表示桩序列参数（返回值需序列）\",\"ApplyMethod(target reflect.Type, methodName string, double interface{}）\",\"为成员方法打一个桩\",\"target表示对象类型，对象的方法名，第三个参数表示桩函数\",\"ApplyMethodSeq(target reflect.Type, methodName string, outputs []OutputCell）\",\"为成员方法打一个特定的桩序列\",\"target表示对象类型，对象的方法名，第三个参数表示桩序列参数（返回值需序列）\",\"ApplyFuncVar(target, double interface{}）\",\"为函数变量打一个桩\",\"target表示函数变量，第二个参数表示桩函数\",\"ApplyFuncVarSeq(target interface{}, outputs []OutputCell）\",\"为函数变量打一个特定的桩序列\",\"target表示函数变量，第二个参数表示桩序列参数（返回值需序列）\",\"ApplyGlobalVar(target, double interface{})\",\"为全局变量打一个桩\",\"target表示函数变量，第二个参数表示桩函数\",\"Reset()\",\"删除桩\"]},\"133\":{\"h\":\"使用\"},\"134\":{\"h\":\"安装 gomonkey\",\"t\":[\"go get github.com/agiledragon/gomonkey/v2@v2.11.0\"]},\"135\":{\"h\":\"例子\",\"t\":[\"为函数打桩\",\"简单的例子，为函数 Sum 打桩，返回 2，nil\",\"package demo_one import ( \\\"encoding/json\\\" \\\"github.com/agiledragon/gomonkey/v2\\\" . \\\"github.com/smartystreets/goconvey/convey\\\" \\\"github.com/stretchr/testify/assert\\\" \\\"testing\\\" ) func Sum(a, b int) (int, error) { // do something in remote computer c := a + b return c, nil } func Compute(a, b int) (int, error) { sum, err := Sum(a, b) return sum, err } func ComputeTow(a, b, c int) (int, error) { sum, err := Sum(a, b) if err != nil { // do something return 0, err } rs, err := Compute(c, sum) if err != nil { return 0, err } return rs, nil } func TestCompute(t *testing.T) { patches := gomonkey.ApplyFunc(Sum, func(a, b int) (int, error) { return 2, nil }) defer patches.Reset() sum, err := Compute(1, 1) assert.NoError(t, err) assert.Equal(t, 2, sum) } func TestComputeConvey(t *testing.T) { Convey(\\\"one func for success\\\", t, func() { patches := gomonkey.ApplyFunc(Sum, func(a, b int) (int, error) { return 2, nil }) defer patches.Reset() sum, err := Compute(1, 1) So(err, ShouldBeNil) So(sum, ShouldEqual, 2) }) Convey(\\\"one func for fail\\\", t, func() { patches := gomonkey.ApplyFunc(Sum, func(a, b int) (int, error) { return 2, nil }) defer patches.Reset() sum, err := Compute(1, 2) So(err, ShouldBeNil) So(sum, ShouldEqual, 3) }) Convey(\\\"two func for success\\\", t, func() { patches := gomonkey.ApplyFunc(Sum, func(a, b int) (int, error) { return 6, nil }) defer patches.Reset() patches.ApplyFunc(ComputeTow, func(a, b, c int) (int, error) { return 4, nil }) sum, err := ComputeTow(1, 1, 2) So(err, ShouldBeNil) So(sum, ShouldEqual, 4) }) Convey(\\\"input and output param\\\", t, func() { patches := gomonkey.ApplyFunc(json.Unmarshal, func(data []byte, v interface{}) error { if data == nil { panic(\\\"input param is nil!\\\") } p := v.(*map[int]int) *p = make(map[int]int) (*p)[1] = 2 (*p)[2] = 4 return nil }) defer patches.Reset() var m map[int]int err := json.Unmarshal([]byte(\\\"123\\\"), &m) So(err, ShouldEqual, nil) So(m[1], ShouldEqual, 2) }) }\"]},\"136\":{\"h\":\"为变量打桩\",\"t\":[\"简单的例子，为变量 num 打桩，返回 150,\",\"package demo_one import ( \\\"github.com/agiledragon/gomonkey/v2\\\" . \\\"github.com/smartystreets/goconvey/convey\\\" \\\"testing\\\" ) var num = 10 //全局变量 func TestApplyGlobalVar(t *testing.T) { Convey(\\\"TestApplyGlobalVar\\\", t, func() { // 测试将全局变量 num 修改为 150。 Convey(\\\"change\\\", func() { patches := gomonkey.ApplyGlobalVar(&num, 150) defer patches.Reset() So(num, ShouldEqual, 150) }) // 测试将全局变量 num 恢复到原始值。 Convey(\\\"recover\\\", func() { So(num, ShouldEqual, 10) }) }) }\"]},\"137\":{\"h\":\"成员方法打桩\",\"t\":[\"package demo_one import ( \\\"fmt\\\" \\\"github.com/agiledragon/gomonkey/v2\\\" \\\"github.com/agiledragon/gomonkey/v2/test/fake\\\" . \\\"github.com/smartystreets/goconvey/convey\\\" \\\"testing\\\" ) type UserService struct { } func NewUserService() *UserService { return &UserService{} } func (s *UserService) GetUserById(id int) string { var res string if id == 1 { res = \\\"1\\\" } else { res = \\\"2\\\" } return res } func (s *UserService) Update(id int, data interface{}) (string, error) { str := s.GetUserById(id) return str, nil } type Etcd struct { } func (e *Etcd) Retrieve(url string) (string, error) { output := fmt.Sprintf(\\\"%s, %s!\\\", \\\"Hello\\\", \\\"Etcd\\\") return output, nil } func TestApplyMethod_One(t *testing.T) { userSrv := NewUserService() patches := gomonkey.ApplyMethodReturn(userSrv, \\\"GetUserById\\\", \\\"mock\\\") defer patches.Reset() str := userSrv.GetUserById(222) fmt.Println(str) } func TestApplyMethod_Two(t *testing.T) { userSrv := NewUserService() Convey(\\\"TestApplyMethodReturn\\\", t, func() { patches := gomonkey.ApplyMethodReturn(userSrv, \\\"GetUserById\\\", \\\"mock\\\") defer patches.Reset() str := userSrv.GetUserById(1) So(str, ShouldEqual, \\\"mock\\\") }) } func TestApplyMethodReturn(t *testing.T) { e := &fake.Etcd{} Convey(\\\"TestApplyMethodReturn\\\", t, func() { Convey(\\\"declares the values to be returned\\\", func() { info1 := \\\"hello cpp\\\" patches := gomonkey.ApplyMethodReturn(e, \\\"Retrieve\\\", info1, nil) defer patches.Reset() for i := 0; i < 10; i++ { output1, err1 := e.Retrieve(\\\"\\\") So(err1, ShouldEqual, nil) So(output1, ShouldEqual, info1) } patches.Reset() // if not reset will occur:patch has been existed info2 := \\\"hello golang\\\" patches.ApplyMethodReturn(e, \\\"Retrieve\\\", info2, nil) for i := 0; i < 10; i++ { output2, err2 := e.Retrieve(\\\"\\\") So(err2, ShouldEqual, nil) So(output2, ShouldEqual, info2) } }) }) }\"]},\"138\":{\"h\":\"注意\",\"t\":[\"gomonkey，在 mac M1 and M2 上，经常失败，需要使用 使用命令需要时加上 -gcflags=\\\"all=-l -N\\\" 参数\",\"如果是是goland 的idea，可以设置template 配置模板，如下：\",\"点击 Run -> Edit Configurations...里面可以添加运行配置，\",\"编辑配置，选择go test，添加参数 -gcflags=\\\"all=-l -N\\\"\",\"20240729235418\"]},\"139\":{\"h\":\"参考文档\",\"t\":[\"gomonkey调研文档和学习\",\"xgo\",\"gomonkey用户如何对泛型打桩\"]},\"140\":{\"c\":[]},\"141\":{\"h\":\"golang 单元测试 sqlmock\",\"t\":[\"go-sqlmock 是一个实现 sql/driver 的模拟库\",\"在 Go 语言中，使用 sqlmock 进行单元测试是一种常见且有效的方式。sqlmock 库可以帮助模拟数据库操作，从而能够独立地测试与数据库交互的代码逻辑，而无需实际连接到真实的数据库。 以下是一个简单的示例，展示如何使用 sqlmock 进行单元测试：\"]},\"142\":{\"h\":\"安装\",\"t\":[\"go get github.com/DATA-DOG/go-sqlmock\"]},\"143\":{\"h\":\"案例\",\"t\":[\"使用sql查询用户的信息\",\"新建文件 user_dao.go\",\"// 被测试的函数，从数据库中获取用户信息 func getUserInfo(db *sql.DB, userId int) (string, error) { var name string err := db.QueryRow(\\\"SELECT name FROM users WHERE id = $1\\\", userId).Scan(&name) return name, err } `` 新建测试文件 user_dao_test.go ```go package main import ( \\\"github.com/DATA-DOG/go-sqlmock\\\" \\\"testing\\\" ) func TestGetUserInfo(t *testing.T) { // 创建数据库连接模拟对象 db, mock, err := sqlmock.New() if err != nil { t.Fatalf(\\\"an error '%s' was not expected when opening a stub database connection\\\", err) } defer db.Close() // 预期的查询行为和结果 expectedId := 1 expectedName := \\\"John Doe\\\" rows := sqlmock.NewRows([]string{\\\"name\\\"}).AddRow(expectedName) mock.ExpectQuery(\\\"^SELECT name FROM users WHERE id = \\\\\\\\$1\\\").WithArgs(expectedId).WillReturnRows(rows) // 调用被测试的函数 name, err := getUserInfo(db, expectedId) if err != nil { t.Errorf(\\\"error occurred: %v\\\", err) } // 验证结果 if name != expectedName { t.Errorf(\\\"expected name %s, but got %s\\\", expectedName, name) } // 确保所有预期的操作都已完成 if err := mock.ExpectationsWereMet(); err != nil { t.Errorf(\\\"there were unfulfilled expectations: %s\\\", err) } }\",\"go test -gcflags=\\\"all=-l -N\\\" -v -run TestGetUserInfo 输出： === RUN TestGetUserInfo --- PASS: TestGetUserInfo (0.00s) PASS ok github.com/costalong/blog-code-go/unit-test/sqlmock-demo/demo-one 3.058s\"]},\"144\":{\"h\":\"参考文档\",\"t\":[\"go-sqlmock\",\"使用 go-sqlmock 模拟数据库驱动编写单元测试用例\",\"Go单测测试 — 数据库 CRUD 的 Mock 测试\"]},\"145\":{\"c\":[]},\"146\":{\"h\":\"golang 单元测试 xgo\"},\"147\":{\"h\":\"简介\",\"t\":[\"xgo 项目是 Go 语言的跨平台构建工具，它允许您使用单个命令构建和测试您的 Go 代码，而无需在每个平台上手动安装 Go。\"]},\"148\":{\"h\":\"使用说明\",\"t\":[\"测试单个方法\",\"xgo test -v -run Test_Method_Name ./\"]},\"149\":{\"h\":\"参考\",\"t\":[\"xgo: 一款新鲜出炉的 Go 代码测试利器\",\"xgo <Go编程世界>\"]},\"150\":{\"c\":[]},\"151\":{\"h\":\"k8s的网关 apisix\"},\"152\":{\"h\":\"apisix\",\"t\":[\"Apache APISIX 是一个动态、实时、高性能的云原生 API 网关，提供了负载均衡、动态上游、灰度发布、服务熔断、身份认证、可观测性等丰富的流量管理功能\"]},\"153\":{\"h\":\"参考\",\"t\":[\"官方文档\"]},\"154\":{\"c\":[\"K8S\"]},\"155\":{\"c\":[]},\"156\":{\"h\":\"k8s的网关 traefik\"},\"157\":{\"h\":\"traefik\",\"t\":[\"traefik 是一个开源的网关，支持多种协议，支持多种存储方式，支持多种负载均衡策略，支持多种流量管理策略，支持多种安全策略，支持多种插件，支持多种语言，支持多种平台。\"]},\"158\":{\"c\":[\"K8S\"]},\"159\":{\"c\":[]},\"160\":{\"h\":\"k8s 安装的常见的错误\"},\"161\":{\"h\":\"1. master 一直处于 NotReady 状态\",\"t\":[\"安装后查询 master 节点状态:\",\"kubectl get nodes\",\"如果 master 节点一直处于 NotReady 状态,请排查以下方法:\",\"检查 kubelet 的日志,查看是否有报错信息\",\"journalctl -u kubelet\",\"或查询 kubelet 状态，\",\"systemctl status kubelet\",\"检查 查看 node\",\" kubectl describe node node -n kube-system | grep -A 20 \\\"Conditions\\\"\",\"输出：\",\"Conditions: Type Status LastHeartbeatTime LastTransitionTime Reason Message ---- ------ ----------------- ------------------ ------ ------- MemoryPressure False Wed, 07 Aug 2024 23:56:24 +0800 Mon, 05 Aug 2024 22:19:19 +0800 KubeletHasSufficientMemory kubelet has sufficient memory available DiskPressure False Wed, 07 Aug 2024 23:56:24 +0800 Mon, 05 Aug 2024 22:19:19 +0800 KubeletHasNoDiskPressure kubelet has no disk pressure PIDPressure False Wed, 07 Aug 2024 23:56:24 +0800 Mon, 05 Aug 2024 22:19:19 +0800 KubeletHasSufficientPID kubelet has sufficient PID available Ready False Wed, 07 Aug 2024 23:56:24 +0800 Mon, 05 Aug 2024 22:19:19 +0800 KubeletNotReady container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized Addresses: InternalIP: 10.0.12.8 Hostname: node Capacity: cpu: 4 ephemeral-storage: 185653816Ki hugepages-1Gi: 0 hugepages-2Mi: 0 memory: 7607692Ki pods: 110 Allocatable: cpu: 4 ephemeral-storage: 171098556543 hugepages-1Gi: 0\",\"如果出现错误信息：NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized，请检\",\"查网络插件是否安装成功。如果没有安装，安装网络插件（Flannel）。\",\"安装命令\",\" kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\",\"注意：如果无法访问外网的情况，可以下载 flannel.yaml 文件，然后修改镜像地址，然后执行安装命令。Docker Hub 镜像加速器\",\"如果无法安装成功，可以查看 kube-flannel 的日志，查看是否有报错信息\",\"kubectl logs -n kube-system kube-flannel-ds-amd64-24495\"]},\"162\":{\"h\":\"}, that the pod didn't tolerate\",\"t\":[\"查看 pod 的状态\",\"kubectl describe pod pod-name -n namespace\",\"... Type Reason Age From Message ---- ------ ---- ---- ------- Warning FailedScheduling 39m default-scheduler 0/2 nodes are available: 1 node(s) had taint {env_role: }, that the pod didn't tolerate, 1 node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn't tolerate.\",\"看看node是否被打污点了\",\"kubectl describe node node01 |grep Taint Taints: env_role:NoSchedule\",\"污点值有三个\",\"NoSchedule：一定不被调度\",\"PreferNoSchedule：尽量不被调度【也有被调度的几率】\",\"NoExecute：不会调度，并且还会驱逐Node已有Pod\",\"去掉污点:\",\"kubectl taint nodes node01 env_role-\"]},\"163\":{\"c\":[\"K8S\"]},\"164\":{\"c\":[]},\"165\":{\"h\":\"Ubuntu使用containerd安装k8s\"},\"166\":{\"h\":\"1. 准备包环境\"},\"167\":{\"h\":\"1.1 更新 apt 包索引\",\"t\":[\"sudo apt update\"]},\"168\":{\"h\":\"1.2 同步时间\",\"t\":[\"打开终端输入以下命令安装ntpdate工具\",\"sudo apt-get install ntpdate -y\",\"输入命令设置系统时间与网络时间同步\",\"sudo ntpdate cn.pool.ntp.org\",\"最后输入命令将时间更新到硬件上即可\",\"sudo hwclock --systohc\"]},\"169\":{\"h\":\"1.3 关闭selinux及nfs\",\"t\":[\"# 关闭selinux sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config # 关闭nfs sudo systemctl stop ufw sudo systemctl status ufw sudo systemctl disable ufw\"]},\"170\":{\"h\":\"1.4 关闭Swap\",\"t\":[\"Kubernetes 1.8开始要求关闭系统的Swap，如果不关闭，默认配置下kubelet将无法启动。 关闭系统的Swap方法如下:\",\"# 关闭swap sudo swapoff -a # 注释swap挂载 vim /etc/fstab\",\"使用 free -m 查看是否已经关闭\",\"free -m\"]},\"171\":{\"h\":\"1.5 设置内核参数\",\"t\":[\"vim /etc/sysctl.d/99-kubernetes-cri.conf # 修改 swappiness 参数 vm.swappiness = 0 # 开启内核ipv4转发 net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 net.ipv4.ip_forward = 1 user.max_user_namespaces=28633\",\"执行下面命令生效：\",\"sysctl -p /etc/sysctl.d/99-kubernetes-cri.conf\"]},\"172\":{\"h\":\"1.6 配置支持IPVS\",\"t\":[\"安装ipvsadm，加载ipvs模块\",\"# 安装ipvsadm sudo apt-get install ipvsadm -y cat > /etc/modules-load.d/ipvs.conf << EOF ip_vs ip_vs_rr ip_vs_wrr ip_vs_sh nf_conntrack EOF\",\"加载模块，并进行检查\",\"modprobe --all ip_vs ip_vs_rr ip_vs_wrr ip_vs_sh nf_conntrack lsmod|grep -e ip_vs -e nf_conntrack\"]},\"173\":{\"h\":\"2. 安装 containerd\"},\"174\":{\"h\":\"2.1 使用二进制安装\"},\"175\":{\"h\":\"2.1.1 下载二进制文件\",\"t\":[\"分别把 containerd、runc、cni-plugins、nerdctl 二进制下载到本地，才开始配置:\",\"# 设置下载的版本 export CONTAINERD_VERSION=1.7.20 export RUNC_VERSION=1.1.12 export CNI_VERSION=1.5.1 export NERDCTL_VERSION=1.7.6 export CRICTL_VERSION=1.30.1 # 下载二进制文件 echo \\\"--------------install containerd--------------\\\" wget https://github.com/containerd/containerd/releases/download/v${CONTAINERD_VERSION}/containerd-${CONTAINERD_VERSION}-linux-amd64.tar.gz echo \\\"--------------install runc--------------\\\" wget https://github.com/opencontainers/runc/releases/download/v${RUNC_VERSION}/runc.amd64 echo \\\"--------------install cni plugins--------------\\\" wget https://github.com/containernetworking/plugins/releases/download/v${CNI_VERSION}/cni-plugins-linux-amd64-v${CNI_VERSION}.tgz echo \\\"--------------install nerdctl--------------\\\" wget https://github.com/containerd/nerdctl/releases/download/v${NERDCTL_VERSION}/nerdctl-${NERDCTL_VERSION}-linux-amd64.tar.gz echo \\\"--------------install crictl--------------\\\" wget https://github.com/kubernetes-sigs/cri-tools/releases/download/v${CRICTL_VERSION}/crictl-v${CRICTL_VERSION}-linux-amd64.tar.gz # 解压二进制文件并且配置 echo \\\"--------------unzip containerd--------------\\\" tar Cxzvf /usr/local containerd-${CONTAINERD_VERSION}-linux-amd64.tar.gz echo \\\"--------------配置 containerd service--------------\\\" local service_path=/etc/systemd/system/containerd.service cat <<EOF | tee ${service_path} # Copyright The containerd Authors. # # Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an \\\"AS IS\\\" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. [Unit] Description=containerd container runtime Documentation=https://containerd.io After=network.target local-fs.target [Service] ExecStartPre=-/sbin/modprobe overlay ExecStart=/usr/local/bin/containerd Type=notify Delegate=yes KillMode=process Restart=always RestartSec=5 # Having non-zero Limit*s causes performance problems due to accounting overhead # in the kernel. We recommend using cgroups to do container-local accounting. LimitNPROC=infinity LimitCORE=infinity LimitNOFILE=infinity # Comment TasksMax if your systemd version does not supports it. # Only systemd 226 and above support this version. TasksMax=infinity OOMScoreAdjust=-999 [Install] WantedBy=multi-user.target EOF mkdir -p /etc/containerd containerd config default > /etc/containerd/config.toml sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml sed -i \\\"s|sandbox_image = \\\\\\\"registry.k8s.io/pause:3.8\\\\\\\"|sandbox_image = \\\\\\\"registry.aliyuncs.com/google_containers/pause:3.9\\\\\\\"|\\\" /etc/containerd/config.toml sed -i '/\\\\[plugins\\\\.\\\"io.containerd.grpc.v1.cri\\\"\\\\.registry\\\\.mirrors\\\\]/a \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ [plugins.\\\"io.containerd.grpc.v1.cri\\\".registry.mirrors.\\\"docker.io\\\"]\\\\n \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ endpoint = [\\\"https://hub-mirror.c.163.com\\\"]' /etc/containerd/config.toml echo \\\"--------------install runc--------------\\\" chmod +x runc.amd64 mv runc.amd64 /usr/local/bin/runc echo \\\"--------------install cni plugins--------------\\\" mkdir -p /opt/cni/bin tar Cxfzv /opt/cni/bin cni-plugins-linux-amd64-v${CNI_VERSION}.tgz echo \\\"--------------install nerdctl--------------\\\" tar Cxfzv /usr/local nerdctl-${NERDCTL_VERSION}-linux-amd64.tar.gz echo \\\"--------------install crictl--------------\\\" tar Cxfzv /usr/local crictl-v${CRICTL_VERSION}-linux-amd64.tar.gz echo \\\"--------------配置 crictl service--------------\\\" cat > /etc/crictl.yaml << \\\\EOF runtime-endpoint: unix:///run/containerd/containerd.sock image-endpoint: unix:///run/containerd/containerd.sock timeout: 0 debug: true pull-image-on-create: true disable-pull-on-run: false EOF # 启动containerd服务 systemctl daemon-reload systemctl enable contaienrd systemctl restart contaienrd\"]},\"176\":{\"h\":\"2. 安装k8s\",\"t\":[\"使用kubeadm部署k8s集群，参考文档：https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/\",\"# 1. 安装kubeadm apt-get update && apt-get install -y apt-transport-https curl curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - cat <<EOF >/etc/apt/sources.list.d/kubernetes.list deb https://apt.kubernetes.io/ kubernetes-xenial main EOF apt-get update apt-get install -y kubelet kubeadm kubectl apt-mark hold kubelet kubeadm kubectl sudo systemctl enable kubelet && sudo systemctl start kubelet\",\"配置 kubeadm 及 kubectl 自动补全功能：\",\"echo \\\"source <(kubectl completion bash)\\\" >>~/.bashrc echo \\\"alias k=kubectl\\\" >>~/.bashrc echo \\\"complete -F __start_kubectl k\\\" >>~/.bashrc source ~/.bashrc\"]},\"177\":{\"h\":\"生成配置文件：\",\"t\":[\"kubeadm config print init-defaults > kubeadm-config.yaml\"]},\"178\":{\"h\":\"修配置文件：\",\"t\":[\"vim kubeadm-init.yml apiVersion: kubeadm.k8s.io/v1beta3 bootstrapTokens: - groups: - system:bootstrappers:kubeadm:default-node-token token: abcdef.0123456789abcdef ttl: 0s #修改token过期时间为无限制 usages: - signing - authentication kind: InitConfiguration localAPIEndpoint: advertiseAddress: 192.168.199.101 #修改为k8s-master节点IP bindPort: 6443 nodeRegistration: criSocket: unix:///var/run/containerd/containerd.sock imagePullPolicy: IfNotPresent taints: - effect: PreferNoSchedule key: node-role.kubernetes.io/master --- apiServer: timeoutForControlPlane: 4m0s apiVersion: kubeadm.k8s.io/v1beta3 certificatesDir: /etc/kubernetes/pki clusterName: kubernetes controllerManager: {} dns: {} etcd: local: dataDir: /var/lib/etcd imageRepository: registry.aliyuncs.com/google_containers #替换为国内的镜像仓库 kind: ClusterConfiguration kubernetesVersion: 1.26.0 networking: dnsDomain: cluster.local serviceSubnet: 10.96.0.0/12 podSubnet: 10.244.0.0/16 #为pod网络指定网络段 --- #申明cgroup用 systemd apiVersion: kubelet.config.k8s.io/v1beta1 kind: KubeletConfiguration cgroupDriver: systemd failSwapOn: false --- #启用ipvs apiVersion: kubeproxy.config.k8s.io/v1alpha1 kind: KubeProxyConfiguration mode: ipvs\"]},\"179\":{\"h\":\"初始化集群:\",\"t\":[\"kubeadm init --config=kubeadm-config.yaml\"]},\"180\":{\"h\":\"下载镜像\",\"t\":[\"kubeadm config images list --config=kubeadm-init.yml\",\"注意：再次确认 registry.aliyuncs.com/google_containers/pause:3.9 就是上面 /etc/containerd/config.toml 中所需要填写正确的 pause镜像及版本号。\",\"sandbox_image = \\\"registry.aliyuncs.com/google_containers/pause:3.9\\\"\",\"# 下载镜像 kubeadm config images pull --config=kubeadm-init.yml\"]},\"181\":{\"h\":\"kubeadm初始化集群\",\"t\":[\"#执行初始化并将日志记录到 kubeadm-init.log 日志文件中 kubeadm init --config=kubeadm-init.yml | tee kubeadm-init.log [init] Using Kubernetes version: v1.28.0 [preflight] Running pre-flight checks [preflight] Pulling images required for setting up a Kubernetes cluster [preflight] This might take a minute or two, depending on the speed of your internet connection [preflight] You can also perform this action in beforehand using 'kubeadm config images pull' [certs] Using certificateDir folder \\\"/etc/kubernetes/pki\\\" [certs] Generating \\\"ca\\\" certificate and key [certs] Generating \\\"apiserver\\\" certificate and key [certs] apiserver serving cert is signed for DNS names [kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local node] and IPs [10.96.0.1 10.0.12.8] [certs] Generating \\\"apiserver-kubelet-client\\\" certificate and key [certs] Generating \\\"front-proxy-ca\\\" certificate and key [certs] Generating \\\"front-proxy-client\\\" certificate and key [certs] Generating \\\"etcd/ca\\\" certificate and key [certs] Generating \\\"etcd/server\\\" certificate and key [certs] etcd/server serving cert is signed for DNS names [localhost node] and IPs [10.0.12.8 127.0.0.1 ::1] [certs] Generating \\\"etcd/peer\\\" certificate and key [certs] etcd/peer serving cert is signed for DNS names [localhost node] and IPs [10.0.12.8 127.0.0.1 ::1] [certs] Generating \\\"etcd/healthcheck-client\\\" certificate and key [certs] Generating \\\"apiserver-etcd-client\\\" certificate and key [certs] Generating \\\"sa\\\" key and public key [kubeconfig] Using kubeconfig folder \\\"/etc/kubernetes\\\" [kubeconfig] Writing \\\"admin.conf\\\" kubeconfig file [kubeconfig] Writing \\\"kubelet.conf\\\" kubeconfig file [kubeconfig] Writing \\\"controller-manager.conf\\\" kubeconfig file [kubeconfig] Writing \\\"scheduler.conf\\\" kubeconfig file [etcd] Creating static Pod manifest for local etcd in \\\"/etc/kubernetes/manifests\\\" [control-plane] Using manifest folder \\\"/etc/kubernetes/manifests\\\" [control-plane] Creating static Pod manifest for \\\"kube-apiserver\\\" [control-plane] Creating static Pod manifest for \\\"kube-controller-manager\\\" [control-plane] Creating static Pod manifest for \\\"kube-scheduler\\\" [kubelet-start] Writing kubelet environment file with flags to file \\\"/var/lib/kubelet/kubeadm-flags.env\\\" [kubelet-start] Writing kubelet configuration to file \\\"/var/lib/kubelet/config.yaml\\\" [kubelet-start] Starting the kubelet [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory \\\"/etc/kubernetes/manifests\\\". This can take up to 4m0s [apiclient] All control plane components are healthy after 4.502579 seconds [upload-config] Storing the configuration used in ConfigMap \\\"kubeadm-config\\\" in the \\\"kube-system\\\" Namespace [kubelet] Creating a ConfigMap \\\"kubelet-config\\\" in namespace kube-system with the configuration for the kubelets in the cluster [upload-certs] Skipping phase. Please see --upload-certs [mark-control-plane] Marking the node node as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers] [mark-control-plane] Marking the node node as control-plane by adding the taints [node-role.kubernetes.io/control-plane:NoSchedule] [bootstrap-token] Using token: abcdef.0123456789abcdef [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster [bootstrap-token] Creating the \\\"cluster-info\\\" ConfigMap in the \\\"kube-public\\\" namespace [kubelet-finalize] Updating \\\"/etc/kubernetes/kubelet.conf\\\" to point to a rotatable kubelet client certificate and key [addons] Applied essential addon: CoreDNS [addons] Applied essential addon: kube-proxy Your Kubernetes control-plane has initialized successfully! To start using your cluster, you need to run the following as a regular user: mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config Alternatively, if you are the root user, you can run: export KUBECONFIG=/etc/kubernetes/admin.conf You should now deploy a pod network to the cluster. Run \\\"kubectl apply -f [podnetwork].yaml\\\" with one of the options listed at: https://kubernetes.io/docs/concepts/cluster-administration/addons/ Then you can join any number of worker nodes by running the following on each as root: kubeadm join 10.0.12.8:6443 --token abcdef.0123456789abcdef \\\\ --discovery-token-ca-cert-hash sha256:e7600c160a03f29329eda80b7e307ddb39a7714a8ec2f55aa36d08b1cc558996\",\"解释下上面的日志输出内容，看行首 [] 括起来的内容。\",\"[init] ：开始初始化集群，动作声明；\",\"[preflight] ：开始初始化之前的检查工作；\",\"[certs] ：生成相关的各种证书\",\"[kubeconfig] ：生成相关的kubeconfig文件\",\"[kubelet-start]： 生成kubelet的配置文件\\\"/var/lib/kubelet/config.yaml\\\"\",\"[control-plane] ：使用/etc/kubernetes/manifests目录中的yaml文件创建apiserver、controller-manager、scheduler的静态pod，也称为控制平面\",\"[bootstrap-token]：生成token记录下来，后边使用kubeadm join往集群中添加节点时会用到\",\"[addons]： 安装基本插件:CoreDNS, kube-proxy\",\"注意： 如果执行 kubeadm init --config=kubeadm-init.yml 时，需要重置\",\"sudo kubeadm reset\"]},\"182\":{\"h\":\"问题排查\",\"t\":[\"一般排查的错误的命令使用如下命令：\",\"查询系统错误\",\"journalctl -fu kubelet\",\"查看 kubelet 的状态\",\"sudo systemctl status kubelet\",\"查看容器的日志\",\"## 查看 pdo sudo crictl pod ## POD 的日志 sudo crictl logs <POD ID>\",\"查看节点的错误\",\"kubectl describe node node -n kube-system | grep -A 20 \\\"Conditions\\\"\",\"修改配置文件后，重新执行 kubeadm init --config=kubeadm-init.yml\"]},\"183\":{\"h\":\"配置kubectl\",\"t\":[\"mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config\"]},\"184\":{\"h\":\"部署网络插件\",\"t\":[\"安装 calico.yaml\",\"kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml\",\"或者安装 flannel.yaml\",\"kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\"]},\"185\":{\"h\":\"添加节点\",\"t\":[\"kubeadm join 10.0.12.8:6443 --token abcdef.0123456789abcdef \\\\ --discovery-token-ca-cert-hash sha256:e7600c160a03f29329eda80b7e307ddb39a7714a8ec2f55aa36d08b1cc558996\"]},\"186\":{\"h\":\"查看集群状态\",\"t\":[\"kubectl get nodes\"]},\"187\":{\"h\":\"参考\",\"t\":[\"containerd\",\"kubernetes-containerd\",\"Docker Hub 镜像加速器\"]},\"188\":{\"c\":[\"K8S\"]},\"189\":{\"c\":[]},\"190\":{\"h\":\"pod 资源\"},\"191\":{\"h\":\"pod 是 k8s 的最小单位\"},\"192\":{\"c\":[\"K8S\",\"POD\"]},\"193\":{\"c\":[]},\"194\":{\"h\":\"server 资源\"},\"195\":{\"c\":[\"K8S\",\"service\"]},\"196\":{\"c\":[]},\"197\":{\"h\":\"helm 使用\"},\"198\":{\"h\":\"helm 使用\"},\"199\":{\"h\":\"1.安装 helm\",\"t\":[\"使用脚本安装\",\"> curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 > chmod 700 get_helm.sh > ./get_helm.sh\",\"如果想直接执行安装，运行curl\",\"> curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash\"]},\"200\":{\"h\":\"参考文档：\",\"t\":[\"docs\"]},\"201\":{\"c\":[\"K8S\"]},\"202\":{\"c\":[]},\"203\":{\"h\":\"kubecm 使用\"},\"204\":{\"h\":\"kubecm 使用\",\"t\":[\"通过kubecm管理k8s多集群, 方便切换集群, 以及集群配置的统一管理。\"]},\"205\":{\"h\":\"1.安装 kubecm\",\"t\":[\"# 从 github 下载 VERSION=v0.27.1 # replace with the version you want, note the \\\"v\\\" prefix! # linux x86_64 curl -Lo kubecm.tar.gz https://github.com/sunny0826/kubecm/releases/download/${VERSION}/kubecm_${VERSION}_Linux_x86_64.tar.gz # macos curl -Lo kubecm.tar.gz https://github.com/sunny0826/kubecm/releases/download/${VERSION}/kubecm_${VERSION}_Darwin_x86_64.tar.gz # windows curl -Lo kubecm.tar.gz https://github.com/sunny0826/kubecm/releases/download/${VERSION}/kubecm_${VERSION}_Windows_x86_64.tar.gz # linux & macos tar -zxvf kubecm.tar.gz kubecm cd kubecm sudo mv kubecm /usr/local/bin/ # windows # Unzip kubecm.tar.gz # Add the binary in to your $PATH # curl -Lo kubecm.tar.gz https://github.com/sunny0826/kubecm/releases/download/v0.27.1/kubecm_v0.27.1_Linux_x86_64.tar.gz\"]},\"206\":{\"h\":\"2.配置 kubecm\",\"t\":[\"添加 KubeConfig 到 $HOME/.kube/config\",\"# 配置集群 # Merge test.yaml with $HOME/.kube/config kubecm add -f test.yaml\"]},\"207\":{\"h\":\"3.kubecm 使用\",\"t\":[\"查看集群\",\"kubecm list\",\"切换集群\",\"kubecm switch test\",\"切换namespace\",\"kubecm namespace # 切换到默认的 namespace\",\"重新命名\",\"kubecm rename\",\"更多的命令可以查看帮助\",\"kubecm -h\"]},\"208\":{\"h\":\"文档\",\"t\":[\"kubecm\"]},\"209\":{\"c\":[\"K8S\"]},\"210\":{\"c\":[]},\"211\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"212\":{\"c\":[]},\"213\":{\"h\":\"Books\"},\"214\":{\"c\":[]},\"215\":{\"h\":\"Golang\"},\"216\":{\"c\":[]},\"217\":{\"h\":\"K8s\"},\"218\":{\"c\":[]},\"219\":{\"h\":\"Webs\"},\"220\":{\"c\":[]},\"221\":{\"h\":\"Packages\"},\"222\":{\"c\":[]},\"223\":{\"h\":\"Performance\"},\"224\":{\"c\":[]},\"225\":{\"h\":\"Tests\"},\"226\":{\"c\":[]},\"227\":{\"h\":\"Gateway\"},\"228\":{\"c\":[]},\"229\":{\"h\":\"Installs\"},\"230\":{\"c\":[]},\"231\":{\"h\":\"Resource\"},\"232\":{\"c\":[]},\"233\":{\"h\":\"Tools\"},\"234\":{\"c\":[]}},\"dirtCount\":0,\"index\":[[\"重新命名\",{\"1\":{\"207\":1}}],[\"重新执行\",{\"1\":{\"182\":1}}],[\"切换到默认的\",{\"1\":{\"207\":1}}],[\"切换namespace\",{\"1\":{\"207\":1}}],[\"切换集群\",{\"1\":{\"207\":1}}],[\"切片的容量\",{\"1\":{\"87\":1}}],[\"切片的长度\",{\"1\":{\"87\":1}}],[\"切片元素\",{\"1\":{\"86\":1}}],[\"切片泛型库\",{\"1\":{\"84\":1}}],[\"到\",{\"1\":{\"206\":1}}],[\"方便切换集群\",{\"1\":{\"204\":1}}],[\"方法和函数调用的参数与返回值验证等\",{\"1\":{\"131\":1}}],[\"方法是否被调用\",{\"1\":{\"126\":1}}],[\"方法被调用的次数\",{\"1\":{\"125\":1}}],[\"方法\",{\"1\":{\"118\":1,\"132\":1}}],[\"方法的模拟行为\",{\"1\":{\"118\":2}}],[\"运行curl\",{\"1\":{\"199\":1}}],[\"资源\",{\"0\":{\"190\":1,\"194\":1}}],[\"添加\",{\"1\":{\"206\":1}}],[\"添加节点\",{\"0\":{\"185\":1}}],[\"添加参数\",{\"1\":{\"138\":1}}],[\"问题排查\",{\"0\":{\"182\":1}}],[\"后边使用kubeadm\",{\"1\":{\"181\":1}}],[\"动作声明\",{\"1\":{\"181\":1}}],[\"动态上游\",{\"1\":{\"152\":1}}],[\"括起来的内容\",{\"1\":{\"181\":1}}],[\"看行首\",{\"1\":{\"181\":1}}],[\"看看node是否被打污点了\",{\"1\":{\"162\":1}}],[\"日志文件中\",{\"1\":{\"181\":1}}],[\"中所需要填写正确的\",{\"1\":{\"180\":1}}],[\"中使用函数说明\",{\"0\":{\"122\":1}}],[\"就是上面\",{\"1\":{\"180\":1}}],[\"再次确认\",{\"1\":{\"180\":1}}],[\"下载\",{\"1\":{\"205\":1}}],[\"下载镜像\",{\"0\":{\"180\":1},\"1\":{\"180\":1}}],[\"下载二进制文件\",{\"0\":{\"175\":1},\"1\":{\"175\":1}}],[\"初始化集群\",{\"0\":{\"179\":1}}],[\"初始化一个mock\",{\"1\":{\"118\":1}}],[\"申明cgroup用\",{\"1\":{\"178\":1}}],[\"修配置文件\",{\"0\":{\"178\":1}}],[\"修改配置文件后\",{\"1\":{\"182\":1}}],[\"修改token过期时间为无限制\",{\"1\":{\"178\":1}}],[\"修改\",{\"1\":{\"171\":1}}],[\"修改为k8s\",{\"1\":{\"178\":1}}],[\"修改为\",{\"1\":{\"136\":1}}],[\"修改副本切片里的元素\",{\"1\":{\"88\":1}}],[\"~\",{\"1\":{\"176\":1}}],[\"~~del~~\",{\"1\":{\"55\":1}}],[\"自动补全功能\",{\"1\":{\"176\":1}}],[\"自定义参数\",{\"0\":{\"123\":1}}],[\"自定义mock调用顺序\",{\"0\":{\"126\":1}}],[\"自定义mock调用次数\",{\"0\":{\"125\":1}}],[\"自定义mock调用次数以及调用顺序\",{\"1\":{\"122\":1}}],[\"自定义mock实现主要包含了自定义参数\",{\"1\":{\"122\":1}}],[\"自定义返回值\",{\"0\":{\"124\":1},\"1\":{\"122\":1}}],[\"及\",{\"1\":{\"176\":1}}],[\"启动containerd服务\",{\"1\":{\"175\":1}}],[\"启用ipvs\",{\"1\":{\"178\":1}}],[\"启用\",{\"1\":{\"79\":1}}],[\"解释下上面的日志输出内容\",{\"1\":{\"181\":1}}],[\"解压二进制文件并且配置\",{\"1\":{\"175\":1}}],[\"解析上面的代码\",{\"1\":{\"118\":1}}],[\"才开始配置\",{\"1\":{\"175\":1}}],[\"二进制下载到本地\",{\"1\":{\"175\":1}}],[\"分别把\",{\"1\":{\"175\":1}}],[\"分别代表一下含义\",{\"1\":{\"123\":1}}],[\"加载模块\",{\"1\":{\"172\":1}}],[\"加载ipvs模块\",{\"1\":{\"172\":1}}],[\"执行初始化并将日志记录到\",{\"1\":{\"181\":1}}],[\"执行下面命令生效\",{\"1\":{\"171\":1}}],[\"执行操作后\",{\"1\":{\"87\":1}}],[\"注释swap挂载\",{\"1\":{\"170\":1}}],[\"注意\",{\"0\":{\"127\":1,\"138\":1},\"1\":{\"161\":1,\"180\":1,\"181\":1}}],[\"注意问题\",{\"1\":{\"94\":1}}],[\"默认配置下kubelet将无法启动\",{\"1\":{\"170\":1}}],[\"默认为true\",{\"1\":{\"113\":1}}],[\"关闭系统的swap方法如下\",{\"1\":{\"170\":1}}],[\"关闭swap\",{\"0\":{\"170\":1},\"1\":{\"170\":1}}],[\"关闭selinux\",{\"1\":{\"169\":1}}],[\"关闭selinux及nfs\",{\"0\":{\"169\":1}}],[\"关闭nfs\",{\"1\":{\"169\":1}}],[\"打开终端输入以下命令安装ntpdate工具\",{\"1\":{\"168\":1}}],[\"打桩\",{\"1\":{\"135\":1,\"136\":1}}],[\"同步时间\",{\"0\":{\"168\":1}}],[\"同样设置了对\",{\"1\":{\"118\":1}}],[\"更多的命令可以查看帮助\",{\"1\":{\"207\":1}}],[\"更新\",{\"0\":{\"167\":1}}],[\"更短的字符串被认为是较小的\",{\"1\":{\"90\":1}}],[\"准备包环境\",{\"0\":{\"166\":1}}],[\"去掉污点\",{\"1\":{\"162\":1}}],[\"不会调度\",{\"1\":{\"162\":1}}],[\"不为空\",{\"1\":{\"118\":3}}],[\"也称为控制平面\",{\"1\":{\"181\":1}}],[\"也有被调度的几率\",{\"1\":{\"162\":1}}],[\"也能用于其它的测试环境中\",{\"1\":{\"107\":1}}],[\"尽量不被调度\",{\"1\":{\"162\":1}}],[\"尽管处理后的切片长度减少了\",{\"1\":{\"89\":1}}],[\"污点值有三个\",{\"1\":{\"162\":1}}],[\"镜像加速器\",{\"1\":{\"161\":1,\"187\":1}}],[\"请检\",{\"1\":{\"161\":1}}],[\"请排查以下方法\",{\"1\":{\"161\":1}}],[\"|sandbox\",{\"1\":{\"175\":1}}],[\"|grep\",{\"1\":{\"162\":1}}],[\"|\",{\"1\":{\"161\":1,\"175\":2,\"176\":1,\"181\":1,\"182\":1,\"199\":1}}],[\"或者安装\",{\"1\":{\"184\":1}}],[\"或者使用下面命令\",{\"1\":{\"127\":1}}],[\"或查询\",{\"1\":{\"161\":1}}],[\"检查\",{\"1\":{\"161\":2}}],[\"节点一直处于\",{\"1\":{\"161\":1}}],[\"节点状态\",{\"1\":{\"161\":1}}],[\"状态\",{\"0\":{\"161\":1},\"1\":{\"161\":2}}],[\"支持多种平台\",{\"1\":{\"157\":1}}],[\"支持多种语言\",{\"1\":{\"157\":1}}],[\"支持多种插件\",{\"1\":{\"157\":1}}],[\"支持多种安全策略\",{\"1\":{\"157\":1}}],[\"支持多种流量管理策略\",{\"1\":{\"157\":1}}],[\"支持多种负载均衡策略\",{\"1\":{\"157\":1}}],[\"支持多种存储方式\",{\"1\":{\"157\":1}}],[\"支持多种协议\",{\"1\":{\"157\":1}}],[\"支持为全局变量打一个桩\",{\"1\":{\"132\":1}}],[\"支持为成员方法打一个特定的桩序列\",{\"1\":{\"132\":1}}],[\"支持为成员方法打一个桩\",{\"1\":{\"132\":1}}],[\"支持为函数变量打一个特定的桩序列\",{\"1\":{\"132\":1}}],[\"支持为函数变量打一个桩\",{\"1\":{\"132\":1}}],[\"支持为函数\",{\"1\":{\"132\":2}}],[\"官方文档\",{\"1\":{\"153\":1}}],[\"官方地址\",{\"1\":{\"80\":1}}],[\"身份认证\",{\"1\":{\"152\":1}}],[\"服务熔断\",{\"1\":{\"152\":1}}],[\"灰度发布\",{\"1\":{\"152\":1}}],[\"提供了负载均衡\",{\"1\":{\"152\":1}}],[\"提高应用程序的稳定性和用户体验\",{\"1\":{\"93\":1}}],[\"网关\",{\"1\":{\"152\":1}}],[\"高性能的云原生\",{\"1\":{\"152\":1}}],[\"实时\",{\"1\":{\"152\":1}}],[\"实现\",{\"0\":{\"116\":1}}],[\"实现了较为完整的基于interface的mock功能\",{\"1\":{\"107\":1}}],[\"一般排查的错误的命令使用如下命令\",{\"1\":{\"182\":1}}],[\"一定不被调度\",{\"1\":{\"162\":1}}],[\"一直处于\",{\"0\":{\"161\":1}}],[\"一款新鲜出炉的\",{\"1\":{\"149\":1}}],[\"一字不差地传递标志给go\",{\"1\":{\"113\":1}}],[\"而无需在每个平台上手动安装\",{\"1\":{\"147\":1}}],[\"而无需实际连接到真实的数据库\",{\"1\":{\"141\":1}}],[\"项目是\",{\"1\":{\"147\":1}}],[\"数据库\",{\"1\":{\"144\":1}}],[\"数据过大\",{\"1\":{\"94\":1}}],[\"模拟数据库驱动编写单元测试用例\",{\"1\":{\"144\":1}}],[\"确保所有预期的操作都已完成\",{\"1\":{\"143\":1}}],[\"验证结果\",{\"1\":{\"143\":1}}],[\"^select\",{\"1\":{\"143\":1}}],[\"预期的查询行为和结果\",{\"1\":{\"143\":1}}],[\"被测试的函数\",{\"1\":{\"143\":1}}],[\"进行单元测试\",{\"1\":{\"141\":1}}],[\"进行单元测试是一种常见且有效的方式\",{\"1\":{\"141\":1}}],[\"展示如何使用\",{\"1\":{\"141\":1}}],[\"选择go\",{\"1\":{\"138\":1}}],[\"选择使用项目\",{\"1\":{\"79\":1}}],[\"编辑配置\",{\"1\":{\"138\":1}}],[\"编辑写测试文件\",{\"0\":{\"118\":1}}],[\"里面可以添加运行配置\",{\"1\":{\"138\":1}}],[\"如下\",{\"1\":{\"138\":1}}],[\"如果想直接执行安装\",{\"1\":{\"199\":1}}],[\"如果执行\",{\"1\":{\"181\":1}}],[\"如果不关闭\",{\"1\":{\"170\":1}}],[\"如果不设置此项包名默认在原包名前添加mock\",{\"1\":{\"113\":1}}],[\"如果不设置此项\",{\"1\":{\"113\":1}}],[\"如果无法安装成功\",{\"1\":{\"161\":1}}],[\"如果无法访问外网的情况\",{\"1\":{\"161\":1}}],[\"如果没有安装\",{\"1\":{\"161\":1}}],[\"如果出现错误信息\",{\"1\":{\"161\":1}}],[\"如果是是goland\",{\"1\":{\"138\":1}}],[\"如果在\",{\"1\":{\"127\":1}}],[\"如果定义的\",{\"0\":{\"127\":1}}],[\"如果为true\",{\"1\":{\"113\":1}}],[\"如果设置\",{\"1\":{\"113\":1}}],[\"如果mock的包被设置为它的一个输入\",{\"1\":{\"113\":1}}],[\"如果其中一个接口没有指定自定义名称\",{\"1\":{\"113\":1}}],[\"如果\",{\"1\":{\"90\":3,\"161\":1}}],[\"如果两个切片在某一个切片结束之前都保持相等\",{\"1\":{\"90\":1}}],[\"经常失败\",{\"1\":{\"138\":1}}],[\"上\",{\"1\":{\"138\":1}}],[\"成员方法打桩\",{\"0\":{\"137\":1}}],[\"恢复到原始值\",{\"1\":{\"136\":1}}],[\"全局变量\",{\"1\":{\"136\":1}}],[\"简单的例子\",{\"1\":{\"135\":1,\"136\":1}}],[\"简介\",{\"0\":{\"107\":1,\"131\":1,\"147\":1}}],[\"作用\",{\"1\":{\"132\":1}}],[\"接口打一个特定的桩序列\",{\"1\":{\"132\":1}}],[\"接口打一个桩\",{\"1\":{\"132\":2}}],[\"能够模拟各种不同的情况和边界条件\",{\"1\":{\"131\":1}}],[\"能够与golang内置的testing包良好集成\",{\"1\":{\"107\":1}}],[\"语言的跨平台构建工具\",{\"1\":{\"147\":1}}],[\"语言的介绍\",{\"0\":{\"73\":1}}],[\"语言中\",{\"1\":{\"141\":1}}],[\"语言中非常有用的测试工具库\",{\"1\":{\"131\":1}}],[\"代码测试利器\",{\"1\":{\"149\":1}}],[\"代码\",{\"1\":{\"147\":1}}],[\"代码示例\",{\"1\":{\"128\":1}}],[\"代码将打印到标准输出\",{\"1\":{\"113\":1}}],[\"所以生成mock\",{\"1\":{\"127\":1}}],[\"新建测试文件\",{\"1\":{\"143\":1}}],[\"新建文件\",{\"1\":{\"143\":1}}],[\"新建\",{\"1\":{\"127\":2}}],[\"次\",{\"1\":{\"125\":1}}],[\"任意次数\",{\"1\":{\"125\":1}}],[\"指定次数\",{\"1\":{\"125\":1}}],[\"指定的值应为foo=bar\",{\"1\":{\"113\":1}}],[\"查询系统错误\",{\"1\":{\"182\":1}}],[\"查网络插件是否安装成功\",{\"1\":{\"161\":1}}],[\"查看集群\",{\"1\":{\"207\":1}}],[\"查看集群状态\",{\"0\":{\"186\":1}}],[\"查看节点的错误\",{\"1\":{\"182\":1}}],[\"查看容器的日志\",{\"1\":{\"182\":1}}],[\"查看是否已经关闭\",{\"1\":{\"170\":1}}],[\"查看是否有报错信息\",{\"1\":{\"161\":2}}],[\"查看\",{\"1\":{\"161\":1,\"162\":1,\"182\":2}}],[\"查看可视化界面\",{\"1\":{\"121\":1}}],[\"查找\",{\"1\":{\"86\":1}}],[\"查找切片里的最小元素\",{\"1\":{\"85\":1}}],[\"查找切片里的最大元素\",{\"1\":{\"85\":1}}],[\"查找指定元素在切片中的索引位置\",{\"1\":{\"85\":1}}],[\"工具\",{\"1\":{\"121\":1}}],[\"利用\",{\"1\":{\"121\":1}}],[\"可观测性等丰富的流量管理功能\",{\"1\":{\"152\":1}}],[\"可以查看\",{\"1\":{\"161\":1}}],[\"可以下载\",{\"1\":{\"161\":1}}],[\"可以设置template\",{\"1\":{\"138\":1}}],[\"可以参考下面代码\",{\"1\":{\"127\":1}}],[\"可以通过一下2种方式定义mock执行的顺序\",{\"1\":{\"126\":1}}],[\"可以方便的进行单元测试\",{\"1\":{\"100\":1}}],[\"可以方便地在\",{\"1\":{\"94\":1}}],[\"可视化界面\",{\"0\":{\"121\":1}}],[\"7607692ki\",{\"1\":{\"161\":1}}],[\"7\",{\"0\":{\"121\":1},\"1\":{\"175\":2}}],[\"700\",{\"1\":{\"199\":1}}],[\"70\",{\"1\":{\"86\":1}}],[\"✗\",{\"1\":{\"119\":1,\"120\":1,\"121\":1}}],[\"➜\",{\"1\":{\"119\":1,\"120\":1,\"121\":1}}],[\"总的来说\",{\"1\":{\"118\":1}}],[\"与\",{\"1\":{\"118\":1}}],[\"变量中\",{\"1\":{\"118\":1}}],[\"调用被测试的函数\",{\"1\":{\"143\":1}}],[\"调用其\",{\"1\":{\"118\":1}}],[\"调用\",{\"1\":{\"118\":1}}],[\"来执行模拟的方法\",{\"1\":{\"118\":1}}],[\"来设置对\",{\"1\":{\"118\":1}}],[\"来确保在测试结束时进行必要的清理工作\",{\"1\":{\"118\":1}}],[\"对相关功能的结果进行了断言验证\",{\"1\":{\"118\":1}}],[\"对象的方法名\",{\"1\":{\"132\":2}}],[\"对象\",{\"1\":{\"118\":2}}],[\"对切片里的元素进行升序排列\",{\"1\":{\"85\":1}}],[\"然后执行安装命令\",{\"1\":{\"161\":1}}],[\"然后修改镜像地址\",{\"1\":{\"161\":1}}],[\"然后创建了实际的\",{\"1\":{\"118\":1}}],[\"然后\",{\"1\":{\"118\":1}}],[\"控制器\",{\"1\":{\"118\":1}}],[\"创建数据库连接模拟对象\",{\"1\":{\"143\":1}}],[\"创建了控制器并在结束时进行清理\",{\"1\":{\"118\":1}}],[\"创建了一个模拟的\",{\"1\":{\"118\":1}}],[\"创建了一个\",{\"1\":{\"118\":1}}],[\"创建一个初始用户\",{\"1\":{\"94\":1}}],[\"首先\",{\"1\":{\"118\":1}}],[\"测试单个方法\",{\"1\":{\"148\":1}}],[\"测试将全局变量\",{\"1\":{\"136\":2}}],[\"测试覆盖率\",{\"0\":{\"120\":1}}],[\"测试\",{\"0\":{\"119\":1},\"1\":{\"118\":1,\"144\":1}}],[\"断言没有错误发生\",{\"1\":{\"118\":1}}],[\"断言\",{\"1\":{\"118\":6,\"125\":1,\"126\":1}}],[\"判断结果\",{\"1\":{\"118\":1}}],[\"判断切片是否按照升序排列\",{\"1\":{\"85\":1}}],[\"判断切片是否包含指定元素\",{\"1\":{\"85\":1}}],[\"参数\",{\"1\":{\"127\":1,\"138\":1,\"171\":1}}],[\"参数支持eq\",{\"1\":{\"123\":1}}],[\"参数为\",{\"0\":{\"117\":1}}],[\"参考文档\",{\"0\":{\"139\":1,\"144\":1,\"200\":1},\"1\":{\"176\":1}}],[\"参考\",{\"0\":{\"91\":1,\"128\":1,\"149\":1,\"153\":1,\"187\":1}}],[\"参考我文档\",{\"0\":{\"80\":1}}],[\"目录下\",{\"0\":{\"117\":1}}],[\"目标元素\",{\"1\":{\"86\":2}}],[\"该方法都将返回\",{\"1\":{\"118\":1}}],[\"该文件在\",{\"0\":{\"117\":1}}],[\"该函数有两个返回值\",{\"1\":{\"86\":1}}],[\"文件中使用\",{\"1\":{\"127\":1}}],[\"文件生成可视化界面\",{\"1\":{\"121\":1}}],[\"文件下创建\",{\"1\":{\"118\":1}}],[\"文件\",{\"0\":{\"117\":1},\"1\":{\"121\":1,\"127\":1,\"161\":1}}],[\"文档\",{\"0\":{\"1\":1,\"97\":1,\"208\":1},\"1\":{\"1\":2}}],[\"命令为接口生成\",{\"0\":{\"116\":1}}],[\"定义的文件\",{\"1\":{\"127\":1}}],[\"定义\",{\"0\":{\"115\":1}}],[\"例子\",{\"0\":{\"114\":1,\"135\":1}}],[\"例如在不同文件中定义的嵌入式接口\",{\"1\":{\"113\":1}}],[\"例如\",{\"1\":{\"89\":1}}],[\"将其写入标准输出并退出\",{\"1\":{\"113\":1}}],[\"将切片里连续的相同元素替换为一个元素\",{\"1\":{\"85\":1}}],[\"只生成反射程序\",{\"1\":{\"113\":1}}],[\"则写入包文档注释\",{\"1\":{\"113\":1}}],[\"则执行此反射程序\",{\"1\":{\"113\":1}}],[\"则将使用默认命名约定\",{\"1\":{\"113\":1}}],[\"反射模式\",{\"1\":{\"113\":2}}],[\"反转切片的元素\",{\"1\":{\"85\":1}}],[\"反转\",{\"1\":{\"85\":1}}],[\"仅打印解析器结果\",{\"1\":{\"113\":1}}],[\"仅反射模式\",{\"1\":{\"113\":1}}],[\"用于可以动态地控制返回值\",{\"1\":{\"124\":1}}],[\"用于无返回值的场景\",{\"1\":{\"124\":1}}],[\"用于返回确定的值的场景\",{\"1\":{\"124\":1}}],[\"用于表示参数none\",{\"1\":{\"123\":1}}],[\"用于表示参数非\",{\"1\":{\"123\":1}}],[\"用于任意参数的场景\",{\"1\":{\"123\":1}}],[\"用于参数为固定值的场景\",{\"1\":{\"123\":1}}],[\"用于将版权标头添加到生成的源代码中的版权文件\",{\"1\":{\"113\":1}}],[\"用于生成的模拟类源代码的包名\",{\"1\":{\"113\":1}}],[\"排除哪个导入\",{\"1\":{\"113\":1}}],[\"排序\",{\"1\":{\"85\":1}}],[\"那么mockgen就无法检测到最终的输出包\",{\"1\":{\"113\":1}}],[\"那么长度较短的切片被认为小于较长的切片\",{\"1\":{\"90\":1}}],[\"并进行检查\",{\"1\":{\"172\":1}}],[\"并获取返回的结果\",{\"1\":{\"118\":1}}],[\"并将结果存储在\",{\"1\":{\"118\":1}}],[\"并在函数结束时通过\",{\"1\":{\"118\":1}}],[\"并且还会驱逐node已有pod\",{\"1\":{\"162\":1}}],[\"并且不是同一个文件的情况\",{\"0\":{\"127\":1},\"1\":{\"127\":1}}],[\"并且调用次数没有限制\",{\"1\":{\"118\":1}}],[\"并且写入下面的代码\",{\"1\":{\"118\":1}}],[\"并且输出是stdio\",{\"1\":{\"113\":1}}],[\"并返回其在切片中的\",{\"1\":{\"86\":1}}],[\"形式为repository\",{\"1\":{\"113\":1}}],[\"需要重置\",{\"1\":{\"181\":1}}],[\"需要使用\",{\"1\":{\"138\":1}}],[\"需要参考以解决的附加文件列表\",{\"1\":{\"113\":1}}],[\"需要配置\",{\"1\":{\"94\":1}}],[\"前缀\",{\"1\":{\"113\":1}}],[\"生成token记录下来\",{\"1\":{\"181\":1}}],[\"生成kubelet的配置文件\",{\"1\":{\"181\":1}}],[\"生成相关的kubeconfig文件\",{\"1\":{\"181\":1}}],[\"生成相关的各种证书\",{\"1\":{\"181\":1}}],[\"生成配置文件\",{\"0\":{\"177\":1}}],[\"生成测试覆盖率的\",{\"1\":{\"121\":1}}],[\"生成\",{\"0\":{\"117\":1}}],[\"生成的代码的完整包导入路径\",{\"1\":{\"113\":1}}],[\"生成的模拟的自定义名称列表\",{\"1\":{\"113\":1}}],[\"生成的源代码写入的文件\",{\"1\":{\"113\":1}}],[\"生成模拟对象\",{\"1\":{\"113\":1}}],[\"通常是主输入\",{\"1\":{\"113\":1}}],[\"通常需要指定主要的参数\",{\"1\":{\"113\":1}}],[\"通过kubecm管理k8s多集群\",{\"1\":{\"204\":1}}],[\"通过inorder关键字来实现保序\",{\"1\":{\"126\":1}}],[\"通过after关键字来实现保序\",{\"1\":{\"126\":1}}],[\"通过该函数我们可以为任何的数据结构定义比较逻辑\",{\"1\":{\"86\":1}}],[\"通过二分查找算法查找指定元素\",{\"1\":{\"85\":1}}],[\"64\",{\"1\":{\"205\":5}}],[\"6443\",{\"1\":{\"178\":1,\"181\":1,\"185\":1}}],[\"630\",{\"1\":{\"123\":1,\"124\":1,\"126\":1}}],[\"6\",{\"0\":{\"120\":1,\"172\":1},\"1\":{\"110\":1,\"111\":1,\"120\":1,\"121\":1,\"135\":1,\"175\":1}}],[\"其中repository是接口名称\",{\"1\":{\"113\":1}}],[\"其中bar\",{\"1\":{\"113\":2}}],[\"其中gomock包完成对桩对象生命周期的管理\",{\"1\":{\"107\":1}}],[\"其中有一个是\",{\"1\":{\"86\":1}}],[\"它允许您使用单个命令构建和测试您的\",{\"1\":{\"147\":1}}],[\"它提供了多种功能\",{\"1\":{\"131\":1}}],[\"它提供了丰富的断言\",{\"1\":{\"100\":1}}],[\"它帮助开发人员监控应用程序的性能\",{\"1\":{\"93\":1}}],[\"是\",{\"0\":{\"191\":1},\"1\":{\"127\":1}}],[\"是包名\",{\"1\":{\"127\":1}}],[\"是所需的mock名称\",{\"1\":{\"113\":1}}],[\"是一个开源的网关\",{\"1\":{\"157\":1}}],[\"是一个动态\",{\"1\":{\"152\":1}}],[\"是一个实现\",{\"1\":{\"141\":1}}],[\"是一个在\",{\"1\":{\"131\":1}}],[\"是一个\",{\"1\":{\"100\":1}}],[\"是什么\",{\"0\":{\"100\":1}}],[\"是强类型的语言\",{\"1\":{\"74\":1}}],[\"单元测试\",{\"0\":{\"99\":1,\"106\":1,\"130\":1,\"141\":1,\"146\":1}}],[\"queryrow\",{\"1\":{\"143\":1}}],[\"query\",{\"1\":{\"96\":1}}],[\"避免\",{\"1\":{\"94\":1}}],[\"清理方式\",{\"1\":{\"94\":1}}],[\"具体参见\",{\"1\":{\"94\":1}}],[\"防止启动时报错\",{\"1\":{\"94\":1}}],[\"因为设置的\",{\"0\":{\"117\":1}}],[\"因为我们使用的是\",{\"1\":{\"94\":1}}],[\"因此是浅拷贝\",{\"1\":{\"88\":1}}],[\"配置集群\",{\"1\":{\"206\":1}}],[\"配置kubectl\",{\"0\":{\"183\":1}}],[\"配置支持ipvs\",{\"0\":{\"172\":1}}],[\"配置模板\",{\"1\":{\"138\":1}}],[\"配置为\",{\"1\":{\"94\":2}}],[\"配置数据库密码\",{\"1\":{\"94\":1}}],[\"配置\",{\"0\":{\"206\":1},\"1\":{\"94\":2,\"175\":2,\"176\":1}}],[\"为pod网络指定网络段\",{\"1\":{\"178\":1}}],[\"为变量\",{\"1\":{\"136\":1}}],[\"为变量打桩\",{\"0\":{\"136\":1}}],[\"为全局变量打一个桩\",{\"1\":{\"132\":1}}],[\"为成员方法打一个特定的桩序列\",{\"1\":{\"132\":1}}],[\"为成员方法打一个桩\",{\"1\":{\"132\":1}}],[\"为函数打桩\",{\"1\":{\"135\":1}}],[\"为函数变量打一个特定的桩序列\",{\"1\":{\"132\":1}}],[\"为函数变量打一个桩\",{\"1\":{\"132\":1}}],[\"为函数\",{\"1\":{\"132\":1,\"135\":1}}],[\"为\",{\"1\":{\"94\":1}}],[\"为确保这些对象可以被回收\",{\"1\":{\"89\":1}}],[\"zxvf\",{\"1\":{\"205\":1}}],[\"zero\",{\"1\":{\"175\":1}}],[\"zookeeper\",{\"1\":{\"94\":3}}],[\"zh\",{\"1\":{\"1\":1,\"79\":1,\"176\":1}}],[\"集群中部署\",{\"1\":{\"94\":1}}],[\"部署网络插件\",{\"0\":{\"184\":1}}],[\"部署\",{\"0\":{\"94\":1}}],[\"部分\",{\"1\":{\"79\":1}}],[\"以下是一个简单的示例\",{\"1\":{\"141\":1}}],[\"以外的值场景\",{\"1\":{\"123\":1}}],[\"以确保代码的正确性和稳定性\",{\"1\":{\"118\":1}}],[\"以便及时发现并解决潜在的问题\",{\"1\":{\"93\":1}}],[\"以及集群配置的统一管理\",{\"1\":{\"204\":1}}],[\"以及\",{\"1\":{\"85\":1}}],[\"捕获和分析错误\",{\"1\":{\"93\":1}}],[\"性能监听工具\",{\"0\":{\"93\":1}}],[\"此比较函数基于字符串的长度而不是字典顺序\",{\"1\":{\"90\":1}}],[\"案例\",{\"0\":{\"143\":1},\"1\":{\"90\":1}}],[\"这使得测试能够更加灵活和全面\",{\"1\":{\"131\":1}}],[\"这段单元测试代码通过模拟服务方法的行为\",{\"1\":{\"118\":1}}],[\"这种情况就会发生\",{\"1\":{\"113\":1}}],[\"这被指定为一个逗号分隔的元素列表\",{\"1\":{\"113\":1}}],[\"这是你想要生成模拟对象的接口定义所在的文件路径\",{\"1\":{\"113\":1}}],[\"这里表示无论传入任何参数\",{\"1\":{\"118\":1}}],[\"这里主要介绍\",{\"1\":{\"100\":1}}],[\"这里就不做介绍了\",{\"1\":{\"100\":1}}],[\"这里就不多介绍\",{\"1\":{\"90\":1}}],[\"这些元素会阻止它们所引用的对象被垃圾回收\",{\"1\":{\"89\":1}}],[\"这些尾部的元素\",{\"1\":{\"89\":1}}],[\"小节里已经介绍过\",{\"1\":{\"90\":1}}],[\"结果为\",{\"1\":{\"90\":3}}],[\"直到有一对元素不相等\",{\"1\":{\"90\":1}}],[\"开始初始化之前的检查工作\",{\"1\":{\"181\":1}}],[\"开始初始化集群\",{\"1\":{\"181\":1}}],[\"开始进行比较\",{\"1\":{\"90\":1}}],[\"开启内核ipv4转发\",{\"1\":{\"171\":1}}],[\"开启\",{\"1\":{\"79\":1,\"94\":1}}],[\"元素按顺序从索引\",{\"1\":{\"90\":1}}],[\"元素是赋值复制\",{\"1\":{\"88\":1}}],[\"内部使用\",{\"1\":{\"90\":1}}],[\"忽略大小写\",{\"1\":{\"89\":1}}],[\"相等\",{\"1\":{\"90\":2}}],[\"相同元素合并为一个\",{\"1\":{\"89\":1}}],[\"相关的的函数有\",{\"1\":{\"85\":1}}],[\"相关的函数有\",{\"1\":{\"85\":16}}],[\"我们应该考虑将这些元素置为\",{\"1\":{\"89\":1}}],[\"特别是当元素为指针时\",{\"1\":{\"89\":1}}],[\"虽不在新切片中\",{\"1\":{\"89\":1}}],[\"抛弃\",{\"1\":{\"89\":1}}],[\"但它对每对元素使用自定义的比较函数进行比较\",{\"1\":{\"90\":1}}],[\"但它更加灵活\",{\"1\":{\"86\":1}}],[\"但可以指定一个函数来比较元素是否相等\",{\"1\":{\"89\":1}}],[\"但仍占用内存\",{\"1\":{\"89\":1}}],[\"但其底层数组的实际值仍然包括被\",{\"1\":{\"89\":1}}],[\"陈明勇\",{\"1\":{\"88\":1}}],[\"原切片的元素也会更新\",{\"1\":{\"88\":1}}],[\"由于是浅拷贝\",{\"1\":{\"88\":1}}],[\"函数使用说明\",{\"1\":{\"132\":1}}],[\"函数的\",{\"1\":{\"131\":1}}],[\"函数的功能类似\",{\"1\":{\"90\":1}}],[\"函数和全局变量的打桩\",{\"1\":{\"131\":1}}],[\"函数\",{\"1\":{\"118\":2}}],[\"函数对\",{\"1\":{\"90\":1}}],[\"函数是一个比较函数\",{\"1\":{\"90\":1}}],[\"函数类似\",{\"1\":{\"89\":1,\"118\":1}}],[\"函数与\",{\"1\":{\"89\":1}}],[\"函数会将切片里连续的相同元素替换为一个元素\",{\"1\":{\"89\":1}}],[\"函数返回一个拷贝的切片副本\",{\"1\":{\"88\":1}}],[\"函数用于删除切片中未使用的容量\",{\"1\":{\"87\":1}}],[\"函数用于在有序的切片中\",{\"1\":{\"86\":1}}],[\"404\",{\"1\":{\"211\":1}}],[\"4m0s\",{\"1\":{\"178\":1,\"181\":1}}],[\"4\",{\"0\":{\"118\":1,\"126\":1,\"170\":1},\"1\":{\"87\":4,\"89\":5,\"135\":3,\"161\":2,\"181\":1}}],[\"4ac\",{\"1\":{\"55\":1}}],[\"应返回\",{\"1\":{\"86\":1}}],[\"时\",{\"1\":{\"86\":1,\"113\":1,\"181\":1}}],[\"等于\",{\"1\":{\"86\":1}}],[\"等价比较\",{\"1\":{\"85\":1}}],[\"返回\",{\"1\":{\"135\":1,\"136\":1}}],[\"返回值需序列\",{\"1\":{\"132\":3}}],[\"返回值支持如下几种\",{\"1\":{\"124\":1}}],[\"返回值为\",{\"1\":{\"86\":1}}],[\"返回第一对不匹配元素的比较结果\",{\"1\":{\"90\":1}}],[\"返回正数\",{\"1\":{\"86\":1}}],[\"返回负数\",{\"1\":{\"86\":1}}],[\"之前\",{\"1\":{\"86\":1}}],[\"当存在多个mock之间相互调用的情况时\",{\"1\":{\"126\":1}}],[\"当前\",{\"1\":{\"86\":1}}],[\"当\",{\"1\":{\"86\":2}}],[\"类型\",{\"1\":{\"86\":1}}],[\"类似\",{\"1\":{\"86\":1}}],[\"比较规则是\",{\"1\":{\"90\":1}}],[\"比较元素时\",{\"1\":{\"89\":1}}],[\"比较函数在\",{\"1\":{\"90\":1}}],[\"比较函数的介绍如下\",{\"1\":{\"86\":1}}],[\"比较函数\",{\"1\":{\"86\":1}}],[\"比较两个切片是否相等\",{\"1\":{\"85\":1}}],[\"比较两个切片的大小\",{\"1\":{\"85\":1}}],[\"输入命令设置系统时间与网络时间同步\",{\"1\":{\"168\":1}}],[\"输入你开启的discussion\",{\"1\":{\"79\":1}}],[\"输出\",{\"1\":{\"86\":2,\"87\":1,\"89\":2,\"90\":1,\"143\":1,\"161\":1}}],[\"8开始要求关闭系统的swap\",{\"1\":{\"170\":1}}],[\"8\",{\"1\":{\"87\":2,\"102\":1,\"161\":1,\"175\":1,\"181\":4,\"185\":1}}],[\"8080\",{\"1\":{\"104\":1}}],[\"80\",{\"1\":{\"86\":1}}],[\"85\",{\"1\":{\"86\":1}}],[\"96\",{\"1\":{\"178\":1,\"181\":1}}],[\"9\",{\"1\":{\"175\":1,\"180\":2}}],[\"98\",{\"1\":{\"86\":1}}],[\"95\",{\"1\":{\"86\":2}}],[\"90\",{\"1\":{\"86\":1}}],[\"999\",{\"1\":{\"175\":1}}],[\"99\",{\"1\":{\"52\":1,\"86\":1,\"171\":2}}],[\"表示是否在切片中找到指定元素\",{\"1\":{\"86\":1}}],[\"值的场景\",{\"1\":{\"123\":1}}],[\"值为foo=bar\",{\"1\":{\"113\":1}}],[\"值\",{\"1\":{\"86\":1}}],[\"第三个参数表示桩序列参数\",{\"1\":{\"132\":1}}],[\"第三个参数表示桩函数\",{\"1\":{\"132\":1}}],[\"第二个参数表示桩序列参数\",{\"1\":{\"132\":2}}],[\"第二个参数表示桩函数\",{\"1\":{\"132\":3}}],[\"第二个是一个\",{\"1\":{\"86\":1}}],[\"第一个的切片大于第二个的切片\",{\"1\":{\"90\":4}}],[\"第一个的切片小于第二个的切片\",{\"1\":{\"90\":2}}],[\"第一个是指定元素的下标索引\",{\"1\":{\"86\":1}}],[\"替换为国内的镜像仓库\",{\"1\":{\"178\":1}}],[\"替换切片里的元素\",{\"1\":{\"85\":1}}],[\"替换\",{\"1\":{\"85\":1}}],[\"最小次数\",{\"1\":{\"125\":1}}],[\"最小值\",{\"1\":{\"85\":1}}],[\"最大次数\",{\"1\":{\"125\":1}}],[\"最大值\",{\"1\":{\"85\":1}}],[\"最后输入命令将时间更新到硬件上即可\",{\"1\":{\"168\":1}}],[\"最后\",{\"1\":{\"118\":1}}],[\"有序判断\",{\"1\":{\"85\":1}}],[\"往切片里插入一组值\",{\"1\":{\"85\":1}}],[\"往下滑动到\",{\"1\":{\"79\":1}}],[\"插入\",{\"1\":{\"85\":1}}],[\"索引查找\",{\"1\":{\"85\":1}}],[\"增加切片的容量\",{\"1\":{\"85\":1}}],[\"扩容\",{\"1\":{\"85\":1}}],[\"从\",{\"1\":{\"205\":1}}],[\"从数据库中获取用户信息\",{\"1\":{\"143\":1}}],[\"从而能够独立地测试与数据库交互的代码逻辑\",{\"1\":{\"141\":1}}],[\"从而减少了切片的长度\",{\"1\":{\"85\":1}}],[\"从切片中删除一个或多个元素\",{\"1\":{\"85\":1}}],[\"删除桩\",{\"1\":{\"132\":1}}],[\"删除\",{\"1\":{\"85\":1}}],[\"删除切片中未使用的容量\",{\"1\":{\"85\":1}}],[\"大小比较\",{\"0\":{\"90\":1},\"1\":{\"85\":1}}],[\"压缩\",{\"0\":{\"89\":1},\"1\":{\"85\":1}}],[\"浅拷贝一个切片副本\",{\"1\":{\"85\":1}}],[\"克隆\",{\"0\":{\"88\":1},\"1\":{\"85\":1}}],[\"裁剪\",{\"0\":{\"87\":1},\"1\":{\"85\":1}}],[\"和错误\",{\"1\":{\"118\":1}}],[\"和错误追踪平台\",{\"1\":{\"93\":1}}],[\"和\",{\"0\":{\"86\":1,\"89\":1,\"90\":1},\"1\":{\"85\":11,\"90\":2}}],[\"搜索\",{\"0\":{\"86\":1},\"1\":{\"85\":1,\"86\":1}}],[\"即\",{\"1\":{\"84\":1}}],[\"引入了\",{\"1\":{\"84\":1}}],[\"版本中\",{\"1\":{\"84\":1}}],[\"库可以帮助模拟数据库操作\",{\"1\":{\"141\":1}}],[\"库包含的函数可以分为以下类型\",{\"0\":{\"85\":1}}],[\"库\",{\"0\":{\"84\":1}}],[\"包索引\",{\"0\":{\"167\":1}}],[\"包括方法\",{\"1\":{\"131\":1}}],[\"包括\",{\"1\":{\"125\":1}}],[\"包的\",{\"1\":{\"90\":1}}],[\"包含另外一个\",{\"0\":{\"127\":1},\"1\":{\"127\":1}}],[\"包含\",{\"1\":{\"85\":1}}],[\"包\",{\"0\":{\"83\":1},\"1\":{\"84\":1}}],[\"评论系统\",{\"1\":{\"79\":1}}],[\"找相应的信息后\",{\"1\":{\"79\":1}}],[\"找到\",{\"1\":{\"79\":2}}],[\"在生成的源代码中使用的显式导入列表\",{\"1\":{\"113\":1}}],[\"在使用\",{\"1\":{\"113\":1}}],[\"在项目根目录下创建\",{\"0\":{\"104\":1}}],[\"在它接收的参数里\",{\"1\":{\"86\":1}}],[\"在\",{\"1\":{\"84\":1,\"118\":1,\"127\":1,\"138\":1,\"141\":1}}],[\"在配置\",{\"1\":{\"79\":1}}],[\"在此输入分类\",{\"1\":{\"79\":1}}],[\"在此输入分类名\",{\"1\":{\"79\":1}}],[\"在此输入仓库\",{\"1\":{\"79\":2}}],[\"在往下滑找到\",{\"1\":{\"79\":1}}],[\"的最小单位\",{\"0\":{\"191\":1}}],[\"的状态\",{\"1\":{\"162\":1,\"182\":1}}],[\"的日志\",{\"1\":{\"161\":2,\"182\":1}}],[\"的模拟库\",{\"1\":{\"141\":1}}],[\"的idea\",{\"1\":{\"138\":1}}],[\"的主要作用是用于在测试中动态地修改函数的行为\",{\"1\":{\"131\":1}}],[\"的命令需要改成\",{\"1\":{\"127\":1}}],[\"的时候需要使用\",{\"1\":{\"127\":1}}],[\"的值等于\",{\"1\":{\"118\":3}}],[\"的参数说明\",{\"0\":{\"113\":1}}],[\"的配置文件\",{\"0\":{\"104\":1}}],[\"的使用\",{\"0\":{\"101\":1}}],[\"的使用方法\",{\"1\":{\"100\":1}}],[\"的官网是\",{\"1\":{\"100\":1}}],[\"的单元测试框架\",{\"1\":{\"100\":1}}],[\"的存储类\",{\"1\":{\"94\":1}}],[\"的\",{\"1\":{\"94\":2,\"127\":2,\"144\":1}}],[\"的每对元素进行比较\",{\"1\":{\"90\":1}}],[\"的元素\",{\"1\":{\"89\":1}}],[\"的原理是通过移动元素来合并重复项\",{\"1\":{\"89\":1}}],[\"的后面时\",{\"1\":{\"86\":1}}],[\"的位置在\",{\"1\":{\"86\":2}}],[\"的仓库信息\",{\"1\":{\"79\":1}}],[\"的介绍\",{\"0\":{\"74\":1,\"76\":1}}],[\"位置\",{\"1\":{\"79\":1,\"86\":1}}],[\"仓库\",{\"1\":{\"79\":1}}],[\"滑动\",{\"1\":{\"79\":1}}],[\"点击\",{\"1\":{\"138\":1}}],[\"点击进入\",{\"1\":{\"79\":1}}],[\"点击项目\",{\"1\":{\"79\":1}}],[\"获取项目的分类与分类id\",{\"1\":{\"79\":1}}],[\"把复选框选中\",{\"1\":{\"79\":1}}],[\"多选择\",{\"1\":{\"79\":1}}],[\"设置下载的版本\",{\"1\":{\"175\":1}}],[\"设置内核参数\",{\"0\":{\"171\":1}}],[\"设置此标志将告诉\",{\"1\":{\"113\":1}}],[\"设置\",{\"1\":{\"79\":1}}],[\"功能和\",{\"1\":{\"86\":1}}],[\"功能\",{\"1\":{\"79\":2,\"94\":1}}],[\"使用脚本安装\",{\"1\":{\"199\":1}}],[\"使用kubeadm部署k8s集群\",{\"1\":{\"176\":1}}],[\"使用二进制安装\",{\"0\":{\"174\":1}}],[\"使用说明\",{\"0\":{\"148\":1}}],[\"使用sql查询用户的信息\",{\"1\":{\"143\":1}}],[\"使用命令需要时加上\",{\"1\":{\"138\":1}}],[\"使用此flag的目的是通过尝试包含自己的包来防止生成代码中的循环导入\",{\"1\":{\"113\":1}}],[\"使用代码\",{\"0\":{\"96\":1}}],[\"使用自定义的比较函数来比较两个切片中的元素\",{\"1\":{\"90\":1}}],[\"使用\",{\"0\":{\"78\":1,\"79\":1,\"103\":1,\"133\":1,\"197\":1,\"198\":1,\"203\":1,\"204\":1,\"207\":1},\"1\":{\"94\":1,\"118\":6,\"127\":1,\"141\":1,\"144\":1,\"170\":1,\"181\":1}}],[\"+x\",{\"1\":{\"175\":1}}],[\"+0800\",{\"1\":{\"161\":8}}],[\"+1\",{\"1\":{\"90\":1}}],[\"+\",{\"1\":{\"70\":1,\"135\":1}}],[\"↩︎\",{\"1\":{\"63\":1}}],[\"<pod\",{\"1\":{\"182\":1}}],[\"<<eof\",{\"1\":{\"175\":1,\"176\":1}}],[\"<<\",{\"1\":{\"172\":1,\"175\":1}}],[\"<go编程世界>\",{\"1\":{\"149\":1}}],[\"<input\",{\"1\":{\"62\":1,\"63\":1}}],[\"<h1>\",{\"1\":{\"62\":1,\"63\":1}}],[\"<https\",{\"1\":{\"55\":1}}],[\"<template>\",{\"1\":{\"62\":1,\"63\":1}}],[\"<script\",{\"1\":{\"62\":1,\"63\":1,\"79\":1}}],[\"<\",{\"0\":{\"110\":1},\"1\":{\"60\":1,\"62\":3,\"63\":3,\"79\":1,\"90\":3,\"137\":2,\"176\":1}}],[\"<div\",{\"1\":{\"60\":3}}],[\"$path\",{\"1\":{\"205\":1}}],[\"$home\",{\"1\":{\"181\":3,\"183\":3,\"206\":2}}],[\"$1\",{\"1\":{\"143\":2}}],[\"$fd\",{\"1\":{\"60\":1}}],[\"$\",{\"1\":{\"55\":1,\"175\":5,\"181\":2,\"183\":2,\"205\":6}}],[\"$x\",{\"1\":{\"55\":1}}],[\"k\",{\"1\":{\"176\":1}}],[\"k=kubectl\",{\"1\":{\"176\":1}}],[\"killmode=process\",{\"1\":{\"175\":1}}],[\"kind\",{\"1\":{\"57\":1,\"175\":1,\"178\":4}}],[\"kubecm\",{\"0\":{\"203\":1,\"204\":1,\"205\":1,\"206\":1,\"207\":1},\"1\":{\"205\":17,\"206\":1,\"207\":5,\"208\":1}}],[\"kubeconfig=\",{\"1\":{\"181\":1}}],[\"kubeconfig\",{\"1\":{\"181\":11,\"206\":1}}],[\"kubectl\",{\"1\":{\"161\":4,\"162\":3,\"176\":5,\"181\":1,\"182\":1,\"184\":2,\"186\":1}}],[\"kubeproxyconfiguration\",{\"1\":{\"178\":1}}],[\"kubeproxy\",{\"1\":{\"178\":1}}],[\"kubeadm初始化集群\",{\"0\":{\"181\":1}}],[\"kubeadm\",{\"1\":{\"176\":5,\"177\":2,\"178\":4,\"179\":1,\"180\":2,\"181\":9,\"182\":1,\"185\":1}}],[\"kube\",{\"1\":{\"161\":5,\"181\":11,\"182\":1,\"183\":3,\"184\":1,\"206\":2}}],[\"kubelets\",{\"1\":{\"181\":1}}],[\"kubeletconfiguration\",{\"1\":{\"178\":1}}],[\"kubeletnotready\",{\"1\":{\"161\":1}}],[\"kubelethassufficientpid\",{\"1\":{\"161\":1}}],[\"kubelethassufficientmemory\",{\"1\":{\"161\":1}}],[\"kubelethasnodiskpressure\",{\"1\":{\"161\":1}}],[\"kubelet\",{\"1\":{\"161\":7,\"176\":4,\"178\":1,\"181\":18,\"182\":3}}],[\"kubernetesversion\",{\"1\":{\"178\":1}}],[\"kubernetes\",{\"1\":{\"94\":2,\"162\":1,\"170\":1,\"171\":2,\"175\":1,\"176\":4,\"178\":3,\"181\":20,\"183\":1,\"187\":1}}],[\"kernel\",{\"1\":{\"175\":1}}],[\"key\",{\"1\":{\"124\":4,\"176\":2,\"178\":1,\"181\":13}}],[\"keep\",{\"1\":{\"96\":1}}],[\"keeps\",{\"1\":{\"96\":1}}],[\"k8s的网关\",{\"0\":{\"151\":1,\"156\":1}}],[\"k8s\",{\"0\":{\"76\":1,\"94\":1,\"160\":1,\"191\":1,\"217\":1},\"1\":{\"175\":1,\"178\":4},\"2\":{\"154\":1,\"158\":1,\"163\":1,\"188\":1,\"192\":1,\"195\":1,\"201\":1,\"209\":1}}],[\"kt\",{\"1\":{\"61\":1}}],[\"kotlin\",{\"0\":{\"61\":1},\"1\":{\"61\":1}}],[\"katex\",{\"1\":{\"55\":3}}],[\"know\",{\"1\":{\"28\":1,\"29\":1}}],[\"``\",{\"1\":{\"143\":1}}],[\"```go\",{\"1\":{\"143\":1}}],[\"```\",{\"1\":{\"55\":1}}],[\"```js\",{\"1\":{\"55\":1}}],[\"`false`\",{\"1\":{\"96\":1}}],[\"`recovery`\",{\"1\":{\"96\":1}}],[\"`maxwidth`\",{\"1\":{\"55\":1}}],[\"`inline\",{\"1\":{\"55\":1}}],[\">>~\",{\"1\":{\"176\":3}}],[\">test\",{\"1\":{\"60\":2}}],[\">\",{\"1\":{\"55\":1,\"57\":7,\"60\":1,\"62\":1,\"63\":1,\"90\":5,\"138\":1,\"172\":1,\"175\":2,\"176\":1,\"177\":1,\"199\":4}}],[\"502579\",{\"1\":{\"181\":1}}],[\"56\",{\"1\":{\"161\":4}}],[\"5\",{\"0\":{\"119\":1,\"171\":1},\"1\":{\"52\":4,\"89\":5,\"175\":1}}],[\"x86\",{\"1\":{\"205\":5}}],[\"xenial\",{\"1\":{\"176\":1}}],[\"xgo\",{\"0\":{\"146\":1},\"1\":{\"139\":1,\"147\":1,\"148\":1,\"149\":2}}],[\"xaxis\",{\"1\":{\"53\":1}}],[\"x\",{\"1\":{\"52\":5}}],[\"0s\",{\"1\":{\"178\":1}}],[\"0123456789abcdef\",{\"1\":{\"178\":1,\"181\":2,\"185\":1}}],[\"05\",{\"1\":{\"161\":4}}],[\"058s\",{\"1\":{\"143\":1}}],[\"07\",{\"1\":{\"161\":4}}],[\"00s\",{\"1\":{\"143\":1}}],[\"085s\",{\"1\":{\"120\":1}}],[\"0b5c4c7a72494aa8a43da8d56c1f7427\",{\"1\":{\"96\":2}}],[\"0\",{\"1\":{\"45\":1,\"52\":3,\"79\":2,\"84\":1,\"86\":1,\"87\":1,\"88\":3,\"90\":3,\"96\":2,\"110\":1,\"111\":1,\"117\":2,\"119\":1,\"120\":3,\"121\":3,\"123\":3,\"124\":2,\"125\":2,\"126\":1,\"134\":1,\"135\":2,\"137\":2,\"143\":1,\"161\":4,\"162\":1,\"171\":1,\"175\":3,\"178\":5,\"181\":10,\"185\":1}}],[\"−1\",{\"1\":{\"41\":1}}],[\"ωyω​\",{\"1\":{\"41\":2}}],[\"∂ωr∂r​\",{\"1\":{\"41\":1}}],[\"θ1​\",{\"1\":{\"40\":1}}],[\"θ0​\",{\"1\":{\"40\":1}}],[\"join往集群中添加节点时会用到\",{\"1\":{\"181\":1}}],[\"join\",{\"1\":{\"181\":2,\"185\":1}}],[\"journalctl\",{\"1\":{\"161\":1,\"182\":1}}],[\"john\",{\"1\":{\"143\":1}}],[\"just\",{\"1\":{\"96\":2}}],[\"justify\",{\"1\":{\"60\":1}}],[\"jack\",{\"1\":{\"89\":2}}],[\"january\",{\"1\":{\"68\":1}}],[\"j\",{\"1\":{\"40\":1}}],[\"json\",{\"1\":{\"135\":3}}],[\"js\",{\"0\":{\"36\":1,\"52\":1},\"1\":{\"6\":2,\"55\":1,\"60\":1,\"79\":1}}],[\"===\",{\"1\":{\"143\":1}}],[\"==\",{\"1\":{\"88\":1,\"89\":1,\"90\":1,\"124\":1,\"135\":1,\"137\":1}}],[\"==highlight==\",{\"1\":{\"55\":1}}],[\"=i=0∑​\",{\"1\":{\"40\":1}}],[\"=\",{\"1\":{\"39\":1,\"41\":1,\"46\":1,\"55\":1,\"61\":1,\"62\":1,\"63\":1,\"86\":5,\"87\":4,\"88\":3,\"89\":4,\"90\":1,\"96\":10,\"104\":2,\"113\":1,\"115\":1,\"117\":7,\"118\":7,\"125\":2,\"126\":4,\"127\":1,\"135\":20,\"136\":2,\"137\":18,\"143\":13,\"171\":4,\"175\":5,\"180\":1}}],[\"30\",{\"1\":{\"175\":1}}],[\"3000\",{\"1\":{\"96\":2}}],[\"39m\",{\"1\":{\"162\":1}}],[\"350s\",{\"1\":{\"119\":1}}],[\"3\",{\"0\":{\"39\":1,\"40\":1,\"117\":1,\"125\":1,\"169\":1,\"207\":1},\"1\":{\"86\":1,\"87\":1,\"89\":4,\"90\":2,\"94\":2,\"96\":1,\"135\":1,\"143\":1,\"175\":2,\"180\":2,\"199\":2}}],[\"v0\",{\"1\":{\"205\":2}}],[\"v$\",{\"1\":{\"175\":9}}],[\"vs\",{\"1\":{\"172\":9}}],[\"vm\",{\"1\":{\"171\":1}}],[\"v2\",{\"1\":{\"134\":2,\"135\":1,\"136\":1,\"137\":2}}],[\"version=v0\",{\"1\":{\"205\":1}}],[\"version=1\",{\"1\":{\"175\":5}}],[\"version\",{\"0\":{\"110\":1},\"1\":{\"175\":16,\"181\":1,\"205\":7}}],[\"very\",{\"1\":{\"55\":4}}],[\"v1alpha1\",{\"1\":{\"178\":1}}],[\"v1beta1\",{\"1\":{\"178\":1}}],[\"v1beta3\",{\"1\":{\"178\":2}}],[\"v1\",{\"1\":{\"102\":1,\"110\":1,\"111\":1,\"175\":2,\"181\":1}}],[\"v\",{\"1\":{\"62\":1,\"63\":1,\"96\":1,\"135\":2,\"143\":2,\"148\":1,\"205\":1}}],[\"var\",{\"1\":{\"61\":1,\"94\":1,\"135\":1,\"136\":1,\"137\":1,\"143\":1,\"178\":2,\"181\":3}}],[\"variable\",{\"1\":{\"46\":1}}],[\"val\",{\"1\":{\"61\":2}}],[\"values\",{\"1\":{\"94\":1,\"137\":1}}],[\"value\",{\"1\":{\"53\":1,\"96\":2,\"123\":3}}],[\"vim\",{\"1\":{\"170\":1,\"171\":1,\"178\":1}}],[\"view\",{\"1\":{\"33\":1,\"34\":1,\"35\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1}}],[\"via\",{\"1\":{\"30\":1}}],[\"vue\",{\"0\":{\"62\":1},\"1\":{\"5\":2,\"62\":4,\"63\":4,\"70\":2}}],[\"vuepress\",{\"0\":{\"9\":1,\"31\":1},\"1\":{\"1\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":3,\"7\":2,\"10\":7,\"27\":2,\"29\":2,\"30\":1,\"31\":2,\"32\":1,\"50\":1,\"69\":1}}],[\"vuejs\",{\"1\":{\"1\":2}}],[\"27\",{\"1\":{\"205\":3}}],[\"2mi\",{\"1\":{\"161\":1}}],[\"23\",{\"1\":{\"161\":4}}],[\"230\",{\"1\":{\"45\":1,\"53\":1}}],[\"226\",{\"1\":{\"175\":1}}],[\"22\",{\"1\":{\"161\":4}}],[\"222\",{\"1\":{\"137\":1}}],[\"224\",{\"1\":{\"53\":1}}],[\"26\",{\"1\":{\"178\":1}}],[\"262s\",{\"1\":{\"121\":1}}],[\"260\",{\"1\":{\"53\":1}}],[\"28\",{\"1\":{\"120\":1,\"121\":1,\"181\":1}}],[\"244\",{\"1\":{\"178\":1}}],[\"24495\",{\"1\":{\"161\":1}}],[\"24\",{\"1\":{\"86\":1,\"161\":4}}],[\"20\",{\"1\":{\"86\":1,\"161\":1,\"175\":1,\"182\":1}}],[\"2024\",{\"1\":{\"161\":8}}],[\"20240729235418\",{\"1\":{\"138\":1}}],[\"20240725233726\",{\"1\":{\"79\":1}}],[\"20240725233240\",{\"1\":{\"79\":1}}],[\"2020\",{\"1\":{\"68\":1}}],[\"21\",{\"1\":{\"84\":1}}],[\"218\",{\"1\":{\"53\":1}}],[\"2a\",{\"1\":{\"55\":1}}],[\"255\",{\"1\":{\"52\":1}}],[\"253\",{\"1\":{\"45\":1}}],[\"2\",{\"0\":{\"38\":1,\"40\":1,\"116\":1,\"124\":1,\"168\":1,\"173\":1,\"174\":1,\"175\":1,\"176\":1,\"206\":1},\"1\":{\"21\":14,\"38\":1,\"55\":1,\"87\":1,\"89\":4,\"90\":2,\"125\":1,\"135\":11,\"137\":1,\"162\":1,\"175\":2}}],[\"171098556543\",{\"1\":{\"161\":1}}],[\"1gi\",{\"1\":{\"161\":2}}],[\"127\",{\"1\":{\"181\":2}}],[\"12\",{\"1\":{\"161\":1,\"175\":1,\"178\":1,\"181\":4,\"185\":1}}],[\"123\",{\"1\":{\"135\":1}}],[\"199\",{\"1\":{\"178\":1}}],[\"192\",{\"1\":{\"178\":1}}],[\"19\",{\"1\":{\"161\":8}}],[\"19th\",{\"1\":{\"44\":1}}],[\"110\",{\"1\":{\"161\":1}}],[\"11\",{\"1\":{\"118\":15,\"134\":1}}],[\"11111\",{\"1\":{\"76\":1}}],[\"168\",{\"1\":{\"178\":1}}],[\"163\",{\"1\":{\"175\":1}}],[\"16+\",{\"0\":{\"111\":1}}],[\"16\",{\"0\":{\"110\":1},\"1\":{\"178\":1}}],[\"185653816ki\",{\"1\":{\"161\":1}}],[\"183603\",{\"1\":{\"96\":2}}],[\"18\",{\"1\":{\"86\":1}}],[\"147\",{\"1\":{\"53\":1}}],[\"135\",{\"1\":{\"53\":1}}],[\"132\",{\"1\":{\"52\":1}}],[\"138\",{\"1\":{\"45\":1}}],[\"101\",{\"1\":{\"178\":1}}],[\"10gi\",{\"1\":{\"94\":1}}],[\"100\",{\"1\":{\"86\":1,\"96\":1}}],[\"1000\",{\"1\":{\"57\":1}}],[\"10\",{\"1\":{\"52\":3,\"136\":2,\"137\":2,\"161\":1,\"178\":2,\"181\":5,\"185\":1}}],[\"150\",{\"1\":{\"53\":1,\"136\":4}}],[\"15\",{\"1\":{\"45\":1}}],[\"1\",{\"0\":{\"37\":1,\"39\":1,\"104\":1,\"110\":1,\"111\":1,\"115\":1,\"123\":1,\"161\":1,\"166\":1,\"167\":2,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"174\":1,\"175\":2,\"199\":1,\"205\":1},\"1\":{\"21\":12,\"34\":1,\"38\":1,\"39\":1,\"46\":1,\"61\":1,\"68\":1,\"70\":2,\"79\":1,\"84\":1,\"86\":2,\"87\":1,\"89\":3,\"90\":4,\"94\":1,\"96\":2,\"102\":1,\"117\":1,\"118\":1,\"135\":9,\"137\":3,\"143\":1,\"162\":2,\"170\":1,\"171\":3,\"175\":3,\"176\":1,\"178\":1,\"181\":5,\"205\":3}}],[\"ufw\",{\"1\":{\"169\":3}}],[\"ubuntu使用containerd安装k8s\",{\"0\":{\"165\":1}}],[\"url\",{\"1\":{\"137\":1}}],[\"u\",{\"1\":{\"115\":3,\"161\":1,\"181\":1,\"183\":1}}],[\"unix\",{\"1\":{\"175\":2,\"178\":1}}],[\"unit\",{\"1\":{\"118\":1,\"119\":2,\"120\":2,\"121\":2,\"127\":4,\"128\":1,\"143\":1,\"175\":1}}],[\"unless\",{\"1\":{\"175\":1}}],[\"under\",{\"1\":{\"175\":3}}],[\"unzip\",{\"1\":{\"175\":1,\"205\":1}}],[\"unfulfilled\",{\"1\":{\"143\":1}}],[\"unmarshal\",{\"1\":{\"135\":2}}],[\"unwanted\",{\"1\":{\"96\":1}}],[\"unwantedquery\",{\"1\":{\"96\":1}}],[\"unocss\",{\"1\":{\"60\":3}}],[\"updating\",{\"1\":{\"181\":1}}],[\"update\",{\"1\":{\"18\":1,\"24\":1,\"115\":2,\"117\":8,\"118\":6,\"127\":2,\"137\":1,\"167\":1,\"176\":2}}],[\"upload\",{\"1\":{\"181\":3}}],[\"up\",{\"1\":{\"96\":1,\"181\":3}}],[\"usr\",{\"1\":{\"175\":5,\"205\":1}}],[\"usages\",{\"1\":{\"178\":1}}],[\"usage\",{\"1\":{\"96\":1}}],[\"us\",{\"1\":{\"96\":2}}],[\"using\",{\"1\":{\"29\":1,\"32\":1,\"96\":1,\"175\":1,\"181\":7}}],[\"used\",{\"1\":{\"96\":1,\"181\":1}}],[\"userid\",{\"1\":{\"143\":2}}],[\"userinfosrv\",{\"1\":{\"127\":1}}],[\"userservice\",{\"1\":{\"115\":5,\"118\":1,\"127\":2,\"137\":5}}],[\"usersrv\",{\"1\":{\"115\":1,\"117\":1,\"118\":1,\"137\":6}}],[\"users\",{\"1\":{\"86\":2,\"143\":2}}],[\"user\",{\"0\":{\"115\":1,\"117\":2,\"118\":1},\"1\":{\"86\":5,\"88\":2,\"94\":2,\"96\":1,\"115\":2,\"116\":1,\"117\":1,\"118\":1,\"127\":2,\"143\":2,\"171\":2,\"175\":1,\"181\":2}}],[\"use\",{\"1\":{\"5\":1,\"6\":2,\"27\":1,\"46\":1,\"69\":2,\"70\":1,\"96\":3,\"117\":1,\"175\":1}}],[\"lsmod|grep\",{\"1\":{\"172\":1}}],[\"l\",{\"1\":{\"138\":2,\"143\":1}}],[\"len\",{\"1\":{\"87\":6}}],[\"learner\",{\"1\":{\"28\":1}}],[\"lo\",{\"1\":{\"205\":4}}],[\"localhost\",{\"1\":{\"181\":2}}],[\"localapiendpoint\",{\"1\":{\"178\":1}}],[\"local\",{\"1\":{\"175\":8,\"178\":2,\"181\":2,\"205\":1}}],[\"load\",{\"1\":{\"172\":1,\"181\":1}}],[\"loop\",{\"1\":{\"57\":1}}],[\"long\",{\"1\":{\"55\":1,\"181\":1}}],[\"logs\",{\"1\":{\"161\":1,\"182\":1}}],[\"log\",{\"1\":{\"55\":1,\"57\":4,\"124\":1,\"181\":2}}],[\"logo\",{\"1\":{\"45\":2}}],[\"logy\",{\"1\":{\"41\":2}}],[\"language\",{\"1\":{\"175\":1}}],[\"lang=\",{\"1\":{\"79\":1}}],[\"law\",{\"1\":{\"175\":1}}],[\"lasttransitiontime\",{\"1\":{\"161\":1}}],[\"lastheartbeattime\",{\"1\":{\"161\":1}}],[\"latest\",{\"1\":{\"112\":1}}],[\"labels\",{\"1\":{\"181\":1}}],[\"label\",{\"1\":{\"52\":1,\"57\":1}}],[\"layout\",{\"0\":{\"18\":1,\"24\":1},\"1\":{\"7\":1,\"18\":1,\"24\":1},\"2\":{\"26\":1}}],[\"layouts\",{\"0\":{\"7\":1}}],[\"listed\",{\"1\":{\"181\":1}}],[\"list\",{\"1\":{\"176\":2,\"180\":1,\"207\":1}}],[\"limitnofile=infinity\",{\"1\":{\"175\":1}}],[\"limitnproc=infinity\",{\"1\":{\"175\":1}}],[\"limitcore=infinity\",{\"1\":{\"175\":1}}],[\"limit\",{\"1\":{\"175\":1}}],[\"limitations\",{\"1\":{\"175\":1}}],[\"licenses\",{\"1\":{\"175\":1}}],[\"license\",{\"1\":{\"175\":8}}],[\"licensed\",{\"1\":{\"175\":1}}],[\"lifetime\",{\"1\":{\"96\":1}}],[\"lib\",{\"1\":{\"94\":1,\"178\":1,\"181\":3}}],[\"linux\",{\"1\":{\"175\":8,\"205\":4}}],[\"line\",{\"1\":{\"53\":2}}],[\"linear\",{\"1\":{\"52\":1}}],[\"links\",{\"1\":{\"55\":2,\"69\":2}}],[\"link\",{\"1\":{\"18\":2,\"37\":1,\"45\":1,\"46\":1}}],[\"light\",{\"1\":{\"45\":1}}],[\"gateway\",{\"0\":{\"227\":1}}],[\"gatsby\",{\"1\":{\"55\":2}}],[\"gpg\",{\"1\":{\"176\":1}}],[\"gz\",{\"1\":{\"175\":6,\"205\":10}}],[\"gcflags=\",{\"1\":{\"138\":2,\"143\":1}}],[\"global\",{\"1\":{\"96\":1}}],[\"g\",{\"1\":{\"90\":4,\"169\":1,\"181\":1,\"183\":1}}],[\"google\",{\"1\":{\"175\":1,\"176\":1,\"178\":1,\"180\":2}}],[\"governing\",{\"1\":{\"175\":1}}],[\"go单测测试\",{\"1\":{\"144\":1}}],[\"got\",{\"1\":{\"143\":1}}],[\"gomonkey用户如何对泛型打桩\",{\"1\":{\"139\":1}}],[\"gomonkey调研文档和学习\",{\"1\":{\"139\":1}}],[\"gomonkey支持的特性以及使用方法\",{\"0\":{\"132\":1}}],[\"gomonkey\",{\"0\":{\"130\":1,\"134\":1},\"1\":{\"131\":2,\"134\":1,\"135\":6,\"136\":2,\"137\":5,\"138\":1}}],[\"gomock官网\",{\"1\":{\"107\":1}}],[\"gomock测试框架包含了gomock包和mockgen工具两部分\",{\"1\":{\"107\":1}}],[\"gomock是由golang官方开发维护的测试框架\",{\"1\":{\"107\":1}}],[\"gomock\",{\"0\":{\"106\":1,\"122\":1},\"1\":{\"117\":7,\"118\":10,\"119\":2,\"120\":2,\"121\":2,\"123\":4,\"124\":3,\"125\":2,\"126\":4,\"127\":4,\"128\":1}}],[\"godoc\",{\"1\":{\"113\":1}}],[\"go是源文件\",{\"1\":{\"113\":1}}],[\"go形式的以逗号分隔的元素列表\",{\"1\":{\"113\":1}}],[\"go111module=on\",{\"1\":{\"110\":1}}],[\"goconvey\",{\"0\":{\"99\":1,\"100\":1,\"101\":1,\"104\":2},\"1\":{\"100\":4,\"102\":1,\"104\":2,\"135\":1,\"136\":1,\"137\":1}}],[\"gonic\",{\"1\":{\"96\":1}}],[\"gopher\",{\"1\":{\"86\":4,\"88\":1,\"89\":3,\"90\":2}}],[\"go\",{\"0\":{\"110\":1,\"111\":1,\"115\":1,\"117\":2,\"118\":1},\"1\":{\"84\":1,\"95\":2,\"96\":7,\"97\":1,\"102\":1,\"110\":1,\"111\":1,\"112\":1,\"115\":3,\"116\":2,\"117\":1,\"118\":2,\"119\":3,\"120\":3,\"121\":5,\"127\":17,\"131\":1,\"134\":1,\"141\":2,\"142\":2,\"143\":5,\"144\":2,\"147\":3,\"149\":1}}],[\"golang\",{\"0\":{\"73\":1,\"74\":1,\"83\":1,\"93\":1,\"99\":1,\"106\":1,\"130\":1,\"141\":1,\"146\":1,\"215\":1},\"1\":{\"74\":1,\"100\":1,\"110\":1,\"111\":1,\"112\":1,\"117\":1,\"118\":1,\"128\":1,\"137\":1}}],[\"gin\",{\"1\":{\"96\":12}}],[\"giscus\",{\"0\":{\"79\":1},\"1\":{\"79\":4}}],[\"git\",{\"1\":{\"119\":1,\"120\":1,\"121\":1}}],[\"gitcus\",{\"0\":{\"78\":1}}],[\"githubusercontent\",{\"1\":{\"161\":1,\"184\":1,\"199\":2}}],[\"github\",{\"0\":{\"79\":1},\"1\":{\"46\":1,\"55\":4,\"94\":1,\"95\":1,\"96\":4,\"102\":1,\"107\":1,\"110\":1,\"111\":1,\"112\":1,\"117\":1,\"118\":3,\"119\":2,\"120\":2,\"121\":2,\"127\":2,\"128\":1,\"134\":1,\"135\":3,\"136\":2,\"137\":3,\"142\":1,\"143\":2,\"175\":5,\"205\":5}}],[\"gmail\",{\"1\":{\"61\":1}}],[\"grpc\",{\"1\":{\"175\":2}}],[\"grep\",{\"1\":{\"161\":1,\"182\":1}}],[\"green\",{\"1\":{\"60\":1}}],[\"grow\",{\"1\":{\"85\":1}}],[\"groups\",{\"1\":{\"178\":1}}],[\"group\",{\"1\":{\"57\":1}}],[\"gfm\",{\"0\":{\"46\":1}}],[\"generating\",{\"1\":{\"181\":11}}],[\"generated\",{\"1\":{\"117\":2}}],[\"generate\",{\"1\":{\"27\":2,\"115\":1,\"127\":1}}],[\"gera2ld\",{\"1\":{\"55\":3}}],[\"getuserinfo\",{\"1\":{\"143\":2}}],[\"getuserbyid\",{\"1\":{\"115\":3,\"117\":8,\"118\":10,\"127\":3,\"137\":6}}],[\"getadmininfo\",{\"1\":{\"127\":2}}],[\"getfromdb\",{\"1\":{\"125\":2,\"126\":2}}],[\"gethubfromcontext\",{\"1\":{\"96\":3}}],[\"getsentry\",{\"1\":{\"95\":1,\"96\":3}}],[\"get\",{\"0\":{\"3\":1},\"1\":{\"95\":1,\"96\":3,\"110\":1,\"123\":4,\"124\":3,\"125\":1,\"126\":3,\"134\":1,\"142\":1,\"161\":1,\"168\":1,\"172\":1,\"176\":4,\"181\":2,\"186\":1,\"199\":5}}],[\"guide\",{\"1\":{\"68\":2},\"2\":{\"16\":1,\"19\":1,\"22\":1,\"25\":1,\"64\":1,\"71\":1,\"72\":1}}],[\"计算机书籍\",{\"2\":{\"13\":1}}],[\"计算机基础必读经典书籍\",{\"0\":{\"12\":1}}],[\"yml\",{\"1\":{\"161\":1,\"178\":1,\"180\":2,\"181\":2,\"182\":1,\"184\":1}}],[\"yaml\",{\"1\":{\"94\":1,\"161\":1,\"175\":1,\"177\":1,\"179\":1,\"181\":3,\"184\":3,\"206\":2}}],[\"yaxis\",{\"1\":{\"53\":1}}],[\"yarn\",{\"1\":{\"10\":1}}],[\"y\",{\"1\":{\"52\":4,\"96\":1,\"168\":1,\"172\":1,\"176\":2}}],[\"your\",{\"1\":{\"4\":2,\"6\":1,\"69\":2,\"70\":1,\"96\":3,\"175\":1,\"181\":3,\"205\":1}}],[\"you\",{\"1\":{\"4\":1,\"5\":1,\"6\":3,\"7\":1,\"18\":1,\"24\":1,\"27\":2,\"28\":1,\"29\":2,\"49\":1,\"67\":1,\"68\":1,\"69\":2,\"70\":2,\"96\":6,\"175\":2,\"181\":6,\"205\":1}}],[\"安装基本插件\",{\"1\":{\"181\":1}}],[\"安装kubeadm\",{\"1\":{\"176\":1}}],[\"安装k8s\",{\"0\":{\"176\":1}}],[\"安装ipvsadm\",{\"1\":{\"172\":2}}],[\"安装命令\",{\"1\":{\"161\":1}}],[\"安装网络插件\",{\"1\":{\"161\":1}}],[\"安装后查询\",{\"1\":{\"161\":1}}],[\"安装的常见的错误\",{\"0\":{\"160\":1}}],[\"安装使用\",{\"0\":{\"108\":1}}],[\"安装地址\",{\"1\":{\"79\":2}}],[\"安装\",{\"0\":{\"10\":1,\"79\":1,\"95\":1,\"102\":1,\"109\":1,\"134\":1,\"142\":1,\"173\":1,\"199\":1,\"205\":1},\"1\":{\"79\":2,\"94\":1,\"184\":1}}],[\"安装主题\",{\"0\":{\"9\":1}}],[\"nf\",{\"1\":{\"171\":2,\"172\":3}}],[\"ntp\",{\"1\":{\"168\":1}}],[\"ntpdate\",{\"1\":{\"168\":2}}],[\"number\",{\"1\":{\"181\":1}}],[\"num\",{\"1\":{\"136\":7}}],[\"nginx\",{\"1\":{\"94\":2}}],[\"nil\",{\"1\":{\"89\":1,\"96\":4,\"115\":1,\"117\":2,\"118\":1,\"123\":6,\"124\":2,\"125\":1,\"126\":1,\"127\":1,\"135\":14,\"137\":6,\"143\":3}}],[\"n\",{\"1\":{\"87\":2,\"96\":1,\"138\":2,\"143\":1,\"161\":2,\"162\":1,\"175\":1,\"182\":1}}],[\"namespaces=28633\",{\"1\":{\"171\":1}}],[\"namespace\",{\"1\":{\"162\":1,\"181\":3,\"207\":2}}],[\"names\",{\"1\":{\"89\":4,\"90\":5,\"113\":1,\"181\":3}}],[\"name\",{\"1\":{\"86\":4,\"88\":5,\"143\":10,\"148\":1,\"162\":1}}],[\"navbar\",{\"1\":{\"7\":1,\"18\":1,\"24\":1}}],[\"nd\",{\"1\":{\"69\":1}}],[\"non\",{\"1\":{\"175\":1}}],[\"noexecute\",{\"1\":{\"162\":1}}],[\"noerror\",{\"1\":{\"118\":2,\"135\":1}}],[\"noschedule\",{\"1\":{\"162\":2,\"181\":1}}],[\"noderegistration\",{\"1\":{\"178\":1}}],[\"node01\",{\"1\":{\"162\":2}}],[\"node\",{\"1\":{\"161\":4,\"162\":4,\"178\":2,\"181\":14,\"182\":2}}],[\"nodes\",{\"1\":{\"161\":1,\"162\":2,\"181\":3,\"186\":1}}],[\"no\",{\"1\":{\"119\":1,\"161\":1}}],[\"note\",{\"1\":{\"205\":1}}],[\"notempty\",{\"1\":{\"118\":4}}],[\"notready\",{\"0\":{\"161\":1},\"1\":{\"161\":1}}],[\"not\",{\"1\":{\"117\":1,\"123\":4,\"124\":2,\"125\":1,\"126\":1,\"137\":1,\"143\":1,\"161\":3,\"175\":2,\"211\":1}}],[\"now\",{\"1\":{\"55\":1,\"181\":1}}],[\"normal\",{\"1\":{\"3\":1}}],[\"nerdctl\",{\"1\":{\"175\":10}}],[\"networking\",{\"1\":{\"178\":1}}],[\"networkpluginnotready\",{\"1\":{\"161\":2}}],[\"networkready=false\",{\"1\":{\"161\":2}}],[\"network\",{\"1\":{\"161\":3,\"181\":1}}],[\"net\",{\"1\":{\"96\":1,\"171\":3}}],[\"need\",{\"1\":{\"29\":1,\"96\":1,\"181\":1}}],[\"newrows\",{\"1\":{\"143\":1}}],[\"newadminservice\",{\"1\":{\"127\":1}}],[\"newmockdb\",{\"1\":{\"125\":1,\"126\":1}}],[\"newmockusersrv\",{\"1\":{\"117\":2,\"118\":2}}],[\"newcontroller\",{\"1\":{\"118\":2,\"125\":1,\"126\":1}}],[\"newuserservice\",{\"1\":{\"115\":1,\"118\":1,\"137\":3}}],[\"newslice\",{\"1\":{\"89\":2}}],[\"new\",{\"1\":{\"28\":1,\"96\":2,\"117\":1,\"123\":2,\"124\":1,\"126\":1,\"143\":1}}],[\"next\",{\"1\":{\"10\":4,\"18\":1,\"96\":1}}],[\"npm\",{\"1\":{\"10\":1}}],[\"o\",{\"1\":{\"199\":1}}],[\"oomscoreadjust=\",{\"1\":{\"175\":1}}],[\"obtain\",{\"1\":{\"175\":1}}],[\"object\",{\"1\":{\"117\":1}}],[\"objects\",{\"1\":{\"113\":1}}],[\"opt\",{\"1\":{\"175\":2}}],[\"option\",{\"1\":{\"55\":1,\"96\":1}}],[\"options\",{\"1\":{\"10\":1,\"24\":1,\"52\":1,\"96\":4,\"181\":1}}],[\"opencontainers\",{\"1\":{\"175\":1}}],[\"opening\",{\"1\":{\"143\":1}}],[\"occurred\",{\"1\":{\"143\":1}}],[\"occur\",{\"1\":{\"137\":1}}],[\"o2\",{\"1\":{\"126\":2}}],[\"o1\",{\"1\":{\"126\":2}}],[\"output2\",{\"1\":{\"137\":2}}],[\"output1\",{\"1\":{\"137\":2}}],[\"output\",{\"1\":{\"135\":1,\"137\":2}}],[\"outputcell\",{\"1\":{\"132\":3}}],[\"outputs\",{\"1\":{\"132\":3}}],[\"out\",{\"1\":{\"121\":2}}],[\"ok\",{\"1\":{\"96\":2,\"119\":1,\"120\":1,\"121\":1,\"143\":1}}],[\"other\",{\"1\":{\"96\":1}}],[\"o84114\",{\"1\":{\"96\":2}}],[\"own\",{\"1\":{\"57\":1,\"70\":1,\"96\":1}}],[\"overhead\",{\"1\":{\"175\":1}}],[\"overlay\",{\"1\":{\"175\":1}}],[\"over\",{\"1\":{\"55\":1}}],[\"only\",{\"1\":{\"113\":2,\"175\":1}}],[\"one=admin\",{\"1\":{\"127\":2}}],[\"one\",{\"1\":{\"96\":1,\"115\":1,\"118\":3,\"119\":3,\"120\":3,\"121\":3,\"127\":4,\"135\":3,\"136\":1,\"137\":2,\"143\":1,\"181\":1}}],[\"once\",{\"1\":{\"96\":1}}],[\"on\",{\"1\":{\"18\":1,\"55\":1,\"96\":1,\"175\":3,\"181\":2}}],[\"order\",{\"1\":{\"181\":1}}],[\"original\",{\"1\":{\"96\":1}}],[\"org\",{\"1\":{\"55\":1,\"168\":1,\"175\":1,\"184\":1}}],[\"or\",{\"1\":{\"6\":2,\"10\":1,\"27\":1,\"96\":2,\"175\":3,\"181\":1}}],[\"of\",{\"1\":{\"0\":1,\"7\":1,\"18\":1,\"24\":1,\"51\":1,\"57\":2,\"96\":8,\"117\":3,\"120\":2,\"121\":2,\"175\":2,\"181\":3}}],[\"rules\",{\"1\":{\"181\":4}}],[\"running\",{\"1\":{\"181\":2}}],[\"runc\",{\"1\":{\"175\":10}}],[\"runtime\",{\"1\":{\"161\":1,\"175\":2}}],[\"run\",{\"1\":{\"96\":3,\"138\":1,\"143\":2,\"148\":1,\"175\":3,\"178\":1,\"181\":3}}],[\"rbac\",{\"1\":{\"181\":5}}],[\"rr\",{\"1\":{\"172\":2}}],[\"raw\",{\"1\":{\"161\":1,\"184\":1,\"199\":2}}],[\"rs\",{\"1\":{\"135\":2}}],[\"rotatable\",{\"1\":{\"181\":1}}],[\"rotation\",{\"1\":{\"181\":1}}],[\"roles\",{\"1\":{\"181\":1}}],[\"role\",{\"1\":{\"162\":4,\"178\":1,\"181\":2}}],[\"rows\",{\"1\":{\"143\":2}}],[\"routes\",{\"1\":{\"96\":2}}],[\"routing\",{\"1\":{\"4\":1}}],[\"root\",{\"1\":{\"60\":1,\"181\":2}}],[\"rgb\",{\"1\":{\"52\":1}}],[\"rgba\",{\"1\":{\"45\":1}}],[\"right\",{\"1\":{\"47\":1}}],[\"richer\",{\"1\":{\"32\":1}}],[\"r−i​\",{\"1\":{\"41\":1}}],[\"r−i+1\",{\"1\":{\"41\":1}}],[\"r+i=1∑r​ωi\",{\"1\":{\"41\":1}}],[\"rename\",{\"1\":{\"207\":1}}],[\"rendered\",{\"1\":{\"5\":1}}],[\"regular\",{\"1\":{\"181\":1}}],[\"registry\",{\"1\":{\"175\":4,\"178\":1,\"180\":2}}],[\"regarded\",{\"1\":{\"66\":1,\"67\":1}}],[\"reload\",{\"1\":{\"175\":1}}],[\"releases\",{\"1\":{\"175\":5,\"205\":4}}],[\"relative\",{\"1\":{\"69\":1}}],[\"related\",{\"1\":{\"55\":1}}],[\"remote\",{\"1\":{\"135\":1}}],[\"remark\",{\"1\":{\"55\":2}}],[\"retrieve\",{\"1\":{\"137\":5}}],[\"ret1\",{\"1\":{\"117\":2}}],[\"ret0\",{\"1\":{\"117\":4}}],[\"ret\",{\"1\":{\"117\":5}}],[\"returned\",{\"1\":{\"137\":1}}],[\"returns\",{\"1\":{\"117\":1,\"161\":2}}],[\"return\",{\"1\":{\"86\":1,\"89\":1,\"96\":1,\"115\":3,\"117\":6,\"118\":4,\"123\":4,\"124\":4,\"125\":1,\"126\":2,\"127\":4,\"135\":11,\"137\":4,\"143\":1}}],[\"required\",{\"1\":{\"175\":1,\"181\":1}}],[\"requestcontextkey\",{\"1\":{\"96\":1}}],[\"requests\",{\"1\":{\"96\":2}}],[\"request\",{\"1\":{\"57\":1,\"96\":5}}],[\"req\",{\"1\":{\"96\":1}}],[\"resource\",{\"0\":{\"231\":1}}],[\"res\",{\"1\":{\"137\":4}}],[\"reset\",{\"1\":{\"132\":1,\"135\":5,\"136\":1,\"137\":5,\"181\":1}}],[\"rest\",{\"1\":{\"96\":1}}],[\"restartsec=5\",{\"1\":{\"175\":1}}],[\"restart=always\",{\"1\":{\"175\":1}}],[\"restart\",{\"1\":{\"96\":1,\"175\":1}}],[\"response\",{\"1\":{\"96\":1}}],[\"responses\",{\"1\":{\"96\":1}}],[\"respects\",{\"1\":{\"96\":1}}],[\"reverse\",{\"1\":{\"85\":1}}],[\"reveal\",{\"0\":{\"36\":1}}],[\"reason\",{\"1\":{\"161\":3,\"162\":1}}],[\"reactions\",{\"1\":{\"79\":1}}],[\"ready\",{\"1\":{\"161\":2}}],[\"readwritemany\",{\"1\":{\"94\":2}}],[\"read\",{\"1\":{\"28\":1,\"29\":1,\"31\":1}}],[\"repanic\",{\"1\":{\"96\":3}}],[\"replace\",{\"1\":{\"85\":1,\"205\":1}}],[\"repo\",{\"1\":{\"79\":1}}],[\"repo=\",{\"1\":{\"79\":1}}],[\"repeat\",{\"1\":{\"57\":1}}],[\"reflect\",{\"1\":{\"117\":4,\"132\":2}}],[\"ref\",{\"1\":{\"62\":2,\"63\":2}}],[\"reference\",{\"1\":{\"7\":1}}],[\"red\",{\"1\":{\"60\":1}}],[\"recordcallwithmethodtype\",{\"1\":{\"117\":2}}],[\"recorder\",{\"1\":{\"117\":4}}],[\"recover\",{\"1\":{\"136\":1}}],[\"recovered\",{\"1\":{\"96\":1}}],[\"recovery\",{\"1\":{\"96\":2}}],[\"recommend\",{\"1\":{\"96\":1,\"175\":1}}],[\"recotheme\",{\"1\":{\"10\":2}}],[\"reco\",{\"1\":{\"10\":3}}],[\"switch\",{\"1\":{\"207\":1}}],[\"swappiness\",{\"1\":{\"171\":2}}],[\"swapoff\",{\"1\":{\"170\":1}}],[\"svc\",{\"1\":{\"181\":2}}],[\"svg\",{\"1\":{\"45\":1}}],[\"s|sandbox\",{\"1\":{\"175\":1}}],[\"sbin\",{\"1\":{\"175\":1}}],[\"sha256\",{\"1\":{\"181\":1,\"185\":1}}],[\"sh\",{\"1\":{\"172\":2,\"199\":3}}],[\"shouldequal\",{\"1\":{\"135\":5,\"136\":2,\"137\":5}}],[\"shouldbenil\",{\"1\":{\"135\":3}}],[\"should\",{\"1\":{\"27\":1,\"96\":3,\"181\":1}}],[\"sysctl\",{\"1\":{\"171\":3}}],[\"systohc\",{\"1\":{\"168\":1}}],[\"systemdcgroup\",{\"1\":{\"175\":2}}],[\"systemd\",{\"1\":{\"175\":3,\"178\":2}}],[\"system\",{\"1\":{\"161\":2,\"175\":1,\"178\":1,\"181\":2,\"182\":1}}],[\"systemctl\",{\"1\":{\"161\":1,\"169\":3,\"175\":3,\"176\":2,\"182\":1}}],[\"syntax\",{\"1\":{\"5\":1,\"30\":1,\"31\":1,\"32\":1,\"70\":1}}],[\"sql\",{\"1\":{\"141\":1,\"143\":1}}],[\"sqlmock\",{\"0\":{\"141\":1},\"1\":{\"141\":4,\"142\":1,\"143\":4,\"144\":2}}],[\"sqrt\",{\"1\":{\"55\":1}}],[\"speed\",{\"1\":{\"181\":1}}],[\"specific\",{\"1\":{\"175\":1}}],[\"sprintf\",{\"1\":{\"137\":1}}],[\"spoiler\",{\"0\":{\"50\":1}}],[\"smartystreets\",{\"1\":{\"102\":1,\"135\":1,\"136\":1,\"137\":1}}],[\"skipping\",{\"1\":{\"181\":1}}],[\"skip\",{\"1\":{\"96\":1}}],[\"snapretaincount\",{\"1\":{\"94\":1}}],[\"s2\",{\"1\":{\"90\":4}}],[\"s1\",{\"1\":{\"90\":4}}],[\"slices\",{\"0\":{\"83\":1,\"84\":1,\"85\":1},\"1\":{\"84\":1,\"86\":5,\"87\":2,\"88\":2,\"89\":4,\"90\":5}}],[\"slideend\",{\"1\":{\"40\":1}}],[\"slide\",{\"0\":{\"37\":1,\"38\":1,\"39\":1,\"40\":1}}],[\"slidestart\",{\"1\":{\"36\":1}}],[\"s\",{\"1\":{\"67\":1,\"68\":1,\"87\":9,\"88\":3,\"89\":2,\"96\":5,\"127\":4,\"137\":5,\"143\":4,\"162\":2,\"169\":1,\"175\":2,\"176\":1}}],[\"src=\",{\"1\":{\"79\":1}}],[\"src\",{\"1\":{\"63\":1,\"86\":2,\"118\":3}}],[\"sa\",{\"1\":{\"181\":1}}],[\"sandbox\",{\"1\":{\"180\":1}}],[\"sandpack\",{\"0\":{\"63\":1},\"1\":{\"63\":1}}],[\"sam\",{\"1\":{\"123\":1,\"124\":2,\"125\":1,\"126\":2}}],[\"safe\",{\"1\":{\"96\":1}}],[\"safely\",{\"1\":{\"46\":1}}],[\"sat\",{\"1\":{\"53\":1}}],[\"save\",{\"1\":{\"10\":1}}],[\"sudo\",{\"1\":{\"167\":1,\"168\":3,\"169\":3,\"170\":1,\"172\":1,\"176\":2,\"181\":3,\"182\":3,\"183\":2,\"205\":1}}],[\"sufficient\",{\"1\":{\"161\":2}}],[\"success\",{\"1\":{\"135\":2}}],[\"successfully\",{\"1\":{\"181\":1}}],[\"successful\",{\"1\":{\"57\":1}}],[\"sum\",{\"1\":{\"135\":20}}],[\"sunny0826\",{\"1\":{\"205\":4}}],[\"sun\",{\"1\":{\"53\":1}}],[\"subscript\",{\"0\":{\"44\":1}}],[\"superscript\",{\"0\":{\"44\":1}}],[\"supports\",{\"1\":{\"30\":1,\"175\":1}}],[\"support\",{\"1\":{\"5\":1,\"43\":1,\"175\":1}}],[\"scripts\",{\"1\":{\"199\":2}}],[\"script>\",{\"1\":{\"62\":1,\"63\":1,\"79\":1}}],[\"scheduler的静态pod\",{\"1\":{\"181\":1}}],[\"scheduler\",{\"1\":{\"162\":1,\"181\":2}}],[\"scheme\",{\"1\":{\"43\":1,\"79\":1}}],[\"scope\",{\"1\":{\"96\":4}}],[\"scores\",{\"1\":{\"86\":3}}],[\"scan\",{\"1\":{\"143\":1}}],[\"scales\",{\"1\":{\"52\":1}}],[\"scatter\",{\"1\":{\"52\":3}}],[\"scss\",{\"1\":{\"7\":1}}],[\"sock\",{\"1\":{\"175\":2,\"178\":1}}],[\"software\",{\"1\":{\"175\":1}}],[\"sources\",{\"1\":{\"176\":1}}],[\"source=admin\",{\"1\":{\"127\":2}}],[\"source=user\",{\"1\":{\"116\":1}}],[\"source文件使用的文件的包名\",{\"1\":{\"113\":1}}],[\"source\",{\"1\":{\"113\":1,\"115\":1,\"117\":1,\"176\":2}}],[\"sourcemaps\",{\"1\":{\"94\":3}}],[\"sortstablefunc\",{\"1\":{\"85\":1}}],[\"sortfunc\",{\"1\":{\"85\":1}}],[\"sort\",{\"1\":{\"85\":1}}],[\"so\",{\"1\":{\"27\":2,\"135\":8,\"136\":2,\"137\":5}}],[\"something\",{\"1\":{\"135\":2}}],[\"somequerydatamaybe\",{\"1\":{\"96\":1}}],[\"somerandomtag\",{\"1\":{\"96\":2}}],[\"some\",{\"1\":{\"5\":1,\"18\":1,\"37\":1,\"57\":1}}],[\"seconds\",{\"1\":{\"181\":1}}],[\"sed\",{\"1\":{\"169\":1,\"175\":3}}],[\"selinux\",{\"1\":{\"169\":1}}],[\"selinux=disabled\",{\"1\":{\"169\":1}}],[\"selinux=enforcing\",{\"1\":{\"169\":1}}],[\"select\",{\"1\":{\"143\":1}}],[\"self\",{\"1\":{\"113\":1}}],[\"server\",{\"0\":{\"194\":1},\"1\":{\"181\":2}}],[\"serving\",{\"1\":{\"181\":3}}],[\"servicesubnet\",{\"1\":{\"178\":1}}],[\"service\",{\"0\":{\"115\":1,\"117\":2,\"118\":1},\"1\":{\"115\":2,\"116\":2,\"117\":1,\"118\":1,\"127\":7,\"175\":6},\"2\":{\"195\":1}}],[\"series\",{\"1\":{\"53\":1}}],[\"sent\",{\"1\":{\"96\":1}}],[\"sentrygin\",{\"1\":{\"96\":12}}],[\"sentry是一个开源的应用性能监控\",{\"1\":{\"93\":1}}],[\"sentry\",{\"0\":{\"93\":1,\"94\":1},\"1\":{\"94\":5,\"95\":1,\"96\":23,\"97\":2}}],[\"separation\",{\"1\":{\"96\":1}}],[\"setup\",{\"1\":{\"176\":1}}],[\"setup>\",{\"1\":{\"62\":1,\"63\":1}}],[\"setextra\",{\"1\":{\"96\":1}}],[\"settag\",{\"1\":{\"96\":1}}],[\"setting\",{\"1\":{\"18\":1,\"43\":1,\"79\":1,\"181\":1}}],[\"set\",{\"1\":{\"67\":1,\"68\":1,\"96\":4}}],[\"see\",{\"1\":{\"4\":1,\"175\":1,\"181\":1}}],[\"storing\",{\"1\":{\"181\":1}}],[\"storage\",{\"1\":{\"161\":2}}],[\"storageclass\",{\"1\":{\"94\":2}}],[\"stop\",{\"1\":{\"169\":1}}],[\"stub\",{\"1\":{\"131\":1,\"143\":1}}],[\"stretchr\",{\"1\":{\"118\":1,\"135\":1}}],[\"str\",{\"1\":{\"115\":2,\"118\":18,\"127\":2,\"137\":6}}],[\"strconv\",{\"1\":{\"115\":2,\"127\":4}}],[\"struct\",{\"1\":{\"86\":1,\"88\":1,\"96\":1,\"115\":1,\"117\":2,\"127\":1,\"137\":2}}],[\"structure\",{\"1\":{\"27\":1}}],[\"strict=\",{\"1\":{\"79\":1}}],[\"strings\",{\"1\":{\"89\":3}}],[\"string\",{\"1\":{\"61\":1,\"86\":1,\"88\":1,\"89\":2,\"90\":5,\"96\":2,\"115\":4,\"117\":4,\"124\":2,\"127\":6,\"132\":2,\"137\":5,\"143\":3}}],[\"strong\",{\"1\":{\"55\":1}}],[\"stylize\",{\"0\":{\"51\":1}}],[\"styles\",{\"1\":{\"7\":1}}],[\"style\",{\"1\":{\"7\":1}}],[\"static\",{\"1\":{\"181\":5}}],[\"statements\",{\"1\":{\"120\":2,\"121\":2}}],[\"status\",{\"1\":{\"96\":1,\"161\":2,\"169\":1,\"182\":1}}],[\"statusok\",{\"1\":{\"96\":2}}],[\"starting\",{\"1\":{\"69\":1,\"181\":1}}],[\"start\",{\"1\":{\"57\":1,\"176\":2,\"181\":5}}],[\"startuml\",{\"1\":{\"57\":1}}],[\"started\",{\"0\":{\"3\":1}}],[\"stackblitz\",{\"1\":{\"1\":1}}],[\"signed\",{\"1\":{\"181\":3}}],[\"signing\",{\"1\":{\"178\":1}}],[\"sigs\",{\"1\":{\"175\":1}}],[\"simple\",{\"1\":{\"61\":1}}],[\"size\",{\"1\":{\"43\":1,\"94\":1}}],[\"sidebar\",{\"1\":{\"7\":1,\"18\":1,\"24\":1}}],[\"side\",{\"1\":{\"6\":1}}],[\"sites\",{\"1\":{\"27\":1}}],[\"site\",{\"1\":{\"4\":1,\"6\":2}}],[\"sfc\",{\"1\":{\"5\":1}}],[\"ttl\",{\"1\":{\"178\":1}}],[\"tgz\",{\"1\":{\"175\":2}}],[\"two\",{\"1\":{\"135\":1,\"137\":1,\"181\":1}}],[\"transport\",{\"1\":{\"176\":1}}],[\"transactions\",{\"1\":{\"96\":1}}],[\"traefik\",{\"0\":{\"156\":1,\"157\":1},\"1\":{\"157\":1}}],[\"tracing\",{\"1\":{\"96\":1}}],[\"tracessamplerate\",{\"1\":{\"96\":2}}],[\"true\",{\"1\":{\"86\":2,\"88\":1,\"94\":7,\"96\":3,\"175\":3}}],[\"term\",{\"1\":{\"181\":1}}],[\"tee\",{\"1\":{\"175\":1,\"181\":1}}],[\"tests\",{\"0\":{\"225\":1}}],[\"testgetuserinfo\",{\"1\":{\"143\":4}}],[\"testgetfromdb\",{\"1\":{\"125\":1,\"126\":1}}],[\"testapplymethodreturn\",{\"1\":{\"137\":3}}],[\"testapplymethod\",{\"1\":{\"137\":2}}],[\"testapplyglobalvar\",{\"1\":{\"136\":2}}],[\"testcomputeconvey\",{\"1\":{\"135\":1}}],[\"testcompute\",{\"1\":{\"135\":1}}],[\"testing\",{\"1\":{\"118\":3,\"125\":1,\"126\":1,\"135\":3,\"136\":2,\"137\":4,\"143\":2}}],[\"testify\",{\"1\":{\"118\":1,\"135\":1}}],[\"test\",{\"0\":{\"118\":1},\"1\":{\"118\":7,\"119\":4,\"120\":3,\"121\":3,\"127\":4,\"128\":1,\"137\":1,\"138\":1,\"143\":3,\"148\":2,\"206\":2,\"207\":1}}],[\"template>\",{\"1\":{\"62\":1,\"63\":1}}],[\"tex\",{\"0\":{\"41\":1}}],[\"text\",{\"1\":{\"21\":26,\"34\":1,\"37\":1,\"55\":2,\"60\":3}}],[\"tue\",{\"1\":{\"53\":1}}],[\"type=notify\",{\"1\":{\"175\":1}}],[\"typeof\",{\"1\":{\"117\":2}}],[\"type\",{\"1\":{\"52\":2,\"53\":3,\"57\":1,\"86\":1,\"88\":1,\"115\":2,\"117\":2,\"127\":3,\"132\":2,\"137\":2,\"161\":1,\"162\":1}}],[\"take\",{\"1\":{\"181\":2}}],[\"tasksmax=infinity\",{\"1\":{\"175\":1}}],[\"tasksmax\",{\"1\":{\"175\":1}}],[\"tasklist\",{\"0\":{\"42\":1}}],[\"tar\",{\"1\":{\"175\":10,\"205\":11}}],[\"target表示函数变量\",{\"1\":{\"132\":3}}],[\"target表示函数名\",{\"1\":{\"132\":2}}],[\"target表示对象类型\",{\"1\":{\"132\":2}}],[\"target\",{\"1\":{\"132\":7,\"175\":3}}],[\"taints\",{\"1\":{\"162\":1,\"178\":1,\"181\":1}}],[\"taint\",{\"1\":{\"162\":4}}],[\"tags\",{\"1\":{\"68\":1}}],[\"tabs\",{\"0\":{\"33\":1,\"58\":1}}],[\"table\",{\"1\":{\"24\":1}}],[\"t\",{\"0\":{\"162\":1},\"1\":{\"28\":1,\"29\":1,\"86\":5,\"96\":2,\"117\":4,\"118\":16,\"124\":1,\"125\":3,\"126\":3,\"135\":10,\"136\":3,\"137\":8,\"143\":6,\"162\":2}}],[\"tip\",{\"1\":{\"46\":1}}],[\"title\",{\"0\":{\"67\":1},\"1\":{\"24\":1,\"45\":1,\"46\":5,\"67\":5}}],[\"timeoutforcontrolplane\",{\"1\":{\"178\":1}}],[\"timeout\",{\"1\":{\"96\":2,\"175\":1}}],[\"times\",{\"1\":{\"57\":1,\"125\":2}}],[\"time\",{\"1\":{\"18\":1,\"24\":1,\"96\":1}}],[\"ts\",{\"1\":{\"6\":2,\"10\":1}}],[\"tokens\",{\"1\":{\"181\":3}}],[\"token\",{\"1\":{\"178\":2,\"181\":12,\"185\":2}}],[\"tolerate\",{\"0\":{\"162\":1},\"1\":{\"162\":2}}],[\"tolower\",{\"1\":{\"89\":2}}],[\"toml\",{\"1\":{\"175\":4,\"180\":1}}],[\"tom\",{\"1\":{\"123\":1,\"126\":2}}],[\"tools\",{\"0\":{\"233\":1},\"1\":{\"175\":1,\"176\":1}}],[\"tool\",{\"1\":{\"121\":1}}],[\"toc\",{\"1\":{\"24\":1}}],[\"top\",{\"1\":{\"18\":1,\"24\":1}}],[\"to\",{\"1\":{\"4\":1,\"5\":2,\"6\":1,\"18\":1,\"24\":1,\"27\":3,\"28\":1,\"29\":1,\"31\":1,\"69\":1,\"96\":11,\"117\":1,\"137\":1,\"175\":3,\"181\":16,\"205\":1}}],[\"tho\",{\"1\":{\"96\":1}}],[\"through\",{\"1\":{\"96\":1}}],[\"throughout\",{\"1\":{\"96\":1}}],[\"thu\",{\"1\":{\"53\":1}}],[\"that\",{\"0\":{\"162\":1},\"1\":{\"18\":1,\"27\":1,\"96\":3,\"117\":1,\"162\":2}}],[\"there\",{\"1\":{\"45\":2,\"143\":1}}],[\"these\",{\"1\":{\"31\":1}}],[\"them\",{\"1\":{\"24\":1,\"27\":1}}],[\"theme=\",{\"1\":{\"79\":1}}],[\"theme\",{\"0\":{\"32\":1},\"1\":{\"0\":1,\"1\":4,\"7\":2,\"10\":4,\"24\":2,\"32\":1,\"50\":1}}],[\"then\",{\"1\":{\"5\":1,\"96\":1,\"181\":1}}],[\"the\",{\"0\":{\"162\":1},\"1\":{\"0\":1,\"18\":4,\"21\":1,\"24\":3,\"30\":1,\"32\":1,\"67\":1,\"68\":2,\"96\":16,\"117\":2,\"137\":1,\"162\":2,\"175\":10,\"181\":22,\"205\":3}}],[\"this\",{\"1\":{\"0\":1,\"3\":1,\"18\":1,\"34\":1,\"63\":1,\"96\":2,\"175\":2,\"181\":3}}],[\"binary\",{\"1\":{\"205\":1}}],[\"binarysearchfunc\",{\"0\":{\"86\":1},\"1\":{\"85\":1,\"86\":3,\"90\":1}}],[\"binarysearch\",{\"0\":{\"86\":1},\"1\":{\"85\":1,\"86\":4}}],[\"bindport\",{\"1\":{\"178\":1}}],[\"bin\",{\"1\":{\"175\":4,\"205\":1}}],[\"bridge\",{\"1\":{\"171\":4}}],[\"breadcrumb\",{\"1\":{\"18\":1,\"24\":1}}],[\"build\",{\"1\":{\"113\":2}}],[\"but\",{\"1\":{\"96\":1,\"143\":1}}],[\"button\",{\"1\":{\"18\":1,\"24\":3}}],[\"b^2\",{\"1\":{\"55\":1}}],[\"block\",{\"1\":{\"55\":1,\"96\":1}}],[\"blog\",{\"1\":{\"27\":1,\"118\":1,\"119\":2,\"120\":2,\"121\":2,\"127\":4,\"143\":1}}],[\"books\",{\"0\":{\"213\":1}}],[\"boot\",{\"1\":{\"181\":1}}],[\"bootstrap\",{\"1\":{\"181\":12}}],[\"bootstrappers\",{\"1\":{\"178\":1}}],[\"bootstraptokens\",{\"1\":{\"178\":1}}],[\"bool\",{\"1\":{\"86\":1,\"89\":1,\"96\":2}}],[\"bob\",{\"1\":{\"57\":5,\"90\":5}}],[\"bottom\",{\"1\":{\"52\":1,\"79\":1}}],[\"boxes\",{\"1\":{\"46\":1}}],[\"box\",{\"0\":{\"46\":1}}],[\"b\",{\"1\":{\"42\":1,\"55\":1,\"86\":6,\"89\":2,\"135\":11}}],[\"balancers\",{\"1\":{\"181\":1}}],[\"baz\",{\"1\":{\"113\":2}}],[\"baz是要导入的包\",{\"1\":{\"113\":1}}],[\"baz形式的逗号分隔的元素列表\",{\"1\":{\"113\":1}}],[\"bashrc\",{\"1\":{\"176\":4}}],[\"bash\",{\"1\":{\"176\":1,\"199\":1}}],[\"basis\",{\"1\":{\"175\":1}}],[\"basically\",{\"1\":{\"27\":1}}],[\"basics\",{\"1\":{\"3\":1}}],[\"basic\",{\"1\":{\"1\":1,\"5\":1}}],[\"base\",{\"1\":{\"117\":2}}],[\"basepath\",{\"1\":{\"104\":1}}],[\"based\",{\"1\":{\"55\":1}}],[\"backend\",{\"1\":{\"94\":1}}],[\"backgroundcolor\",{\"1\":{\"52\":1}}],[\"background\",{\"1\":{\"45\":1}}],[\"back\",{\"1\":{\"18\":1,\"24\":1}}],[\"byte\",{\"1\":{\"135\":2}}],[\"by\",{\"1\":{\"18\":1,\"30\":1,\"32\":1,\"96\":1,\"117\":1,\"175\":1,\"181\":3}}],[\"been\",{\"1\":{\"137\":1}}],[\"between\",{\"1\":{\"96\":1}}],[\"because\",{\"1\":{\"96\":2}}],[\"behave\",{\"1\":{\"96\":1}}],[\"besides\",{\"1\":{\"69\":1}}],[\"beforesend\",{\"1\":{\"96\":2}}],[\"beforehand\",{\"1\":{\"96\":1,\"181\":1}}],[\"before\",{\"1\":{\"66\":1,\"96\":3}}],[\"be\",{\"1\":{\"4\":1,\"5\":1,\"30\":1,\"67\":1,\"96\":4,\"137\":1}}],[\"www\",{\"1\":{\"175\":1}}],[\"wget\",{\"1\":{\"175\":5}}],[\"won\",{\"1\":{\"96\":1}}],[\"worker\",{\"1\":{\"181\":1}}],[\"world\",{\"1\":{\"62\":1,\"96\":1}}],[\"words\",{\"1\":{\"49\":1}}],[\"word\",{\"1\":{\"48\":1}}],[\"waiting\",{\"1\":{\"181\":1}}],[\"wait\",{\"1\":{\"181\":1}}],[\"waitfordelivery\",{\"1\":{\"96\":1}}],[\"warranties\",{\"1\":{\"175\":1}}],[\"warning\",{\"1\":{\"46\":1,\"162\":1}}],[\"was\",{\"1\":{\"143\":1}}],[\"wantedby=multi\",{\"1\":{\"175\":1}}],[\"want\",{\"1\":{\"96\":1,\"205\":1}}],[\"wrr\",{\"1\":{\"172\":2}}],[\"wrap\",{\"1\":{\"55\":1}}],[\"writing\",{\"1\":{\"31\":1,\"32\":1,\"68\":1,\"175\":1,\"181\":6}}],[\"write\",{\"1\":{\"27\":1,\"28\":1,\"69\":1,\"113\":1}}],[\"were\",{\"1\":{\"143\":1}}],[\"well\",{\"1\":{\"96\":1}}],[\"webs\",{\"0\":{\"219\":1}}],[\"web\",{\"2\":{\"81\":1}}],[\"we\",{\"1\":{\"55\":1,\"96\":3,\"175\":1}}],[\"wed\",{\"1\":{\"53\":1,\"161\":4}}],[\"when\",{\"1\":{\"143\":1}}],[\"whether\",{\"1\":{\"96\":2}}],[\"where\",{\"1\":{\"45\":1,\"143\":2}}],[\"which\",{\"1\":{\"3\":1,\"30\":1,\"70\":1,\"96\":1}}],[\"windows\",{\"1\":{\"205\":3}}],[\"without\",{\"1\":{\"175\":1}}],[\"withargs\",{\"1\":{\"143\":1}}],[\"withscope\",{\"1\":{\"96\":1}}],[\"with\",{\"1\":{\"6\":1,\"7\":1,\"37\":1,\"46\":1,\"69\":1,\"96\":1,\"175\":1,\"181\":3,\"205\":1,\"206\":1}}],[\"willreturnrows\",{\"1\":{\"143\":1}}],[\"will\",{\"1\":{\"4\":1,\"5\":1,\"30\":1,\"67\":1,\"96\":3,\"137\":1}}],[\"e7600c160a03f29329eda80b7e307ddb39a7714a8ec2f55aa36d08b1cc558996\",{\"1\":{\"181\":1,\"185\":1}}],[\"essential\",{\"1\":{\"181\":2}}],[\"effect\",{\"1\":{\"178\":1}}],[\"efs\",{\"1\":{\"94\":1}}],[\"echo\",{\"1\":{\"175\":12,\"176\":3}}],[\"echarts\",{\"0\":{\"53\":1},\"1\":{\"53\":1}}],[\"eof\",{\"1\":{\"172\":2,\"175\":3,\"176\":1}}],[\"etc\",{\"1\":{\"169\":1,\"170\":1,\"171\":2,\"172\":1,\"175\":7,\"176\":1,\"178\":1,\"180\":1,\"181\":9,\"183\":1}}],[\"etcd\",{\"1\":{\"137\":4,\"178\":2,\"181\":9}}],[\"ephemeral\",{\"1\":{\"161\":2}}],[\"eq\",{\"1\":{\"123\":2,\"126\":2}}],[\"equalfunc\",{\"1\":{\"85\":1}}],[\"equal\",{\"1\":{\"85\":1,\"118\":4,\"135\":1}}],[\"eventhint\",{\"1\":{\"96\":1}}],[\"event\",{\"1\":{\"96\":5}}],[\"every\",{\"1\":{\"4\":1,\"5\":1}}],[\"either\",{\"1\":{\"96\":1,\"175\":1}}],[\"err2\",{\"1\":{\"137\":2}}],[\"err1\",{\"1\":{\"137\":2}}],[\"errorf\",{\"1\":{\"143\":3}}],[\"errors\",{\"1\":{\"123\":2,\"124\":1,\"126\":1}}],[\"error\",{\"1\":{\"115\":2,\"117\":2,\"124\":1,\"127\":2,\"135\":9,\"137\":2,\"143\":3,\"161\":2}}],[\"err\",{\"1\":{\"96\":3,\"118\":4,\"135\":18,\"143\":11}}],[\"eg\",{\"1\":{\"89\":1}}],[\"emit\",{\"1\":{\"79\":1}}],[\"email\",{\"1\":{\"61\":1,\"94\":1}}],[\"e\",{\"1\":{\"69\":1,\"86\":5,\"137\":6,\"172\":2}}],[\"else\",{\"1\":{\"57\":2,\"137\":1}}],[\"elements\",{\"1\":{\"24\":1}}],[\"easily\",{\"1\":{\"27\":1}}],[\"each\",{\"1\":{\"24\":1,\"29\":1,\"70\":1,\"181\":1}}],[\"environment\",{\"1\":{\"176\":1,\"181\":1}}],[\"env\",{\"1\":{\"162\":3,\"181\":1}}],[\"encoding\",{\"1\":{\"135\":1}}],[\"encryption\",{\"0\":{\"21\":1},\"2\":{\"23\":1}}],[\"enable\",{\"1\":{\"175\":1,\"176\":1}}],[\"enabletracing\",{\"1\":{\"96\":1}}],[\"enabled\",{\"1\":{\"94\":3}}],[\"enabled=\",{\"1\":{\"79\":1}}],[\"endpoint\",{\"1\":{\"175\":3}}],[\"endpoint=mocksensorendpoint\",{\"1\":{\"113\":1}}],[\"enduml\",{\"1\":{\"57\":1}}],[\"end\",{\"1\":{\"57\":4}}],[\"enrich\",{\"1\":{\"31\":1}}],[\"enhancement\",{\"0\":{\"31\":1,\"32\":1,\"43\":1}}],[\"enhance\",{\"0\":{\"27\":1},\"1\":{\"32\":1}}],[\"exclude\",{\"1\":{\"181\":1}}],[\"except\",{\"1\":{\"175\":1}}],[\"excerpt\",{\"1\":{\"66\":1}}],[\"existed\",{\"1\":{\"137\":1}}],[\"exist\",{\"1\":{\"123\":1,\"124\":1,\"126\":1}}],[\"existingclaim\",{\"1\":{\"94\":1}}],[\"express\",{\"1\":{\"175\":1}}],[\"expectations\",{\"1\":{\"143\":1}}],[\"expectationsweremet\",{\"1\":{\"143\":1}}],[\"expectquery\",{\"1\":{\"143\":1}}],[\"expectedname\",{\"1\":{\"143\":4}}],[\"expectedid\",{\"1\":{\"143\":3}}],[\"expected\",{\"1\":{\"117\":3,\"143\":2}}],[\"expect\",{\"1\":{\"117\":2,\"118\":4,\"123\":4,\"124\":3,\"125\":1,\"126\":2}}],[\"export\",{\"1\":{\"10\":1,\"60\":1,\"175\":5,\"181\":1}}],[\"execstart=\",{\"1\":{\"175\":1}}],[\"execstartpre=\",{\"1\":{\"175\":1}}],[\"exec\",{\"1\":{\"113\":1}}],[\"example\",{\"1\":{\"94\":1}}],[\"examplepassword\",{\"1\":{\"94\":3}}],[\"examples\",{\"1\":{\"55\":1}}],[\"external\",{\"1\":{\"181\":1}}],[\"extends\",{\"1\":{\"32\":1}}],[\"extended\",{\"1\":{\"31\":1}}],[\"extension\",{\"0\":{\"30\":1}}],[\"extensions\",{\"1\":{\"5\":1,\"30\":1,\"31\":2}}],[\"extra\",{\"1\":{\"7\":1}}],[\"edit\",{\"1\":{\"1\":1,\"18\":1,\"117\":1,\"138\":1}}],[\"ips\",{\"1\":{\"181\":3}}],[\"ipvs\",{\"1\":{\"172\":1,\"178\":1}}],[\"ipvsadm\",{\"1\":{\"172\":1}}],[\"ipv4\",{\"1\":{\"171\":1}}],[\"ip\",{\"1\":{\"171\":1,\"172\":9}}],[\"iptables\",{\"1\":{\"171\":1}}],[\"ip6tables\",{\"1\":{\"171\":1}}],[\"i++\",{\"1\":{\"137\":2}}],[\"io\",{\"1\":{\"96\":2,\"162\":1,\"175\":5,\"176\":2,\"178\":5,\"181\":4}}],[\"id>\",{\"1\":{\"182\":1}}],[\"idx\",{\"1\":{\"86\":6}}],[\"id=\",{\"1\":{\"79\":2}}],[\"id\",{\"1\":{\"48\":1,\"61\":2,\"79\":2,\"115\":6,\"117\":8,\"127\":9,\"137\":4,\"143\":2,\"181\":2,\"183\":2}}],[\"i\",{\"1\":{\"47\":2,\"69\":1,\"70\":1,\"137\":4,\"169\":1,\"175\":3,\"181\":1,\"183\":1}}],[\"implied\",{\"1\":{\"175\":1}}],[\"imports\",{\"1\":{\"113\":1}}],[\"important\",{\"1\":{\"29\":1,\"49\":1}}],[\"import\",{\"1\":{\"10\":2,\"60\":1,\"62\":1,\"63\":1,\"70\":1,\"86\":2,\"87\":1,\"88\":1,\"89\":2,\"90\":1,\"96\":1,\"115\":1,\"117\":1,\"118\":1,\"127\":2,\"135\":1,\"136\":1,\"137\":1,\"143\":1}}],[\"imagerepository\",{\"1\":{\"178\":1}}],[\"imagepullpolicy\",{\"1\":{\"178\":1}}],[\"images\",{\"1\":{\"69\":2,\"180\":2,\"181\":2}}],[\"image\",{\"0\":{\"43\":1},\"1\":{\"175\":4,\"180\":1}}],[\"ir⋯\",{\"1\":{\"41\":1}}],[\"ifnotpresent\",{\"1\":{\"178\":1}}],[\"if\",{\"1\":{\"28\":1,\"29\":1,\"96\":5,\"124\":1,\"135\":3,\"137\":2,\"143\":4,\"175\":1,\"181\":1}}],[\"itoa\",{\"1\":{\"115\":1,\"127\":2}}],[\"its\",{\"1\":{\"96\":1}}],[\"itself\",{\"1\":{\"96\":2}}],[\"italic\",{\"1\":{\"55\":1}}],[\"item\",{\"1\":{\"38\":2}}],[\"it\",{\"1\":{\"5\":1,\"6\":1,\"27\":1,\"29\":1,\"30\":2,\"96\":12,\"175\":1}}],[\"info2\",{\"1\":{\"137\":3}}],[\"info1\",{\"1\":{\"137\":3}}],[\"info\",{\"1\":{\"127\":5,\"181\":2}}],[\"information\",{\"0\":{\"68\":1},\"1\":{\"18\":1,\"24\":2,\"46\":1,\"68\":1}}],[\"inorder\",{\"1\":{\"126\":1}}],[\"indicates\",{\"1\":{\"117\":2}}],[\"indicate\",{\"1\":{\"117\":1}}],[\"indexfunc\",{\"1\":{\"85\":1}}],[\"index\",{\"1\":{\"7\":1,\"60\":1,\"85\":1}}],[\"ingest\",{\"1\":{\"96\":2}}],[\"ingressclassname\",{\"1\":{\"94\":1}}],[\"ingress\",{\"1\":{\"94\":2}}],[\"initconfiguration\",{\"1\":{\"178\":1}}],[\"initialization\",{\"1\":{\"96\":1}}],[\"initialized\",{\"1\":{\"161\":2,\"181\":1}}],[\"initialize\",{\"1\":{\"96\":2}}],[\"init\",{\"1\":{\"96\":2,\"177\":1,\"178\":1,\"179\":1,\"180\":2,\"181\":8,\"182\":2}}],[\"instead\",{\"1\":{\"96\":1}}],[\"instance\",{\"1\":{\"96\":1,\"117\":1}}],[\"installs\",{\"0\":{\"229\":1}}],[\"install\",{\"1\":{\"10\":1,\"102\":1,\"111\":1,\"112\":1,\"168\":1,\"172\":1,\"175\":10,\"176\":3}}],[\"insert\",{\"1\":{\"85\":1}}],[\"input\",{\"1\":{\"79\":1,\"135\":2}}],[\"internet\",{\"1\":{\"181\":1}}],[\"internalip\",{\"1\":{\"161\":1}}],[\"interface\",{\"0\":{\"127\":2},\"1\":{\"115\":3,\"117\":4,\"127\":8,\"132\":6,\"135\":1,\"137\":1}}],[\"into\",{\"1\":{\"70\":1}}],[\"int\",{\"1\":{\"61\":1,\"86\":5,\"87\":1,\"89\":1,\"115\":4,\"117\":2,\"124\":1,\"127\":6,\"135\":22,\"137\":2,\"143\":1}}],[\"introduce\",{\"1\":{\"29\":1}}],[\"introduction\",{\"0\":{\"28\":1},\"1\":{\"29\":1}}],[\"intro\",{\"1\":{\"28\":1}}],[\"includes\",{\"1\":{\"96\":1}}],[\"include\",{\"0\":{\"35\":1}}],[\"including\",{\"1\":{\"24\":1}}],[\"in\",{\"1\":{\"4\":2,\"5\":1,\"24\":1,\"29\":1,\"30\":1,\"31\":1,\"46\":1,\"67\":2,\"68\":1,\"69\":1,\"70\":1,\"96\":7,\"135\":1,\"175\":3,\"181\":9,\"205\":1}}],[\"issortedfunc\",{\"1\":{\"85\":1}}],[\"issorted\",{\"1\":{\"85\":1}}],[\"is\",{\"1\":{\"0\":1,\"3\":1,\"18\":1,\"29\":1,\"45\":2,\"50\":1,\"63\":1,\"66\":1,\"68\":3,\"70\":1,\"117\":3,\"135\":1,\"175\":2,\"181\":3}}],[\"fssl\",{\"1\":{\"199\":1}}],[\"fs\",{\"1\":{\"175\":1}}],[\"fstab\",{\"1\":{\"170\":1}}],[\"f\",{\"1\":{\"90\":2,\"161\":1,\"176\":1,\"181\":1,\"184\":2,\"206\":1}}],[\"fatalf\",{\"1\":{\"143\":1}}],[\"fake\",{\"1\":{\"137\":2}}],[\"failswapon\",{\"1\":{\"178\":1}}],[\"fail\",{\"1\":{\"135\":1}}],[\"failedscheduling\",{\"1\":{\"162\":1}}],[\"failed\",{\"1\":{\"96\":1}}],[\"failure\",{\"1\":{\"57\":3}}],[\"false\",{\"1\":{\"86\":1,\"161\":4,\"175\":2,\"178\":1}}],[\"fmt\",{\"1\":{\"86\":5,\"87\":3,\"88\":2,\"89\":4,\"90\":5,\"96\":2,\"137\":3}}],[\"finalize\",{\"1\":{\"181\":1}}],[\"finish\",{\"1\":{\"118\":3,\"125\":1,\"126\":1}}],[\"fine\",{\"1\":{\"96\":2}}],[\"first\",{\"1\":{\"67\":1}}],[\"file\",{\"1\":{\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"27\":1,\"60\":3,\"61\":1,\"62\":1,\"63\":1,\"113\":1,\"175\":1,\"181\":7}}],[\"files=github\",{\"1\":{\"127\":2}}],[\"filesystem\",{\"1\":{\"94\":2}}],[\"filestore\",{\"1\":{\"94\":2}}],[\"files\",{\"0\":{\"35\":1},\"1\":{\"4\":1,\"27\":2,\"69\":1,\"94\":1,\"113\":1,\"119\":1,\"127\":1}}],[\"fd\",{\"1\":{\"60\":1}}],[\"flight\",{\"1\":{\"181\":1}}],[\"flannel\",{\"1\":{\"161\":6,\"184\":3}}],[\"flags\",{\"1\":{\"113\":1,\"181\":2}}],[\"flex\",{\"1\":{\"60\":2}}],[\"flowchart\",{\"0\":{\"54\":1}}],[\"free\",{\"1\":{\"69\":1,\"170\":2}}],[\"frida\",{\"1\":{\"90\":1}}],[\"fri\",{\"1\":{\"53\":1}}],[\"front\",{\"1\":{\"181\":2}}],[\"frontmatter\",{\"1\":{\"6\":1,\"18\":1,\"24\":1,\"29\":4,\"67\":1,\"68\":1}}],[\"from\",{\"1\":{\"10\":2,\"27\":1,\"60\":1,\"62\":1,\"63\":1,\"143\":2,\"162\":1,\"181\":3}}],[\"found\",{\"1\":{\"211\":1}}],[\"folder\",{\"1\":{\"181\":3}}],[\"following\",{\"1\":{\"18\":1,\"24\":1,\"181\":2}}],[\"foo是\",{\"1\":{\"113\":1}}],[\"foo是要在生成的源代码中用于包的标识符\",{\"1\":{\"113\":1}}],[\"foo\",{\"1\":{\"96\":1}}],[\"footnote\",{\"0\":{\"34\":1},\"1\":{\"34\":1,\"63\":1}}],[\"footer\",{\"1\":{\"18\":1,\"24\":1}}],[\"forward\",{\"1\":{\"96\":1,\"171\":1}}],[\"for\",{\"1\":{\"0\":1,\"4\":1,\"6\":1,\"7\":1,\"29\":1,\"31\":1,\"60\":2,\"69\":1,\"96\":2,\"117\":1,\"135\":3,\"137\":2,\"175\":1,\"181\":12}}],[\"fu\",{\"1\":{\"182\":1}}],[\"func\",{\"1\":{\"86\":4,\"87\":1,\"88\":1,\"89\":3,\"90\":1,\"96\":6,\"115\":3,\"117\":6,\"118\":2,\"124\":2,\"125\":1,\"126\":1,\"127\":4,\"135\":18,\"136\":4,\"137\":10,\"143\":2}}],[\"functions\",{\"1\":{\"32\":1}}],[\"function\",{\"1\":{\"18\":1}}],[\"fun\",{\"1\":{\"61\":1}}],[\"full\",{\"1\":{\"7\":1,\"60\":1}}],[\"features\",{\"0\":{\"15\":1,\"18\":1},\"1\":{\"5\":1,\"18\":1,\"55\":1,\"79\":1}}],[\"mv\",{\"1\":{\"175\":1,\"205\":1}}],[\"mkdir\",{\"1\":{\"175\":2,\"181\":1,\"183\":1}}],[\"m2\",{\"1\":{\"138\":1}}],[\"m1\",{\"1\":{\"138\":1}}],[\"mcok\",{\"1\":{\"118\":1}}],[\"m\",{\"1\":{\"117\":10,\"123\":4,\"124\":3,\"125\":4,\"126\":5,\"135\":3,\"170\":2}}],[\"might\",{\"1\":{\"181\":1}}],[\"mirror\",{\"1\":{\"175\":1}}],[\"mirrors\",{\"1\":{\"175\":2}}],[\"middleware\",{\"1\":{\"96\":5}}],[\"minute\",{\"1\":{\"181\":1}}],[\"mintimes\",{\"1\":{\"125\":1}}],[\"mind\",{\"1\":{\"96\":1}}],[\"minfunc\",{\"1\":{\"85\":1}}],[\"min\",{\"1\":{\"85\":1}}],[\"mister\",{\"1\":{\"45\":2}}],[\"ms\",{\"1\":{\"68\":1}}],[\"msg\",{\"1\":{\"62\":3,\"63\":3}}],[\"manifests目录中的yaml文件创建apiserver\",{\"1\":{\"181\":1}}],[\"manifests\",{\"1\":{\"181\":3,\"184\":1}}],[\"manifest\",{\"1\":{\"181\":5}}],[\"manager\",{\"1\":{\"181\":3}}],[\"may\",{\"1\":{\"175\":2}}],[\"maybeyouneedit\",{\"1\":{\"96\":1}}],[\"macos\",{\"1\":{\"205\":2}}],[\"mac\",{\"1\":{\"138\":1}}],[\"map\",{\"1\":{\"135\":3}}],[\"mapping=\",{\"1\":{\"79\":1}}],[\"master节点ip\",{\"1\":{\"178\":1}}],[\"master\",{\"0\":{\"161\":1},\"1\":{\"119\":1,\"120\":1,\"121\":1,\"161\":3,\"162\":1,\"178\":1,\"184\":1}}],[\"makes\",{\"1\":{\"96\":1}}],[\"make\",{\"1\":{\"87\":1,\"135\":1}}],[\"maxtimes\",{\"1\":{\"125\":1}}],[\"maxfunc\",{\"1\":{\"85\":1}}],[\"max\",{\"1\":{\"85\":1,\"171\":1}}],[\"mary\",{\"1\":{\"61\":1}}],[\"marking\",{\"1\":{\"181\":2}}],[\"markmap\",{\"0\":{\"55\":1},\"1\":{\"55\":8}}],[\"mark\",{\"0\":{\"49\":1},\"1\":{\"49\":1,\"176\":1,\"181\":2}}],[\"markdown\",{\"0\":{\"27\":1,\"28\":1,\"29\":1,\"30\":1},\"1\":{\"4\":2,\"5\":2,\"27\":2,\"28\":3,\"29\":1,\"30\":3,\"31\":2,\"32\":1,\"46\":1,\"67\":2,\"68\":1,\"69\":2,\"70\":2},\"2\":{\"65\":1}}],[\"main\",{\"1\":{\"61\":2,\"86\":4,\"87\":2,\"88\":2,\"89\":4,\"90\":2,\"143\":1,\"176\":1,\"199\":2}}],[\"my\",{\"1\":{\"57\":1}}],[\"multiline\",{\"1\":{\"55\":1}}],[\"mode\",{\"1\":{\"178\":1}}],[\"model=\",{\"1\":{\"62\":1,\"63\":1}}],[\"modprobe\",{\"1\":{\"172\":1,\"175\":1}}],[\"modules\",{\"1\":{\"172\":1}}],[\"mock调用次数支持如下几种场景\",{\"1\":{\"125\":1}}],[\"mock方法调用次数支持如下\",{\"1\":{\"118\":1}}],[\"mockobj\",{\"1\":{\"118\":8}}],[\"mocks\",{\"1\":{\"117\":2}}],[\"mocksensorrepository\",{\"1\":{\"113\":2}}],[\"mockusersrvmockrecorder\",{\"1\":{\"117\":7}}],[\"mockusersrv\",{\"1\":{\"117\":11}}],[\"mock工厂方法和mock记录器将以mock命名\",{\"1\":{\"113\":1}}],[\"mock\",{\"0\":{\"116\":1,\"117\":4,\"122\":1},\"1\":{\"110\":1,\"111\":1,\"112\":1,\"113\":2,\"115\":3,\"116\":1,\"117\":17,\"118\":2,\"119\":1,\"120\":1,\"121\":1,\"125\":1,\"127\":3,\"137\":3,\"143\":3,\"144\":1}}],[\"mockgen辅助代码生成工具安装\",{\"0\":{\"112\":1}}],[\"mockgen\",{\"0\":{\"109\":1,\"113\":1},\"1\":{\"110\":1,\"111\":1,\"112\":1,\"113\":2,\"115\":1,\"116\":1,\"117\":1,\"127\":4}}],[\"mockgen工具用来生成interface对应的mock类源文件\",{\"1\":{\"107\":1}}],[\"moving\",{\"1\":{\"96\":1}}],[\"most\",{\"1\":{\"96\":1}}],[\"monkey\",{\"1\":{\"131\":1}}],[\"monitoring\",{\"1\":{\"93\":1}}],[\"mon\",{\"1\":{\"53\":1,\"161\":4}}],[\"more\",{\"1\":{\"0\":1,\"4\":1,\"32\":1,\"55\":1,\"66\":1}}],[\"mr\",{\"1\":{\"45\":1,\"51\":1,\"117\":8}}],[\"md\",{\"1\":{\"32\":1,\"55\":1}}],[\"merge\",{\"1\":{\"206\":1}}],[\"mermaid\",{\"0\":{\"56\":1}}],[\"memory\",{\"1\":{\"161\":2}}],[\"memorypressure\",{\"1\":{\"161\":1}}],[\"message\",{\"1\":{\"161\":3,\"162\":1}}],[\"methodname\",{\"1\":{\"132\":2}}],[\"method\",{\"1\":{\"96\":1,\"117\":2,\"148\":1}}],[\"metadata=\",{\"1\":{\"79\":1}}],[\"meta\",{\"1\":{\"24\":1}}],[\"means\",{\"1\":{\"70\":1}}],[\"meanwhile\",{\"1\":{\"6\":1}}],[\"at\",{\"1\":{\"175\":1,\"181\":1}}],[\"attached\",{\"1\":{\"96\":2}}],[\"attaches\",{\"1\":{\"96\":1}}],[\"attach\",{\"1\":{\"96\":1}}],[\"attack\",{\"1\":{\"57\":3}}],[\"attrs\",{\"0\":{\"48\":1}}],[\"agreed\",{\"1\":{\"175\":1}}],[\"agiledragon\",{\"1\":{\"134\":1,\"135\":1,\"136\":1,\"137\":2}}],[\"age\",{\"1\":{\"86\":1,\"162\":1}}],[\"above\",{\"1\":{\"175\":1}}],[\"abcdef\",{\"1\":{\"178\":1,\"181\":2,\"185\":1}}],[\"abc\",{\"1\":{\"125\":1}}],[\"absolute\",{\"1\":{\"69\":1}}],[\"aug\",{\"1\":{\"161\":8}}],[\"aux\",{\"1\":{\"113\":1,\"127\":3}}],[\"automatically\",{\"1\":{\"181\":1}}],[\"autopurge\",{\"1\":{\"94\":2}}],[\"authors\",{\"1\":{\"175\":1}}],[\"author\",{\"1\":{\"68\":1}}],[\"authentication\",{\"1\":{\"57\":3,\"178\":1}}],[\"available\",{\"1\":{\"96\":2,\"161\":2,\"162\":1}}],[\"after=network\",{\"1\":{\"175\":1}}],[\"after\",{\"1\":{\"96\":1,\"181\":1}}],[\"af76a4c245b302206b16aec503dbe07b\",{\"1\":{\"55\":1}}],[\"advertiseaddress\",{\"1\":{\"178\":1}}],[\"adjusting\",{\"1\":{\"96\":1}}],[\"administration\",{\"1\":{\"181\":1}}],[\"admininfosrv\",{\"1\":{\"127\":2}}],[\"adminservice\",{\"1\":{\"127\":4}}],[\"adminsrv\",{\"1\":{\"127\":2}}],[\"admin\",{\"1\":{\"94\":1,\"127\":6,\"181\":3,\"183\":1}}],[\"addon\",{\"1\":{\"181\":2}}],[\"addons\",{\"1\":{\"181\":4}}],[\"adding\",{\"1\":{\"181\":2}}],[\"addresses\",{\"1\":{\"161\":1}}],[\"addrow\",{\"1\":{\"143\":1}}],[\"add\",{\"1\":{\"4\":1,\"6\":1,\"7\":1,\"10\":1,\"176\":1,\"205\":1,\"206\":1}}],[\"aws\",{\"1\":{\"94\":1}}],[\"apt\",{\"0\":{\"167\":1},\"1\":{\"167\":1,\"168\":1,\"172\":1,\"176\":11}}],[\"apiclient\",{\"1\":{\"181\":1}}],[\"apiserver\",{\"1\":{\"178\":1,\"181\":5}}],[\"apisix\",{\"0\":{\"151\":1,\"152\":1},\"1\":{\"152\":1}}],[\"apiversion\",{\"1\":{\"178\":4}}],[\"api\",{\"1\":{\"152\":1}}],[\"apache\",{\"1\":{\"152\":1,\"175\":2}}],[\"apm\",{\"1\":{\"93\":1}}],[\"approve\",{\"1\":{\"181\":1}}],[\"applied\",{\"1\":{\"181\":2}}],[\"applicable\",{\"1\":{\"175\":1}}],[\"application\",{\"1\":{\"93\":1,\"96\":1}}],[\"apply\",{\"1\":{\"161\":1,\"181\":1,\"184\":2}}],[\"applyglobalvar\",{\"1\":{\"132\":1,\"136\":1}}],[\"applymethodreturn\",{\"1\":{\"137\":4}}],[\"applymethodseq\",{\"1\":{\"132\":1}}],[\"applymethod\",{\"1\":{\"132\":1}}],[\"applyfuncvarseq\",{\"1\":{\"132\":1}}],[\"applyfuncvar\",{\"1\":{\"132\":1}}],[\"applyfuncseq\",{\"1\":{\"132\":1}}],[\"applyfunc\",{\"1\":{\"132\":1,\"135\":6}}],[\"append\",{\"1\":{\"87\":1}}],[\"app\",{\"1\":{\"62\":1,\"63\":1,\"79\":1,\"96\":11}}],[\"aaron\",{\"1\":{\"86\":1,\"90\":5}}],[\"amd64\",{\"1\":{\"161\":1,\"175\":11}}],[\"am\",{\"1\":{\"47\":2}}],[\"all\",{\"1\":{\"172\":1,\"181\":2}}],[\"allow\",{\"1\":{\"181\":4}}],[\"allows\",{\"1\":{\"96\":1,\"117\":1}}],[\"allocatable\",{\"1\":{\"161\":1}}],[\"all=\",{\"1\":{\"138\":2,\"143\":1}}],[\"alb\",{\"1\":{\"94\":2}}],[\"alternatively\",{\"1\":{\"181\":1}}],[\"alt\",{\"1\":{\"57\":1}}],[\"alias\",{\"1\":{\"176\":1}}],[\"aliyuncs\",{\"1\":{\"175\":1,\"178\":1,\"180\":2}}],[\"alice\",{\"1\":{\"57\":7}}],[\"align\",{\"0\":{\"47\":1},\"1\":{\"47\":1}}],[\"alert\",{\"1\":{\"46\":1}}],[\"alerts\",{\"0\":{\"46\":1}}],[\"also\",{\"1\":{\"5\":1,\"6\":1,\"24\":2,\"67\":1,\"70\":1,\"96\":1,\"181\":1}}],[\"action\",{\"1\":{\"181\":1}}],[\"actual\",{\"1\":{\"21\":1}}],[\"accounting\",{\"1\":{\"175\":2}}],[\"according\",{\"1\":{\"27\":1}}],[\"accessing\",{\"1\":{\"96\":1}}],[\"access\",{\"1\":{\"96\":2}}],[\"accessmode\",{\"1\":{\"94\":1}}],[\"accepts\",{\"1\":{\"96\":1}}],[\"accepted\",{\"1\":{\"57\":1}}],[\"array<string>\",{\"1\":{\"61\":1}}],[\"args\",{\"1\":{\"61\":1}}],[\"article\",{\"0\":{\"21\":1},\"1\":{\"21\":1}}],[\"are\",{\"1\":{\"7\":1,\"28\":1,\"68\":1,\"69\":1,\"162\":1,\"181\":2}}],[\"anytimes\",{\"1\":{\"118\":4,\"125\":1}}],[\"any\",{\"1\":{\"96\":2,\"118\":5,\"123\":3,\"124\":2,\"175\":1,\"181\":1}}],[\"annotation\",{\"1\":{\"94\":1}}],[\"annotations\",{\"1\":{\"94\":1}}],[\"anonymous\",{\"1\":{\"79\":1}}],[\"another\",{\"1\":{\"57\":1}}],[\"an\",{\"1\":{\"18\":1,\"29\":1,\"96\":1,\"117\":3,\"143\":1,\"175\":1}}],[\"and\",{\"0\":{\"7\":1,\"18\":1,\"44\":1,\"46\":1},\"1\":{\"5\":1,\"18\":1,\"24\":3,\"27\":1,\"28\":2,\"32\":1,\"37\":1,\"43\":1,\"68\":1,\"70\":1,\"96\":3,\"135\":1,\"138\":1,\"175\":2,\"181\":15}}],[\"assert\",{\"1\":{\"118\":11,\"135\":3}}],[\"assets\",{\"1\":{\"69\":1}}],[\"async>\",{\"1\":{\"79\":1}}],[\"as\",{\"1\":{\"6\":1,\"66\":1,\"67\":1,\"96\":4,\"175\":1,\"181\":5}}],[\"a\",{\"1\":{\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"28\":1,\"37\":2,\"39\":1,\"42\":1,\"46\":6,\"48\":1,\"51\":1,\"52\":1,\"53\":1,\"70\":1,\"89\":2,\"96\":1,\"117\":3,\"135\":11,\"143\":1,\"161\":1,\"170\":1,\"175\":2,\"181\":7,\"182\":1}}],[\"pdo\",{\"1\":{\"182\":1}}],[\"phase\",{\"1\":{\"181\":1}}],[\"peer\",{\"1\":{\"181\":2}}],[\"perform\",{\"1\":{\"181\":1}}],[\"performance\",{\"0\":{\"223\":1},\"1\":{\"93\":1,\"175\":1}}],[\"permissions\",{\"1\":{\"175\":1}}],[\"persistentworkers\",{\"1\":{\"94\":1}}],[\"persistence\",{\"1\":{\"94\":1}}],[\"per\",{\"1\":{\"6\":1}}],[\"pki\",{\"1\":{\"178\":1,\"181\":1}}],[\"pkg\",{\"1\":{\"96\":1}}],[\"pid\",{\"1\":{\"161\":1}}],[\"pidpressure\",{\"1\":{\"161\":1}}],[\"p\",{\"1\":{\"135\":4,\"171\":1,\"175\":2,\"181\":1,\"183\":1}}],[\"pulling\",{\"1\":{\"181\":1}}],[\"pull\",{\"1\":{\"175\":2,\"180\":1,\"181\":1}}],[\"purgeinterval\",{\"1\":{\"94\":1}}],[\"public\",{\"1\":{\"69\":1,\"181\":2}}],[\"pm\",{\"1\":{\"55\":1}}],[\"point\",{\"1\":{\"181\":1}}],[\"pool\",{\"1\":{\"168\":1}}],[\"podnetwork\",{\"1\":{\"181\":1}}],[\"pod\",{\"0\":{\"162\":1,\"190\":1,\"191\":1},\"1\":{\"162\":5,\"181\":5,\"182\":2},\"2\":{\"192\":1}}],[\"podsubnet\",{\"1\":{\"178\":1}}],[\"pods\",{\"1\":{\"161\":1,\"181\":1}}],[\"port\",{\"1\":{\"104\":1}}],[\"post\",{\"1\":{\"181\":1}}],[\"postgresqlpostgrespassword\",{\"1\":{\"94\":1}}],[\"postgresqlpassword\",{\"1\":{\"94\":1}}],[\"postgresql\",{\"1\":{\"94\":2}}],[\"position=\",{\"1\":{\"79\":1}}],[\"position\",{\"1\":{\"52\":1}}],[\"powerful\",{\"1\":{\"50\":1}}],[\"place\",{\"1\":{\"69\":1}}],[\"playground\",{\"0\":{\"60\":1,\"61\":1,\"62\":1,\"63\":1},\"1\":{\"60\":1,\"61\":2,\"62\":2,\"63\":1}}],[\"plane\",{\"1\":{\"181\":15}}],[\"plantuml\",{\"0\":{\"57\":1}}],[\"plan\",{\"1\":{\"42\":2}}],[\"plugin\",{\"1\":{\"32\":1,\"161\":4}}],[\"plugins\",{\"1\":{\"30\":1,\"175\":8}}],[\"please\",{\"1\":{\"28\":1,\"31\":1,\"57\":1,\"69\":1,\"181\":1}}],[\"projectcalico\",{\"1\":{\"184\":1}}],[\"projects\",{\"1\":{\"55\":1}}],[\"proxy\",{\"1\":{\"181\":4}}],[\"problems\",{\"1\":{\"175\":1}}],[\"profile\",{\"1\":{\"121\":2}}],[\"prog\",{\"1\":{\"113\":1}}],[\"provided\",{\"1\":{\"96\":1}}],[\"provides\",{\"1\":{\"32\":1}}],[\"proceeding\",{\"1\":{\"96\":1}}],[\"production\",{\"1\":{\"96\":1,\"176\":1}}],[\"printf\",{\"1\":{\"87\":2,\"96\":1}}],[\"println\",{\"1\":{\"61\":1,\"86\":3,\"88\":1,\"89\":2,\"90\":4,\"137\":1}}],[\"print\",{\"1\":{\"24\":1,\"177\":1}}],[\"pre\",{\"1\":{\"181\":1}}],[\"preflight\",{\"1\":{\"181\":5}}],[\"prefernoschedule\",{\"1\":{\"162\":1,\"178\":1}}],[\"preferred\",{\"1\":{\"79\":1}}],[\"prefix\",{\"1\":{\"94\":1,\"205\":1}}],[\"presets\",{\"1\":{\"60\":1}}],[\"presetuno\",{\"1\":{\"60\":2}}],[\"preset<\",{\"1\":{\"60\":1}}],[\"pressure\",{\"1\":{\"161\":1}}],[\"press\",{\"1\":{\"1\":2}}],[\"prev\",{\"1\":{\"18\":1}}],[\"pause镜像及版本号\",{\"1\":{\"180\":1}}],[\"pause\",{\"1\":{\"175\":2,\"180\":2}}],[\"pass\",{\"1\":{\"143\":2}}],[\"password\",{\"1\":{\"94\":1}}],[\"patches\",{\"1\":{\"135\":11,\"136\":2,\"137\":8}}],[\"patch\",{\"1\":{\"131\":1,\"137\":1}}],[\"path=\",{\"1\":{\"175\":1}}],[\"pathtype\",{\"1\":{\"94\":1}}],[\"path\",{\"1\":{\"94\":2,\"175\":1}}],[\"pathname\",{\"1\":{\"79\":1}}],[\"panic\",{\"1\":{\"96\":1,\"135\":1}}],[\"packages\",{\"0\":{\"221\":1},\"1\":{\"176\":1}}],[\"package=mock\",{\"1\":{\"116\":1,\"127\":3}}],[\"package\",{\"1\":{\"86\":2,\"87\":1,\"88\":1,\"89\":2,\"90\":1,\"113\":3,\"115\":2,\"117\":3,\"118\":1,\"127\":2,\"135\":1,\"136\":1,\"137\":1,\"143\":1}}],[\"param\",{\"1\":{\"135\":2}}],[\"paragraph\",{\"1\":{\"21\":26,\"37\":1}}],[\"parser\",{\"1\":{\"113\":1}}],[\"parsed\",{\"1\":{\"30\":1}}],[\"pages\",{\"0\":{\"4\":1},\"1\":{\"27\":2}}],[\"page\",{\"0\":{\"66\":1,\"67\":1,\"68\":1,\"69\":1},\"1\":{\"0\":2,\"3\":1,\"4\":1,\"6\":1,\"18\":4,\"24\":2,\"29\":1,\"66\":1,\"67\":2,\"68\":2,\"70\":1},\"2\":{\"72\":1}}],[\"hwclock\",{\"1\":{\"168\":1}}],[\"hugepages\",{\"1\":{\"161\":3}}],[\"hub\",{\"1\":{\"96\":10,\"161\":1,\"175\":1,\"187\":1}}],[\"h1\",{\"1\":{\"67\":1}}],[\"h1>\",{\"1\":{\"62\":1,\"63\":1}}],[\"healthy\",{\"1\":{\"181\":1}}],[\"healthcheck\",{\"1\":{\"181\":1}}],[\"helper\",{\"1\":{\"117\":4}}],[\"helm\",{\"0\":{\"197\":1,\"198\":1,\"199\":1},\"1\":{\"94\":2,\"199\":9}}],[\"hello\",{\"1\":{\"62\":1,\"63\":1,\"96\":1,\"137\":3}}],[\"here\",{\"1\":{\"7\":1,\"69\":1,\"96\":1}}],[\"h\",{\"1\":{\"60\":1,\"90\":2,\"207\":1}}],[\"had\",{\"1\":{\"162\":2}}],[\"have\",{\"1\":{\"96\":1}}],[\"having\",{\"1\":{\"48\":1,\"175\":1}}],[\"handles\",{\"1\":{\"96\":1}}],[\"handler\",{\"1\":{\"96\":5}}],[\"harry\",{\"1\":{\"86\":1,\"90\":1}}],[\"hash\",{\"1\":{\"181\":1,\"185\":1}}],[\"has\",{\"1\":{\"24\":1,\"31\":1,\"34\":1,\"137\":1,\"161\":3,\"181\":1}}],[\"hint\",{\"0\":{\"46\":1},\"1\":{\"46\":1,\"96\":3}}],[\"h2o\",{\"1\":{\"44\":1}}],[\"http\",{\"1\":{\"96\":5,\"100\":1,\"175\":1}}],[\"https\",{\"1\":{\"1\":3,\"45\":2,\"55\":3,\"79\":1,\"94\":1,\"96\":3,\"161\":1,\"175\":6,\"176\":4,\"181\":1,\"184\":2,\"199\":2,\"205\":4}}],[\"html=cover\",{\"1\":{\"121\":1}}],[\"html\",{\"1\":{\"1\":1,\"5\":1,\"60\":1}}],[\"hold\",{\"1\":{\"176\":1}}],[\"hostname\",{\"1\":{\"94\":1,\"161\":1}}],[\"how\",{\"1\":{\"28\":1,\"96\":1}}],[\"hope\",{\"1\":{\"1\":2,\"45\":4,\"50\":1,\"51\":1,\"68\":1}}],[\"home\",{\"0\":{\"0\":1},\"1\":{\"0\":3,\"1\":1}}],[\"due\",{\"1\":{\"175\":1}}],[\"duration\",{\"1\":{\"96\":1}}],[\"driver\",{\"1\":{\"141\":1}}],[\"db\",{\"1\":{\"126\":1,\"143\":6}}],[\"ds\",{\"1\":{\"161\":1}}],[\"dsn\",{\"1\":{\"96\":2}}],[\"dst\",{\"1\":{\"86\":2}}],[\"d\",{\"1\":{\"87\":4,\"171\":2,\"172\":1,\"176\":1}}],[\"dnsdomain\",{\"1\":{\"178\":1}}],[\"dns\",{\"1\":{\"57\":1,\"178\":1,\"181\":3}}],[\"d=gist\",{\"1\":{\"55\":1}}],[\"darwin\",{\"1\":{\"205\":1}}],[\"darkmode\",{\"1\":{\"24\":1}}],[\"daemon\",{\"1\":{\"175\":1}}],[\"dao\",{\"1\":{\"143\":2}}],[\"date\",{\"1\":{\"68\":1}}],[\"datadir\",{\"1\":{\"178\":1}}],[\"database\",{\"1\":{\"143\":1}}],[\"dataset\",{\"1\":{\"52\":1}}],[\"datasets\",{\"1\":{\"52\":1}}],[\"data\",{\"1\":{\"52\":2,\"53\":2,\"79\":11,\"96\":1,\"115\":2,\"117\":4,\"127\":2,\"135\":2,\"137\":1,\"142\":1,\"143\":1}}],[\"download\",{\"1\":{\"175\":5,\"205\":4}}],[\"does\",{\"1\":{\"175\":1}}],[\"doesn\",{\"1\":{\"96\":1}}],[\"doe\",{\"1\":{\"143\":1}}],[\"dog\",{\"1\":{\"142\":1,\"143\":1}}],[\"double\",{\"1\":{\"132\":4}}],[\"doandreturn\",{\"1\":{\"124\":2}}],[\"do\",{\"1\":{\"117\":1,\"124\":2,\"135\":2,\"175\":1}}],[\"done\",{\"1\":{\"96\":1}}],[\"donate\",{\"1\":{\"51\":1}}],[\"don\",{\"1\":{\"28\":1,\"29\":1}}],[\"docker\",{\"1\":{\"161\":1,\"175\":1,\"187\":1}}],[\"doc\",{\"1\":{\"91\":1,\"176\":1}}],[\"document\",{\"1\":{\"31\":1}}],[\"documentation=https\",{\"1\":{\"175\":1}}],[\"documentation\",{\"1\":{\"27\":1,\"161\":1,\"184\":1}}],[\"docs\",{\"1\":{\"0\":1,\"7\":1,\"97\":1,\"176\":1,\"181\":1,\"184\":1,\"200\":1}}],[\"didn\",{\"0\":{\"162\":1},\"1\":{\"162\":2}}],[\"discovery\",{\"1\":{\"181\":1,\"185\":1}}],[\"discussions\",{\"1\":{\"79\":2}}],[\"distributed\",{\"1\":{\"175\":2}}],[\"disk\",{\"1\":{\"161\":1}}],[\"diskpressure\",{\"1\":{\"161\":1}}],[\"disables\",{\"1\":{\"18\":1}}],[\"disable\",{\"1\":{\"18\":1,\"169\":1,\"175\":1},\"2\":{\"20\":1}}],[\"disabling\",{\"0\":{\"18\":1}}],[\"div>\",{\"1\":{\"60\":3}}],[\"different\",{\"1\":{\"27\":1}}],[\"directory\",{\"1\":{\"4\":1,\"69\":1,\"181\":1}}],[\"deploy\",{\"1\":{\"181\":1}}],[\"depending\",{\"1\":{\"181\":1}}],[\"deb\",{\"1\":{\"176\":1}}],[\"debug\",{\"1\":{\"113\":1,\"175\":1}}],[\"declares\",{\"1\":{\"137\":1}}],[\"destination=mock\",{\"1\":{\"116\":1,\"127\":3}}],[\"destination\",{\"0\":{\"117\":1},\"1\":{\"113\":1,\"115\":1}}],[\"description=containerd\",{\"1\":{\"175\":1}}],[\"describe\",{\"1\":{\"161\":1,\"162\":2,\"182\":1}}],[\"desc\",{\"1\":{\"45\":1}}],[\"delegate=yes\",{\"1\":{\"175\":1}}],[\"deletefunc\",{\"1\":{\"85\":1}}],[\"delete\",{\"1\":{\"85\":1}}],[\"delivery\",{\"1\":{\"96\":1}}],[\"detail\",{\"1\":{\"33\":1,\"34\":1,\"35\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1}}],[\"details\",{\"1\":{\"0\":1,\"4\":1,\"46\":1}}],[\"demo\",{\"0\":{\"15\":1,\"59\":1},\"1\":{\"18\":1,\"28\":1,\"60\":1,\"63\":1,\"115\":1,\"118\":4,\"119\":5,\"120\":5,\"121\":5,\"127\":10,\"135\":1,\"136\":1,\"137\":1,\"143\":2}}],[\"def\",{\"1\":{\"125\":1}}],[\"defer\",{\"1\":{\"118\":3,\"125\":1,\"126\":1,\"135\":5,\"136\":1,\"137\":3,\"143\":1}}],[\"defineconfig\",{\"1\":{\"60\":2}}],[\"defineuserconfig\",{\"1\":{\"10\":2}}],[\"defaults\",{\"1\":{\"177\":1}}],[\"default\",{\"1\":{\"0\":1,\"1\":1,\"7\":2,\"10\":1,\"60\":2,\"96\":4,\"162\":1,\"175\":1,\"178\":1,\"181\":3}}],[\"dev\",{\"1\":{\"10\":1,\"96\":1}}],[\"cd\",{\"1\":{\"205\":1}}],[\"csrapprover\",{\"1\":{\"181\":1}}],[\"csrs\",{\"1\":{\"181\":2}}],[\"css\",{\"1\":{\"60\":1}}],[\"css<\",{\"1\":{\"60\":1}}],[\"cgroupdriver\",{\"1\":{\"178\":1}}],[\"cgroups\",{\"1\":{\"175\":1}}],[\"cert\",{\"1\":{\"181\":4,\"185\":1}}],[\"certificates\",{\"1\":{\"181\":1}}],[\"certificatesdir\",{\"1\":{\"178\":1}}],[\"certificate\",{\"1\":{\"181\":13}}],[\"certificatedir\",{\"1\":{\"181\":1}}],[\"certs\",{\"1\":{\"181\":18}}],[\"center\",{\"1\":{\"47\":1,\"60\":2}}],[\"cxfzv\",{\"1\":{\"175\":3}}],[\"cxzvf\",{\"1\":{\"175\":1}}],[\"cp\",{\"1\":{\"181\":1,\"183\":1}}],[\"cpu\",{\"1\":{\"161\":2}}],[\"cpp\",{\"1\":{\"137\":1}}],[\"c\",{\"1\":{\"135\":5,\"175\":1}}],[\"ctrl\",{\"1\":{\"117\":12,\"118\":8,\"125\":3,\"126\":3}}],[\"ctx\",{\"1\":{\"96\":9}}],[\"cmy\",{\"1\":{\"89\":3}}],[\"cmp\",{\"1\":{\"86\":5,\"90\":1}}],[\"cni\",{\"1\":{\"161\":2,\"175\":11}}],[\"cn\",{\"1\":{\"79\":1,\"168\":1}}],[\"cluster\",{\"1\":{\"178\":1,\"181\":9}}],[\"clusterconfiguration\",{\"1\":{\"178\":1}}],[\"clustername\",{\"1\":{\"178\":1}}],[\"cloud\",{\"1\":{\"176\":1}}],[\"close\",{\"1\":{\"143\":1}}],[\"clone\",{\"0\":{\"88\":1},\"1\":{\"85\":1,\"88\":2}}],[\"clip\",{\"0\":{\"87\":1},\"1\":{\"85\":1,\"87\":2}}],[\"clientoptions\",{\"1\":{\"96\":2}}],[\"client\",{\"1\":{\"6\":2,\"79\":1,\"181\":6}}],[\"class\",{\"1\":{\"61\":1}}],[\"class=\",{\"1\":{\"60\":3}}],[\"chown\",{\"1\":{\"181\":1,\"183\":1}}],[\"chmod\",{\"1\":{\"175\":1,\"199\":1}}],[\"change\",{\"1\":{\"136\":1}}],[\"charts\",{\"1\":{\"94\":1}}],[\"chart\",{\"0\":{\"52\":1},\"1\":{\"52\":2,\"53\":1,\"94\":1}}],[\"checks\",{\"1\":{\"181\":1}}],[\"check\",{\"1\":{\"0\":1,\"7\":1}}],[\"curl\",{\"1\":{\"176\":2,\"199\":2,\"205\":4}}],[\"currently\",{\"1\":{\"96\":1}}],[\"cup\",{\"1\":{\"51\":1}}],[\"custom\",{\"1\":{\"46\":10,\"60\":2}}],[\"customize\",{\"1\":{\"24\":1}}],[\"customization\",{\"0\":{\"7\":1}}],[\"calico\",{\"1\":{\"184\":2}}],[\"call\",{\"1\":{\"117\":6,\"171\":2}}],[\"caller\",{\"1\":{\"117\":1}}],[\"callback\",{\"1\":{\"96\":1}}],[\"calls\",{\"1\":{\"96\":1}}],[\"ca\",{\"1\":{\"181\":4,\"185\":1}}],[\"causes\",{\"1\":{\"175\":1}}],[\"caution\",{\"1\":{\"46\":1}}],[\"cat\",{\"1\":{\"172\":1,\"175\":2,\"176\":1}}],[\"catch\",{\"1\":{\"96\":1}}],[\"category=\",{\"1\":{\"79\":1}}],[\"category\",{\"1\":{\"53\":1,\"68\":1,\"79\":1}}],[\"capacity\",{\"1\":{\"161\":1}}],[\"captureexception\",{\"1\":{\"96\":1}}],[\"capturemessage\",{\"1\":{\"96\":2}}],[\"capture\",{\"1\":{\"96\":1}}],[\"cap\",{\"1\":{\"87\":6}}],[\"cases\",{\"1\":{\"96\":1}}],[\"case\",{\"1\":{\"57\":1}}],[\"can\",{\"1\":{\"4\":1,\"5\":1,\"6\":3,\"7\":1,\"18\":1,\"24\":2,\"27\":2,\"49\":1,\"55\":1,\"67\":1,\"68\":1,\"69\":1,\"70\":2,\"96\":2,\"181\":4}}],[\"credentials\",{\"1\":{\"181\":1}}],[\"creating\",{\"1\":{\"181\":6}}],[\"creates\",{\"1\":{\"117\":1}}],[\"create\",{\"1\":{\"6\":1,\"27\":1,\"70\":1,\"94\":1,\"96\":1,\"175\":1}}],[\"crisocket\",{\"1\":{\"178\":1}}],[\"crictl\",{\"1\":{\"175\":10,\"182\":2}}],[\"cri\",{\"1\":{\"171\":2,\"175\":3}}],[\"crud\",{\"1\":{\"144\":1}}],[\"crossorigin=\",{\"1\":{\"79\":1}}],[\"crnleh\",{\"1\":{\"1\":1}}],[\"coredns\",{\"1\":{\"181\":2}}],[\"coreos\",{\"1\":{\"161\":1,\"184\":1}}],[\"coverprofile=cover\",{\"1\":{\"121\":1}}],[\"coverage\",{\"1\":{\"120\":2,\"121\":2}}],[\"cover\",{\"1\":{\"120\":1,\"121\":1}}],[\"costalong\",{\"1\":{\"118\":1,\"119\":2,\"120\":2,\"121\":2,\"127\":4,\"143\":1}}],[\"copy\",{\"1\":{\"175\":1}}],[\"copyright\",{\"1\":{\"113\":1,\"175\":1}}],[\"copied\",{\"1\":{\"96\":3}}],[\"copiedslice\",{\"1\":{\"88\":3}}],[\"co\",{\"1\":{\"100\":1}}],[\"col\",{\"1\":{\"60\":1}}],[\"colorfreezelevel\",{\"1\":{\"55\":1}}],[\"color\",{\"1\":{\"43\":1,\"60\":2,\"79\":1}}],[\"coc\",{\"1\":{\"55\":2}}],[\"coffee\",{\"1\":{\"51\":1}}],[\"code`\",{\"1\":{\"55\":1}}],[\"code\",{\"0\":{\"58\":1,\"59\":1},\"1\":{\"46\":1,\"55\":1,\"117\":1,\"118\":1,\"119\":2,\"120\":2,\"121\":2,\"127\":4,\"143\":1}}],[\"complete\",{\"1\":{\"176\":1}}],[\"completion\",{\"1\":{\"176\":1}}],[\"compliance\",{\"1\":{\"175\":1}}],[\"computetow\",{\"1\":{\"135\":3}}],[\"compute\",{\"1\":{\"135\":5}}],[\"computer\",{\"1\":{\"135\":1}}],[\"company\",{\"1\":{\"94\":2}}],[\"comparefunc\",{\"0\":{\"90\":1},\"1\":{\"85\":1,\"90\":1}}],[\"compare\",{\"0\":{\"90\":1},\"1\":{\"85\":1,\"86\":1,\"90\":7}}],[\"compactfunc\",{\"0\":{\"89\":1},\"1\":{\"85\":1,\"89\":2}}],[\"compact\",{\"0\":{\"89\":1},\"1\":{\"85\":1,\"89\":4}}],[\"components\",{\"0\":{\"70\":1},\"1\":{\"70\":1,\"181\":1}}],[\"component\",{\"0\":{\"45\":1},\"1\":{\"70\":1}}],[\"comments\",{\"1\":{\"24\":1}}],[\"comment\",{\"1\":{\"18\":1,\"66\":1,\"113\":1,\"175\":1}}],[\"common\",{\"1\":{\"7\":1}}],[\"com\",{\"1\":{\"1\":1,\"45\":2,\"55\":3,\"61\":1,\"94\":3,\"95\":1,\"96\":4,\"102\":1,\"110\":1,\"111\":1,\"112\":1,\"117\":1,\"118\":3,\"119\":2,\"120\":2,\"121\":2,\"127\":4,\"134\":1,\"135\":3,\"136\":2,\"137\":3,\"142\":1,\"143\":2,\"161\":1,\"175\":7,\"176\":1,\"178\":1,\"180\":2,\"184\":1,\"199\":2,\"205\":4}}],[\"conntrack\",{\"1\":{\"172\":3}}],[\"connection\",{\"1\":{\"143\":1,\"181\":1}}],[\"conditions\",{\"1\":{\"161\":2,\"175\":1,\"182\":1}}],[\"convey\",{\"1\":{\"135\":5,\"136\":4,\"137\":4}}],[\"convert\",{\"1\":{\"27\":1}}],[\"converted\",{\"1\":{\"4\":1,\"5\":1,\"70\":1}}],[\"conf\",{\"0\":{\"104\":1},\"1\":{\"104\":1,\"171\":2,\"172\":1,\"181\":7,\"183\":1}}],[\"configmap\",{\"1\":{\"181\":4}}],[\"config=kubeadm\",{\"1\":{\"179\":1,\"180\":2,\"181\":2,\"182\":1}}],[\"configuring\",{\"1\":{\"181\":1}}],[\"configured\",{\"1\":{\"181\":4}}],[\"configure\",{\"1\":{\"96\":2}}],[\"configurations\",{\"1\":{\"138\":1}}],[\"configuration\",{\"0\":{\"6\":1},\"1\":{\"6\":3,\"7\":1,\"29\":1,\"181\":3}}],[\"config\",{\"0\":{\"29\":1,\"66\":1},\"1\":{\"1\":1,\"6\":2,\"10\":1,\"60\":1,\"68\":1,\"169\":1,\"175\":5,\"177\":2,\"178\":2,\"179\":1,\"180\":3,\"181\":8,\"183\":2,\"206\":2},\"2\":{\"72\":1}}],[\"console\",{\"1\":{\"55\":1}}],[\"const\",{\"1\":{\"39\":1,\"46\":1,\"62\":1,\"63\":1}}],[\"concepts\",{\"1\":{\"181\":1}}],[\"concept\",{\"1\":{\"29\":1}}],[\"context\",{\"1\":{\"96\":8}}],[\"contents\",{\"1\":{\"24\":1}}],[\"content\",{\"0\":{\"5\":1,\"69\":1},\"1\":{\"0\":1,\"21\":1,\"30\":1,\"63\":1,\"66\":1}}],[\"contaienrd\",{\"1\":{\"175\":2}}],[\"containers\",{\"1\":{\"175\":1,\"178\":1,\"180\":2}}],[\"containernetworking\",{\"1\":{\"175\":1}}],[\"containerd\",{\"0\":{\"173\":1},\"1\":{\"175\":29,\"178\":2,\"180\":1,\"187\":2}}],[\"container\",{\"1\":{\"46\":5,\"161\":1,\"175\":2}}],[\"contain\",{\"1\":{\"24\":1}}],[\"containsfunc\",{\"1\":{\"85\":1}}],[\"contains\",{\"1\":{\"3\":1,\"24\":1,\"85\":1}}],[\"contact\",{\"1\":{\"61\":4}}],[\"control\",{\"1\":{\"181\":15}}],[\"controllermanager\",{\"1\":{\"178\":1}}],[\"controller\",{\"1\":{\"94\":1,\"117\":2,\"118\":1,\"181\":4}}],[\"controlling\",{\"1\":{\"7\":1}}],[\"contributors\",{\"1\":{\"18\":1,\"24\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
