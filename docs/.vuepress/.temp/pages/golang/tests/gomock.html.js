import comp from "/Users/costalong/code/web/vuepress-starter/docs/.vuepress/.temp/pages/golang/tests/gomock.html.vue"
const data = JSON.parse("{\"path\":\"/golang/tests/gomock.html\",\"title\":\"golang 单元测试 gomock\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"golang 单元测试 gomock\",\"icon\":\"golang2\",\"description\":\"简介 GoMock是由Golang官方开发维护的测试框架，实现了较为完整的基于interface的Mock功能，能够与Golang内置的testing包良好集成，也能用于其它的测试环境中。GoMock测试框架包含了GoMock包和mockgen工具两部分，其中GoMock包完成对桩对象生命周期的管理，mockgen工具用来生成interface对应的M...\",\"gitInclude\":[],\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://costalong.com/website/golang/tests/gomock.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"云原生笔记\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"golang 单元测试 gomock\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"简介 GoMock是由Golang官方开发维护的测试框架，实现了较为完整的基于interface的Mock功能，能够与Golang内置的testing包良好集成，也能用于其它的测试环境中。GoMock测试框架包含了GoMock包和mockgen工具两部分，其中GoMock包完成对桩对象生命周期的管理，mockgen工具用来生成interface对应的M...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://costa92.oss-cn-hangzhou.aliyuncs.com/Blog/20240728233014.png\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Costa Long\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"golang 单元测试 gomock\\\",\\\"image\\\":[\\\"https://costa92.oss-cn-hangzhou.aliyuncs.com/Blog/20240728233014.png\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Costa Long\\\",\\\"url\\\":\\\"https://costalong.com\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"简介\",\"slug\":\"简介\",\"link\":\"#简介\",\"children\":[]},{\"level\":2,\"title\":\"安装使用\",\"slug\":\"安装使用\",\"link\":\"#安装使用\",\"children\":[{\"level\":3,\"title\":\"安装 mockgen\",\"slug\":\"安装-mockgen\",\"link\":\"#安装-mockgen\",\"children\":[]},{\"level\":3,\"title\":\"Go version < 1.16\",\"slug\":\"go-version-1-16\",\"link\":\"#go-version-1-16\",\"children\":[]},{\"level\":3,\"title\":\"Go 1.16+\",\"slug\":\"go-1-16\",\"link\":\"#go-1-16\",\"children\":[]},{\"level\":3,\"title\":\"mockgen辅助代码生成工具安装\",\"slug\":\"mockgen辅助代码生成工具安装\",\"link\":\"#mockgen辅助代码生成工具安装\",\"children\":[]}]},{\"level\":2,\"title\":\"mockgen 的参数说明\",\"slug\":\"mockgen-的参数说明\",\"link\":\"#mockgen-的参数说明\",\"children\":[]},{\"level\":2,\"title\":\"例子\",\"slug\":\"例子\",\"link\":\"#例子\",\"children\":[{\"level\":3,\"title\":\"1. 定义 user_service.go\",\"slug\":\"_1-定义-user-service-go\",\"link\":\"#_1-定义-user-service-go\",\"children\":[]},{\"level\":3,\"title\":\"2. 命令为接口生成 mock 实现\",\"slug\":\"_2-命令为接口生成-mock-实现\",\"link\":\"#_2-命令为接口生成-mock-实现\",\"children\":[]},{\"level\":3,\"title\":\"3. 生成 user_service_mock.go 文件,该文件在 mock 目录下，因为设置的 -destination 参数为 mock/user_service_mock.go\",\"slug\":\"_3-生成-user-service-mock-go-文件-该文件在-mock-目录下-因为设置的-destination-参数为-mock-user-service-mock-go\",\"link\":\"#_3-生成-user-service-mock-go-文件-该文件在-mock-目录下-因为设置的-destination-参数为-mock-user-service-mock-go\",\"children\":[]},{\"level\":3,\"title\":\"4.编辑写测试文件 user_service_test.go\",\"slug\":\"_4-编辑写测试文件-user-service-test-go\",\"link\":\"#_4-编辑写测试文件-user-service-test-go\",\"children\":[]},{\"level\":3,\"title\":\"5.测试\",\"slug\":\"_5-测试\",\"link\":\"#_5-测试\",\"children\":[]},{\"level\":3,\"title\":\"6.测试覆盖率\",\"slug\":\"_6-测试覆盖率\",\"link\":\"#_6-测试覆盖率\",\"children\":[]},{\"level\":3,\"title\":\"7. 可视化界面\",\"slug\":\"_7-可视化界面\",\"link\":\"#_7-可视化界面\",\"children\":[]}]},{\"level\":2,\"title\":\"mock/gomock 中使用函数说明\",\"slug\":\"mock-gomock-中使用函数说明\",\"link\":\"#mock-gomock-中使用函数说明\",\"children\":[{\"level\":3,\"title\":\"（1）自定义参数\",\"slug\":\"_1-自定义参数\",\"link\":\"#_1-自定义参数\",\"children\":[]},{\"level\":3,\"title\":\"（2）自定义返回值\",\"slug\":\"_2-自定义返回值\",\"link\":\"#_2-自定义返回值\",\"children\":[]},{\"level\":3,\"title\":\"（3）自定义mock调用次数\",\"slug\":\"_3-自定义mock调用次数\",\"link\":\"#_3-自定义mock调用次数\",\"children\":[]},{\"level\":3,\"title\":\"（4）自定义mock调用顺序\",\"slug\":\"_4-自定义mock调用顺序\",\"link\":\"#_4-自定义mock调用顺序\",\"children\":[]},{\"level\":3,\"title\":\"注意： 如果定义的 interface 包含另外一个 interface  并且不是同一个文件的情况\",\"slug\":\"注意-如果定义的-interface-包含另外一个-interface-并且不是同一个文件的情况\",\"link\":\"#注意-如果定义的-interface-包含另外一个-interface-并且不是同一个文件的情况\",\"children\":[]}]},{\"level\":2,\"title\":\"参考\",\"slug\":\"参考\",\"link\":\"#参考\",\"children\":[]}],\"readingTime\":{\"minutes\":7.96,\"words\":2389},\"filePathRelative\":\"golang/tests/gomock.md\",\"autoDesc\":true,\"excerpt\":\"<h2>简介</h2>\\n<p>GoMock是由Golang官方开发维护的测试框架，实现了较为完整的基于interface的Mock功能，能够与Golang内置的testing包良好集成，也能用于其它的测试环境中。GoMock测试框架包含了GoMock包和mockgen工具两部分，其中GoMock包完成对桩对象生命周期的管理，mockgen工具用来生成interface对应的Mock类源文件。</p>\\n<p>GoMock官网: <a href=\\\"https://github.com/golang/mock\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">github</a></p>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
